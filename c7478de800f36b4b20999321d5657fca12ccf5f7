{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "ce2807c9_9c9321fc",
        "filename": "services/audiopolicy/common/managerdefinitions/src/DeviceDescriptor.cpp",
        "patchSetId": 1
      },
      "lineNbr": 230,
      "author": {
        "id": 1956242
      },
      "writtenOn": "2023-10-16T18:28:13Z",
      "side": 1,
      "message": "I\u0027m not sure if we want to replace ALOG_ASSERT with silent warning log, do we know why these null devices exist?",
      "range": {
        "startLine": 230,
        "startChar": 12,
        "endLine": 230,
        "endChar": 20
      },
      "revId": "c7478de800f36b4b20999321d5657fca12ccf5f7",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3b6eec26_8971d812",
        "filename": "services/audiopolicy/common/managerdefinitions/src/DeviceDescriptor.cpp",
        "patchSetId": 1
      },
      "lineNbr": 230,
      "author": {
        "id": 1956242
      },
      "writtenOn": "2023-10-17T16:20:57Z",
      "side": 1,
      "message": "Actually it\u0027s not just fuzzing case which could cause a nullptr in this vector, see this logic:\n\nhttps://source.corp.google.com/h/googleplex-android/platform/superproject/main/+/main:frameworks/av/services/audiopolicy/common/managerdefinitions/src/HwModule.cpp;l\u003d187;drc\u003deacdf1a9591a3f5ba49edfd4380a8598c6bfcec7\n\nIt\u0027s possible for `getDeviceFromTagName` to return nullptr add it will be added to SourceDevices DeviceVector. I wouldn\u0027t be surprised that some other places may also have similar logic.",
      "parentUuid": "ce2807c9_9c9321fc",
      "range": {
        "startLine": 230,
        "startChar": 12,
        "endLine": 230,
        "endChar": 20
      },
      "revId": "c7478de800f36b4b20999321d5657fca12ccf5f7",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8990ad72_ff76b45a",
        "filename": "services/audiopolicy/common/managerdefinitions/src/DeviceDescriptor.cpp",
        "patchSetId": 1
      },
      "lineNbr": 230,
      "author": {
        "id": 1042638
      },
      "writtenOn": "2023-10-17T21:28:02Z",
      "side": 1,
      "message": "I suppose, the original intent of using an assert was to figure out cases when the code attempts to add a null element. However, since it wasn\u0027t `ALWAYS_FATAL` typically this check was just compiled out. Now, thanks to the fuzzer, we have an idea that this can happen, so we should just guard against this case.\n\nI think, we don\u0027t even need a log here, because trying to add a null element should be treated in the same category of mishaps as trying an element which already exists. So we just silently ignore this case. Thus we can actually just modify line 232 to be:\n\n```\nif (device !\u003d nullptr \u0026\u0026 indexOf(device) \u003c 0 \u0026\u0026 SortedVector::add(device) \u003e\u003d 0) {\n```",
      "parentUuid": "3b6eec26_8971d812",
      "range": {
        "startLine": 230,
        "startChar": 12,
        "endLine": 230,
        "endChar": 20
      },
      "revId": "c7478de800f36b4b20999321d5657fca12ccf5f7",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "4716cba1_aac005f0",
        "filename": "services/audiopolicy/common/managerdefinitions/src/DeviceDescriptor.cpp",
        "patchSetId": 1
      },
      "lineNbr": 230,
      "author": {
        "id": 1590836
      },
      "writtenOn": "2023-10-19T14:09:01Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "8990ad72_ff76b45a",
      "range": {
        "startLine": 230,
        "startChar": 12,
        "endLine": 230,
        "endChar": 20
      },
      "revId": "c7478de800f36b4b20999321d5657fca12ccf5f7",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f5a6b1f6_dc720142",
        "filename": "services/audiopolicy/common/managerdefinitions/src/DeviceDescriptor.cpp",
        "patchSetId": 1
      },
      "lineNbr": 245,
      "author": {
        "id": 1042638
      },
      "writtenOn": "2023-10-17T21:28:02Z",
      "side": 1,
      "message": "In this case, it\u0027s OK to have a warning as this matches the behavior on line 257. We just need to add `DeviceVector::add`, and this will allow to make the message shorter:\n\n```\n\"DeviceVector::add null device\"\n```",
      "range": {
        "startLine": 245,
        "startChar": 0,
        "endLine": 245,
        "endChar": 53
      },
      "revId": "c7478de800f36b4b20999321d5657fca12ccf5f7",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b4f6789e_b85d1bca",
        "filename": "services/audiopolicy/common/managerdefinitions/src/DeviceDescriptor.cpp",
        "patchSetId": 1
      },
      "lineNbr": 245,
      "author": {
        "id": 1590836
      },
      "writtenOn": "2023-10-19T14:09:01Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "f5a6b1f6_dc720142",
      "range": {
        "startLine": 245,
        "startChar": 0,
        "endLine": 245,
        "endChar": 53
      },
      "revId": "c7478de800f36b4b20999321d5657fca12ccf5f7",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}