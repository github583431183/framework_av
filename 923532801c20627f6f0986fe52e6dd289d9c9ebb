{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "ff485e0d_d2c82f92",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1108919
      },
      "writtenOn": "2021-03-10T17:02:50Z",
      "side": 1,
      "message": "while this may make the apex file smaller, don\u0027t we need an uncompressed copy that is the backing storage for the loopback mount when we mount the apex on a running system?\n\nthis would seem to be a net loss -- because we\u0027d have both a compressed and uncompressed copy of the file around in a running system.   or can the loopback filesystems deal with a compressed file underneath?",
      "revId": "923532801c20627f6f0986fe52e6dd289d9c9ebb",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "be1d5abe_8b5eb510",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1432579
      },
      "writtenOn": "2021-03-10T17:07:12Z",
      "side": 1,
      "message": "We only going to compress pre-installed copy of udpatable apexes. While until the first push it\u0027s a net loss, once an update is delivered it\u0027s a net gain: without compression you have 2x (copy on system, copy on data), while with compression you\u0027ll get 1.5x (0.5x for compressed system copy, uncompressed updated version on data)",
      "parentUuid": "ff485e0d_d2c82f92",
      "revId": "923532801c20627f6f0986fe52e6dd289d9c9ebb",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ff207b9a_e5ca28c0",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1108919
      },
      "writtenOn": "2021-03-10T17:42:15Z",
      "side": 1,
      "message": "that makes sense.\n\nwhy does it need to bubble up to my apex definition? that probably breaks down to things like: why would i not allow compression of the apex? seems like it could be entirely under the covers of the build system.",
      "parentUuid": "be1d5abe_8b5eb510",
      "revId": "923532801c20627f6f0986fe52e6dd289d9c9ebb",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "9fb356bb_fc78308f",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1432579
      },
      "writtenOn": "2021-03-10T17:59:11Z",
      "side": 1,
      "message": "Not all apexes can\u0027t be compressed, and build system is probably not the right place to handle that. Here are few examples of apexes that can\u0027t be compressed:\n\n* apexes required to be mounted before /data is mounted (bootstrap apexes).\n* apexes that are used for dynamic library optimization. For such apexes we always need to mount two versions: one on /system and one on /data.\n* test apexes.\n\nWhile we can make this an opt-out feature, so far we decided to start with opt-in approach as it allows us to control exactly what apexes can be compressed.",
      "parentUuid": "ff207b9a_e5ca28c0",
      "revId": "923532801c20627f6f0986fe52e6dd289d9c9ebb",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}