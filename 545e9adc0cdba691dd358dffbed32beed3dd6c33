{
  "comments": [
    {
      "key": {
        "uuid": "16715db5_b58bbf5d",
        "filename": "services/audiopolicy/engineconfigurable/tools/buildCommonTypesStructureFile.py",
        "patchSetId": 1
      },
      "lineNbr": 55,
      "author": {
        "id": 1003259
      },
      "writtenOn": "2020-09-09T00:05:59Z",
      "side": 1,
      "message": "i don\u0027t understand how this works when the list of \"values\" in the input file contain holes (for instance jumps from 0x1 to 0x8).\n\nGiven this is just a fix for the build we should just skip and invalid value (more than one bit set).",
      "range": {
        "startLine": 55,
        "startChar": 0,
        "endLine": 55,
        "endChar": 29
      },
      "revId": "545e9adc0cdba691dd358dffbed32beed3dd6c33",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "13b501d1_9a3ce677",
        "filename": "services/audiopolicy/engineconfigurable/tools/buildCommonTypesStructureFile.py",
        "patchSetId": 1
      },
      "lineNbr": 55,
      "author": {
        "id": 1608690
      },
      "writtenOn": "2020-09-09T01:12:27Z",
      "side": 1,
      "message": "I do agree with you, this code doesn\u0027t work in that case. audio-base.h has to guarantee no such hole. Do you have any better idea to address it? I don\u0027t want to add hardcode 0x20000001 here.\n\nIn aosp/1399204, AUDIO_DEVICE_OUT_BLE_SPEAKER is set 0x20000001u. If we skip the value (more than one bit set), it will not be in the generate file.",
      "parentUuid": "16715db5_b58bbf5d",
      "range": {
        "startLine": 55,
        "startChar": 0,
        "endLine": 55,
        "endChar": 29
      },
      "revId": "545e9adc0cdba691dd358dffbed32beed3dd6c33",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0696c0a4_7bd50483",
        "filename": "services/audiopolicy/engineconfigurable/tools/buildCommonTypesStructureFile.py",
        "patchSetId": 1
      },
      "lineNbr": 55,
      "author": {
        "id": 1003259
      },
      "writtenOn": "2020-09-09T01:48:25Z",
      "side": 1,
      "message": "I am OK with skipping incompatible (not power of two after masking bit 31) values for now.\nWe do not support BLE devices yet and b/168065706 tracks the true fix.\n\nAs a simple non optimized fix you can go over all bits, make a note of the first 1 encountered but continue until bit 31: if you encounter another 1 then return -1:",
      "parentUuid": "13b501d1_9a3ce677",
      "range": {
        "startLine": 55,
        "startChar": 0,
        "endLine": 55,
        "endChar": 29
      },
      "revId": "545e9adc0cdba691dd358dffbed32beed3dd6c33",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6d7b6875_02bc4199",
        "filename": "services/audiopolicy/engineconfigurable/tools/buildCommonTypesStructureFile.py",
        "patchSetId": 1
      },
      "lineNbr": 55,
      "author": {
        "id": 1608690
      },
      "writtenOn": "2020-09-09T05:37:06Z",
      "side": 1,
      "message": "Got it, done in the new patch.",
      "parentUuid": "0696c0a4_7bd50483",
      "range": {
        "startLine": 55,
        "startChar": 0,
        "endLine": 55,
        "endChar": 29
      },
      "revId": "545e9adc0cdba691dd358dffbed32beed3dd6c33",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3202f195_01f9c35f",
        "filename": "services/audiopolicy/engineconfigurable/tools/buildCommonTypesStructureFile.py",
        "patchSetId": 1
      },
      "lineNbr": 82,
      "author": {
        "id": 1003259
      },
      "writtenOn": "2020-09-09T00:05:59Z",
      "side": 1,
      "message": "can you add a TODO comment referencing b/168065706 indicating that this is just to fix the build and that the problem of devices with multiple bits set must be addressed more generally in the configurable audio policy and parameter framework",
      "range": {
        "startLine": 82,
        "startChar": 0,
        "endLine": 82,
        "endChar": 58
      },
      "revId": "545e9adc0cdba691dd358dffbed32beed3dd6c33",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "78e2db21_1c87b8fa",
        "filename": "services/audiopolicy/engineconfigurable/tools/buildCommonTypesStructureFile.py",
        "patchSetId": 1
      },
      "lineNbr": 82,
      "author": {
        "id": 1608690
      },
      "writtenOn": "2020-09-09T01:12:27Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "3202f195_01f9c35f",
      "range": {
        "startLine": 82,
        "startChar": 0,
        "endLine": 82,
        "endChar": 58
      },
      "revId": "545e9adc0cdba691dd358dffbed32beed3dd6c33",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}