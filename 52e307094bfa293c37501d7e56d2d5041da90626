{
  "comments": [
    {
      "key": {
        "uuid": "e4524c25_f3744ea3",
        "filename": "/COMMIT_MSG",
        "patchSetId": 3
      },
      "lineNbr": 13,
      "author": {
        "id": 1108919
      },
      "writtenOn": "2020-08-14T19:24:17Z",
      "side": 1,
      "message": "i thought \"Bug: 162741791\" was the preferred form.",
      "range": {
        "startLine": 13,
        "startChar": 0,
        "endLine": 13,
        "endChar": 16
      },
      "revId": "52e307094bfa293c37501d7e56d2d5041da90626",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c1c6e220_4fd5733b",
        "filename": "/COMMIT_MSG",
        "patchSetId": 3
      },
      "lineNbr": 13,
      "author": {
        "id": 1060104
      },
      "writtenOn": "2020-08-14T22:58:57Z",
      "side": 1,
      "message": "Done, but using \"Fixes\" to mark close the bug too (mixed this up with FIXED\u003d used in google3!).",
      "parentUuid": "e4524c25_f3744ea3",
      "range": {
        "startLine": 13,
        "startChar": 0,
        "endLine": 13,
        "endChar": 16
      },
      "revId": "52e307094bfa293c37501d7e56d2d5041da90626",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "125e0042_bc25ff83",
        "filename": "media/libmedia/IMediaPlayer.cpp",
        "patchSetId": 3
      },
      "lineNbr": 88,
      "author": {
        "id": 1108919
      },
      "writtenOn": "2020-08-14T19:22:15Z",
      "side": 1,
      "message": "might have to change this to a status_t if we\u0027re going to\npropagate error conditions back to the caller in the PREPARE_DRM case below.",
      "range": {
        "startLine": 88,
        "startChar": 7,
        "endLine": 88,
        "endChar": 13
      },
      "revId": "52e307094bfa293c37501d7e56d2d5041da90626",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5a18c02c_bff7cf56",
        "filename": "media/libmedia/IMediaPlayer.cpp",
        "patchSetId": 3
      },
      "lineNbr": 965,
      "author": {
        "id": 1108919
      },
      "writtenOn": "2020-08-14T19:22:15Z",
      "side": 1,
      "message": "i know this returns a success/failure indication (e.g. for a short parcel where we don\u0027t have enough information in the parcel to read out the uuid....)\n\nshould we perhaps:\n    status_t status \u003d data.read()\n    if (status !\u003d OK) {\n        figure out an appropriate error return value/",
      "range": {
        "startLine": 965,
        "startChar": 12,
        "endLine": 965,
        "endChar": 22
      },
      "revId": "52e307094bfa293c37501d7e56d2d5041da90626",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "32d74bf4_02a7541f",
        "filename": "media/libmedia/IMediaPlayer.cpp",
        "patchSetId": 3
      },
      "lineNbr": 965,
      "author": {
        "id": 1060104
      },
      "writtenOn": "2020-08-14T22:58:57Z",
      "side": 1,
      "message": "I got as far as:\n\n    uint32_t size \u003d reply.readUint32();\n    vector.insertAt((size_t)0, size);\n\n... and started to wonder how large the DRM session ID that ends up here can be, so we can put a limit on the number of elements allocated.\n\nGiven it seemed non-trivial to figure this out, I first wanted to check whether we definitely need to fail gracefully when handling arbitrary (maliciously malformed) data when handling the binder calls. That seems to go a step above just avoiding exposing uninitialized memory, which this change was originally intended to do. Do we need to add this extra error handling?",
      "parentUuid": "5a18c02c_bff7cf56",
      "range": {
        "startLine": 965,
        "startChar": 12,
        "endLine": 965,
        "endChar": 22
      },
      "revId": "52e307094bfa293c37501d7e56d2d5041da90626",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "25578696_03c3c767",
        "filename": "media/libmedia/IMediaPlayer.cpp",
        "patchSetId": 3
      },
      "lineNbr": 965,
      "author": {
        "id": 1108919
      },
      "writtenOn": "2020-08-25T22:55:07Z",
      "side": 1,
      "message": "take a peek at ag/12388536 as a possibility.",
      "parentUuid": "32d74bf4_02a7541f",
      "range": {
        "startLine": 965,
        "startChar": 12,
        "endLine": 965,
        "endChar": 22
      },
      "revId": "52e307094bfa293c37501d7e56d2d5041da90626",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "90fed59f_407c11b3",
        "filename": "media/libmedia/IMediaPlayer.cpp",
        "patchSetId": 3
      },
      "lineNbr": 967,
      "author": {
        "id": 1108919
      },
      "writtenOn": "2020-08-14T19:22:15Z",
      "side": 1,
      "message": "presumably this could run into issues too -- e.g. not enough data in the parcel.\n\nI don\u0027t know enough about what we\u0027re supposed to return here (e.g. what goes into\n\u0027result\u0027 before we send it back to know what value we want to send back if things\nwere bad for some reason.\n\nmaybe prepareDrm returns an appropriate failure if the uuid is all zeroes or if the\ndrmSessionId is short/empty.  I don\u0027t know enough to say for sure.",
      "range": {
        "startLine": 967,
        "startChar": 12,
        "endLine": 967,
        "endChar": 22
      },
      "revId": "52e307094bfa293c37501d7e56d2d5041da90626",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    }
  ]
}