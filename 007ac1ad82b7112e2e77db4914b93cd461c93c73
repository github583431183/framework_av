{
  "comments": [
    {
      "key": {
        "uuid": "7d81ce43_f0bb9d0f",
        "filename": "media/libmedia/MediaUtils.cpp",
        "patchSetId": 7
      },
      "lineNbr": 69,
      "author": {
        "id": 1040213
      },
      "writtenOn": "2019-03-19T00:53:38Z",
      "side": 1,
      "message": "do we need the same maxMem !\u003d SIZE_MAX test as on line 63?",
      "range": {
        "startLine": 69,
        "startChar": 7,
        "endLine": 69,
        "endChar": 9
      },
      "revId": "007ac1ad82b7112e2e77db4914b93cd461c93c73",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "00277803_3eb0e172",
        "filename": "media/libmedia/MediaUtils.cpp",
        "patchSetId": 7
      },
      "lineNbr": 69,
      "author": {
        "id": 1067098
      },
      "writtenOn": "2019-03-19T01:07:02Z",
      "side": 1,
      "message": "I don\u0027t think it should be necessary. Either way, we will fail (either because of limit check or because the allocator will fail).",
      "parentUuid": "7d81ce43_f0bb9d0f",
      "range": {
        "startLine": 69,
        "startChar": 7,
        "endLine": 69,
        "endChar": 9
      },
      "revId": "007ac1ad82b7112e2e77db4914b93cd461c93c73",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b8cbc63e_7fc52309",
        "filename": "services/mediaextractor/seccomp_policy/mediaextractor-arm.policy",
        "patchSetId": 7
      },
      "lineNbr": 17,
      "author": {
        "id": 1040213
      },
      "writtenOn": "2019-03-19T00:53:38Z",
      "side": 1,
      "message": "do we need the same change for mediaextractor-arm64.policy and mediaextractor-x86_64.policy?",
      "range": {
        "startLine": 17,
        "startChar": 0,
        "endLine": 17,
        "endChar": 7
      },
      "revId": "007ac1ad82b7112e2e77db4914b93cd461c93c73",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7941eb61_6b46c21e",
        "filename": "services/mediaextractor/seccomp_policy/mediaextractor-arm.policy",
        "patchSetId": 7
      },
      "lineNbr": 17,
      "author": {
        "id": 1067098
      },
      "writtenOn": "2019-03-19T01:07:02Z",
      "side": 1,
      "message": "x86_64 already has it, see https://android-review.googlesource.com/c/platform/frameworks/av/+/874952/\n\nThe scudo runtime uses openat on arm64, which is already whitelisted: https://cs.corp.google.com/android/frameworks/av/services/mediaextractor/seccomp_policy/mediaextractor-arm64.policy?l\u003d12 . See http://llvm-cs.pcc.me.uk/projects/compiler-rt/lib/sanitizer_common/sanitizer_linux.cc#204 and click through to definition of SANITIZER_USES_CANONICAL_LINUX_SYSCALLS\n\nAlso my change doesn\u0027t affect whether any particular 64b binary calls  __scudo_set_rss_limit, so if this were an issue we would have seen it already.",
      "parentUuid": "b8cbc63e_7fc52309",
      "range": {
        "startLine": 17,
        "startChar": 0,
        "endLine": 17,
        "endChar": 7
      },
      "revId": "007ac1ad82b7112e2e77db4914b93cd461c93c73",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    }
  ]
}