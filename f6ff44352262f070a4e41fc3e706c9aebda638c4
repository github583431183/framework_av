{
  "comments": [
    {
      "key": {
        "uuid": "40b11181_68cddee7",
        "filename": "media/libstagefright/tests/writer/WriterTest.cpp",
        "patchSetId": 1
      },
      "lineNbr": 310,
      "author": {
        "id": 1108919
      },
      "writtenOn": "2020-05-01T18:55:12Z",
      "side": 1,
      "message": "per my suggestion below... this would turn into\n. get the mime string from getParam().second\n-- use that to find the appropriate slot within the table, yielding an inputFileIdx\n-- then you can use the index going forward through the rest of the test.",
      "range": {
        "startLine": 309,
        "startChar": 4,
        "endLine": 310,
        "endChar": 71
      },
      "revId": "f6ff44352262f070a4e41fc3e706c9aebda638c4",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a952d492_971dca40",
        "filename": "media/libstagefright/tests/writer/WriterTest.cpp",
        "patchSetId": 1
      },
      "lineNbr": 574,
      "author": {
        "id": 1108919
      },
      "writtenOn": "2020-05-01T18:50:09Z",
      "side": 1,
      "message": "the 2nd param looks to be an index into kInputData[]\n\ni\u0027d rather see it use something that is not order dependent.\nit appears that this table has exactly 1 entry for any given MIME type;\nperhaps have it lookup the mime type in the table.",
      "range": {
        "startLine": 574,
        "startChar": 61,
        "endLine": 574,
        "endChar": 66
      },
      "revId": "f6ff44352262f070a4e41fc3e706c9aebda638c4",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7b9158e6_0d7e153d",
        "filename": "media/libstagefright/tests/writer/WriterTest.cpp",
        "patchSetId": 1
      },
      "lineNbr": 574,
      "author": {
        "id": 1047003
      },
      "writtenOn": "2020-05-04T15:13:36Z",
      "side": 1,
      "message": "Ray,\nThough the table has exactly one entry per given MIME type now, that is not the intent of the table.\nFor writers, we need multiple inputs like raw stream, a file to indicate size of each frame/header, width, height for video, sample rate, number of channels for audio etc for each input. Instead of giving all this information in each test case, these are added to a table and an index to the table is being used.\nI agree with the concern about this being order dependent.\nSo instead of passing MIME, is it okay if we add another entry to the table \"OPUS_1\", \"AAC_1\", \"H264_1\" and so on and pass those here? GetFileDetails will use these newly defined enums and search through the table and return relevant details.\nThis way whenever a new file is to be added to the table, an enum will be added and table will be updated with another entry.\nPlease let us know if this looks fine.",
      "parentUuid": "a952d492_971dca40",
      "range": {
        "startLine": 574,
        "startChar": 61,
        "endLine": 574,
        "endChar": 66
      },
      "revId": "f6ff44352262f070a4e41fc3e706c9aebda638c4",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "742ee2d0_3830aee6",
        "filename": "media/libstagefright/tests/writer/WriterTest.cpp",
        "patchSetId": 1
      },
      "lineNbr": 574,
      "author": {
        "id": 1108919
      },
      "writtenOn": "2020-05-04T17:51:13Z",
      "side": 1,
      "message": "no problem with using a separate key to identify them; i picked mime just because it was already there.\n\nmy complaint was with the ordering dependency.",
      "parentUuid": "7b9158e6_0d7e153d",
      "range": {
        "startLine": 574,
        "startChar": 61,
        "endLine": 574,
        "endChar": 66
      },
      "revId": "f6ff44352262f070a4e41fc3e706c9aebda638c4",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    }
  ]
}