{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "4a18d774_40269037",
        "filename": "services/audiopolicy/common/managerdefinitions/src/HwModule.cpp",
        "patchSetId": 2
      },
      "lineNbr": 69,
      "author": {
        "id": 1003259
      },
      "writtenOn": "2023-11-16T09:05:52Z",
      "side": 1,
      "message": "I think we should rather assert if the profile is declared with compressed formats and not on a direct output: this is a configuration error by the OEM.",
      "range": {
        "startLine": 69,
        "startChar": 0,
        "endLine": 69,
        "endChar": 74
      },
      "revId": "a034f408ad0ff0a9a41d3fd7bc6e097d99ec5feb",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b57ae445_88348ee5",
        "filename": "services/audiopolicy/common/managerdefinitions/src/HwModule.cpp",
        "patchSetId": 2
      },
      "lineNbr": 69,
      "author": {
        "id": 1133568
      },
      "writtenOn": "2023-11-16T14:47:20Z",
      "side": 1,
      "message": "Acknowledged. I\u0027ve amended and in PS3 the flags are now passed in from registerPolicyMixes. What I\u0027m wanting to achieve is something similar to AudioPolicyManagerTestMsd::SetUpManagerConfig() profiles where the flags are manually set. It seems for remote submix, the IO profiles aren\u0027t added from the parsed audio policy XML / config, but need to be manually added as part of registerPolicyMixes so I\u0027m needing to add the DIRECT flags so that inputs / outputs can be found by APM on AudioRecord / AudioTrack requests.",
      "parentUuid": "4a18d774_40269037",
      "range": {
        "startLine": 69,
        "startChar": 0,
        "endLine": 69,
        "endChar": 74
      },
      "revId": "a034f408ad0ff0a9a41d3fd7bc6e097d99ec5feb",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ff5196c0_15747584",
        "filename": "services/audiopolicy/common/managerdefinitions/src/HwModule.cpp",
        "patchSetId": 2
      },
      "lineNbr": 69,
      "author": {
        "id": 1003259
      },
      "writtenOn": "2023-11-17T16:19:00Z",
      "side": 1,
      "message": "This is in order to support compressed audio on the remote submix path?\nIs there a CL modifying the remote submix module to support non PCM data?\nin this case are we exposing both PCm static profiles and dynamic output profiles in the audio policy config file for remote submix?",
      "parentUuid": "b57ae445_88348ee5",
      "range": {
        "startLine": 69,
        "startChar": 0,
        "endLine": 69,
        "endChar": 74
      },
      "revId": "a034f408ad0ff0a9a41d3fd7bc6e097d99ec5feb",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "db3e28d8_50490895",
        "filename": "services/audiopolicy/common/managerdefinitions/src/HwModule.cpp",
        "patchSetId": 2
      },
      "lineNbr": 69,
      "author": {
        "id": 1133568
      },
      "writtenOn": "2023-11-19T21:39:37Z",
      "side": 1,
      "message": "Yes this is to support compressed audio wrapped as IEC61937 and signalled as PCM through the remote submix HAL.\n\nhttps://android-review.googlesource.com/c/platform/hardware/interfaces/+/2832731 is the only remote submix HAL patch we have so far, and the change centres on signalling to support AudioFlinger to attempt the raw E-AC3-JOC stream open, for it to fail, and for AudioFlinger to try-again as wrapped IEC61937 but signalled as PCM (as per its current AudioFlinger SpdifStreamOut implementation).\n\nFor remote submix we are updating AIDL implementation so far only which has the config read in from the HAL itself rather than from a config (XML) file.",
      "parentUuid": "ff5196c0_15747584",
      "range": {
        "startLine": 69,
        "startChar": 0,
        "endLine": 69,
        "endChar": 74
      },
      "revId": "a034f408ad0ff0a9a41d3fd7bc6e097d99ec5feb",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}