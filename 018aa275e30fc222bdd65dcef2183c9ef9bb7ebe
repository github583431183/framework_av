{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "a3222804_02b3a614",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1993856
      },
      "writtenOn": "2023-03-13T08:20:57Z",
      "side": 1,
      "message": "hi allï¼Œplease have a review for this bug",
      "revId": "018aa275e30fc222bdd65dcef2183c9ef9bb7ebe",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ded2898a_56bc95df",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1042638
      },
      "writtenOn": "2023-03-13T16:46:27Z",
      "side": 1,
      "message": "I think, Shunkai has more context on this.",
      "revId": "018aa275e30fc222bdd65dcef2183c9ef9bb7ebe",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a1a7b9c3_ad358b0e",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1003259
      },
      "writtenOn": "2023-03-13T17:12:40Z",
      "side": 1,
      "message": "Given that outside of the VTS context, the audio framework is responsible for the locking and thread safety when accessing the effect HAL, shouldn\u0027t this be the responsibility of the VTS test implementation? \nI don\u0027t think we ever requested the effect implementations to be thread safe.",
      "revId": "018aa275e30fc222bdd65dcef2183c9ef9bb7ebe",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "3bba66a2_da0db427",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1042638
      },
      "writtenOn": "2023-03-13T17:31:32Z",
      "side": 1,
      "message": "I agree that VTS test should have threading behavior similar to the framework\u0027s. Normally the HAL only has a single client, and method calls made via Binder are serialized if invoked by the client from the same thread. Thus, it is assumed that the interface implementation may avoid serialization internally, and unless the AIDL of the interface states that it\u0027s OK to use it from multiple threads, the client should not assume so, and serialize on its side.\n\nIf there are other ways to access the implementation, requirements to the thread-safe implementation should be stated somewhere. This is an example for the core HAL: https://cs.android.com/android/platform/superproject/+/master:hardware/interfaces/audio/aidl/android/hardware/audio/core/StreamDescriptor.aidl;l\u003d30;drc\u003d30301a42c76f82485c657f66bcdd0654564e5c9e",
      "parentUuid": "a1a7b9c3_ad358b0e",
      "revId": "018aa275e30fc222bdd65dcef2183c9ef9bb7ebe",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f51a233f_1bc7cd21",
        "filename": "media/libeffects/lvm/wrapper/Bundle/EffectBundle.cpp",
        "patchSetId": 1
      },
      "lineNbr": 220,
      "author": {
        "id": 1042638
      },
      "writtenOn": "2023-03-13T16:46:27Z",
      "side": 1,
      "message": "Can use `+\u003d 1` for consistency. It will be easier to find all places where the count is being increased.",
      "range": {
        "startLine": 220,
        "startChar": 66,
        "endLine": 220,
        "endChar": 69
      },
      "revId": "018aa275e30fc222bdd65dcef2183c9ef9bb7ebe",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "55ea3f43_3eeb4a2b",
        "filename": "media/libeffects/lvm/wrapper/Bundle/EffectBundle.cpp",
        "patchSetId": 1
      },
      "lineNbr": 220,
      "author": {
        "id": 1993856
      },
      "writtenOn": "2023-03-14T02:27:30Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "f51a233f_1bc7cd21",
      "range": {
        "startLine": 220,
        "startChar": 66,
        "endLine": 220,
        "endChar": 69
      },
      "revId": "018aa275e30fc222bdd65dcef2183c9ef9bb7ebe",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "99af013f_ab042c59",
        "filename": "media/libeffects/lvm/wrapper/Bundle/EffectBundle.h",
        "patchSetId": 1
      },
      "lineNbr": 104,
      "author": {
        "id": 1042638
      },
      "writtenOn": "2023-03-13T16:46:27Z",
      "side": 1,
      "message": "Using \u0027char\u0027 for counters is something we would do on an 8-bit CPU ðŸ˜Š. The compiler will align the fields anyway, and this field will effectively use 4 bytes.",
      "range": {
        "startLine": 104,
        "startChar": 4,
        "endLine": 104,
        "endChar": 8
      },
      "revId": "018aa275e30fc222bdd65dcef2183c9ef9bb7ebe",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "3074a64a_e62fc0c5",
        "filename": "media/libeffects/lvm/wrapper/Bundle/EffectBundle.h",
        "patchSetId": 1
      },
      "lineNbr": 104,
      "author": {
        "id": 1993856
      },
      "writtenOn": "2023-03-14T02:27:30Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "99af013f_ab042c59",
      "range": {
        "startLine": 104,
        "startChar": 4,
        "endLine": 104,
        "endChar": 8
      },
      "revId": "018aa275e30fc222bdd65dcef2183c9ef9bb7ebe",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}