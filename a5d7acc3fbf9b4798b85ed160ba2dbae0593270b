{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "78cc58c3_af8f91af",
        "filename": "media/libstagefright/rtsp/JitterCalculator.cpp",
        "patchSetId": 1
      },
      "lineNbr": 48,
      "author": {
        "id": 1021605
      },
      "writtenOn": "2021-09-03T08:51:09Z",
      "side": 1,
      "message": "could it be this the logic that\u0027s overflowing? If so a similar adjustment as there is originally in putInterArrivalData() could solve that.",
      "range": {
        "startLine": 48,
        "startChar": 31,
        "endLine": 48,
        "endChar": 69
      },
      "revId": "a5d7acc3fbf9b4798b85ed160ba2dbae0593270b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "820e5dd4_ba318580",
        "filename": "media/libstagefright/rtsp/JitterCalculator.cpp",
        "patchSetId": 1
      },
      "lineNbr": 68,
      "author": {
        "id": 1021605
      },
      "writtenOn": "2021-09-02T17:25:11Z",
      "side": 1,
      "message": "Can you please elaborate why the additional logic is needed? It seems that the overflow is trying to correct for this operation, where it ensures that both tempRtpTime and tempLastTimeStamp are in the same period. This operation does not concern mFirstTimeStamp.",
      "range": {
        "startLine": 68,
        "startChar": 34,
        "endLine": 68,
        "endChar": 65
      },
      "revId": "a5d7acc3fbf9b4798b85ed160ba2dbae0593270b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}