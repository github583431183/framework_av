{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "6a2d47a9_6f1208a1",
        "filename": "media/codec2/hidl/1.0/vts/functional/audio/VtsHalMediaC2V1_0TargetAudioDecTest.cpp",
        "patchSetId": 1
      },
      "lineNbr": 285,
      "author": {
        "id": 1108919
      },
      "writtenOn": "2021-09-20T23:22:15Z",
      "side": 1,
      "message": "i like this expression better than the pointer casting in the previous version.",
      "range": {
        "startLine": 285,
        "startChar": 72,
        "endLine": 285,
        "endChar": 86
      },
      "revId": "28f6bef995b3938404e2918bfbd3b90b0b534f39",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "62546b0e_2638d116",
        "filename": "media/codec2/hidl/1.0/vts/functional/audio/VtsHalMediaC2V1_0TargetAudioDecTest.cpp",
        "patchSetId": 1
      },
      "lineNbr": 294,
      "author": {
        "id": 1108919
      },
      "writtenOn": "2021-09-20T23:22:15Z",
      "side": 1,
      "message": "from line 283/285/286, we know there is a []1 that holds channel information.\nshouldn\u0027t we have a channel-count assert here?   i don\u0027t remember if GSM is mono, stereo,\nor possibly other.\n\na quick scan of our gsm plugin seems to point at \u0027always mono\u0027.",
      "range": {
        "startLine": 294,
        "startChar": 18,
        "endLine": 294,
        "endChar": 37
      },
      "revId": "28f6bef995b3938404e2918bfbd3b90b0b534f39",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d9784cbe_99cf3e6f",
        "filename": "media/codec2/hidl/1.0/vts/functional/audio/VtsHalMediaC2V1_0TargetAudioEncTest.cpp",
        "patchSetId": 1
      },
      "lineNbr": 306,
      "author": {
        "id": 1108919
      },
      "writtenOn": "2021-09-20T23:22:15Z",
      "side": 1,
      "message": "this is probably better represented with a constant:\n\nkBytesPerSample  or kSampleSize or something like that.\nthere\u0027s at least 1 other place where we use literal \u00272\u0027.",
      "range": {
        "startLine": 306,
        "startChar": 60,
        "endLine": 306,
        "endChar": 62
      },
      "revId": "28f6bef995b3938404e2918bfbd3b90b0b534f39",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a3879808_7909979d",
        "filename": "media/codec2/hidl/1.0/vts/functional/audio/VtsHalMediaC2V1_0TargetAudioEncTest.cpp",
        "patchSetId": 1
      },
      "lineNbr": 334,
      "author": {
        "id": 1108919
      },
      "writtenOn": "2021-09-20T23:22:15Z",
      "side": 1,
      "message": "here\u0027s the other use I saw that could/should be replaced with a kBytesPerSample.\n\nfor when we start dealing with larger sized samples.",
      "range": {
        "startLine": 334,
        "startChar": 55,
        "endLine": 334,
        "endChar": 58
      },
      "revId": "28f6bef995b3938404e2918bfbd3b90b0b534f39",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2101cf53_5872ccd9",
        "filename": "media/codec2/hidl/1.0/vts/functional/audio/VtsHalMediaC2V1_0TargetAudioEncTest.cpp",
        "patchSetId": 1
      },
      "lineNbr": 443,
      "author": {
        "id": 1108919
      },
      "writtenOn": "2021-09-20T23:22:15Z",
      "side": 1,
      "message": "another lace kBytesPerSample would be appropriate.",
      "range": {
        "startLine": 443,
        "startChar": 83,
        "endLine": 443,
        "endChar": 85
      },
      "revId": "28f6bef995b3938404e2918bfbd3b90b0b534f39",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1b53a029_859fe178",
        "filename": "media/codec2/hidl/1.0/vts/functional/audio/VtsHalMediaC2V1_0TargetAudioEncTest.cpp",
        "patchSetId": 1
      },
      "lineNbr": 618,
      "author": {
        "id": 1108919
      },
      "writtenOn": "2021-09-20T23:22:15Z",
      "side": 1,
      "message": "kSampleSize",
      "range": {
        "startLine": 618,
        "startChar": 59,
        "endLine": 618,
        "endChar": 63
      },
      "revId": "28f6bef995b3938404e2918bfbd3b90b0b534f39",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4f30cbf5_15825645",
        "filename": "media/codec2/hidl/1.0/vts/functional/audio/VtsHalMediaC2V1_0TargetAudioEncTest.cpp",
        "patchSetId": 1
      },
      "lineNbr": 706,
      "author": {
        "id": 1108919
      },
      "writtenOn": "2021-09-20T23:22:15Z",
      "side": 1,
      "message": "and another place.\nlet\u0027s do it in a separate CL.",
      "range": {
        "startLine": 706,
        "startChar": 63,
        "endLine": 706,
        "endChar": 66
      },
      "revId": "28f6bef995b3938404e2918bfbd3b90b0b534f39",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3acbf89e_112bb849",
        "filename": "media/codec2/hidl/1.0/vts/functional/video/VtsHalMediaC2V1_0TargetVideoEncTest.cpp",
        "patchSetId": 1
      },
      "lineNbr": 541,
      "author": {
        "id": 1108919
      },
      "writtenOn": "2021-09-20T23:22:15Z",
      "side": 1,
      "message": "this will finish with whatever value was associated with the final P/B frame type that was included in that list.\n\nif it should be the 1st, then we should break once we\u0027ve set it.\nif they should all match, then we need to do some extra comparison work here.",
      "range": {
        "startLine": 541,
        "startChar": 19,
        "endLine": 541,
        "endChar": 41
      },
      "revId": "28f6bef995b3938404e2918bfbd3b90b0b534f39",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}