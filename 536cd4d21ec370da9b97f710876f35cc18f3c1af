{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "3440fa4e_8e4cf224",
        "filename": "media/libstagefright/codecs/amrnb/enc/fuzzer/amrnb_enc_fuzzer.cpp",
        "patchSetId": 2
      },
      "lineNbr": 68,
      "author": {
        "id": 1108919
      },
      "writtenOn": "2020-10-14T17:48:12Z",
      "side": 1,
      "message": "it seems that the 1st byte is some control information; that\u0027s fine.\nfollowed by the rest of the data to be run through the encoder.\n\nit seems we should consume that first byte here, not pass it along to the codec below -- \ni think we\u0027re missing a data++;size--; after we consume \u0027startByte\u0027.",
      "range": {
        "startLine": 66,
        "startChar": 2,
        "endLine": 68,
        "endChar": 42
      },
      "revId": "536cd4d21ec370da9b97f710876f35cc18f3c1af",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8a3a1e52_414302a5",
        "filename": "media/libstagefright/codecs/amrnb/enc/fuzzer/amrnb_enc_fuzzer.cpp",
        "patchSetId": 2
      },
      "lineNbr": 68,
      "author": {
        "id": 1047003
      },
      "writtenOn": "2020-10-14T18:05:31Z",
      "side": 1,
      "message": "It is not really necessary to consume the first byte.\nIdea of using a byte from the data that is passed here is to be able to set different mode and output formats.\nAlso for encoder input is raw data, so any bytes are fine.",
      "parentUuid": "3440fa4e_8e4cf224",
      "range": {
        "startLine": 66,
        "startChar": 2,
        "endLine": 68,
        "endChar": 42
      },
      "revId": "536cd4d21ec370da9b97f710876f35cc18f3c1af",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9dae47d8_23b065a9",
        "filename": "media/libstagefright/codecs/amrnb/enc/fuzzer/amrnb_enc_fuzzer.cpp",
        "patchSetId": 2
      },
      "lineNbr": 68,
      "author": {
        "id": 1108919
      },
      "writtenOn": "2020-10-14T20:29:20Z",
      "side": 1,
      "message": "that limits our ability to know whether a particular initial sequence (say what would map to very loud noise...) will cause an encoding problem.",
      "parentUuid": "8a3a1e52_414302a5",
      "range": {
        "startLine": 66,
        "startChar": 2,
        "endLine": 68,
        "endChar": 42
      },
      "revId": "536cd4d21ec370da9b97f710876f35cc18f3c1af",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "95ee1cf0_cf572231",
        "filename": "media/libstagefright/codecs/amrnb/enc/fuzzer/amrnb_enc_fuzzer.cpp",
        "patchSetId": 2
      },
      "lineNbr": 68,
      "author": {
        "id": 1653964
      },
      "writtenOn": "2020-10-16T16:57:47Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "9dae47d8_23b065a9",
      "range": {
        "startLine": 66,
        "startChar": 2,
        "endLine": 68,
        "endChar": 42
      },
      "revId": "536cd4d21ec370da9b97f710876f35cc18f3c1af",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6865f75c_d7f31d09",
        "filename": "media/libstagefright/codecs/amrnb/enc/fuzzer/amrnb_enc_fuzzer.cpp",
        "patchSetId": 2
      },
      "lineNbr": 76,
      "author": {
        "id": 1108919
      },
      "writtenOn": "2020-10-14T17:48:12Z",
      "side": 1,
      "message": "with a fixed size buffer on the stack like this..\nand if minSize doesn\u0027t fill it...\n\nwe don\u0027t know if the codec has OOB references beyond he end of the input (but still within the stack allocated space).\n\nif we\u0027re not worried about that, then this is fine.\n\nif we are worried about that, it seems that we would need to make a more exact-sized buffer (e.g. perhaps a malloc() call) which would let us detect reading past the end of the buffer (assuming asan/hwasan is being used as part of the fuzzing process)",
      "range": {
        "startLine": 76,
        "startChar": 11,
        "endLine": 76,
        "endChar": 37
      },
      "revId": "536cd4d21ec370da9b97f710876f35cc18f3c1af",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "cde26694_7c3accc6",
        "filename": "media/libstagefright/codecs/amrnb/enc/fuzzer/amrnb_enc_fuzzer.cpp",
        "patchSetId": 2
      },
      "lineNbr": 76,
      "author": {
        "id": 1047003
      },
      "writtenOn": "2020-10-14T18:05:31Z",
      "side": 1,
      "message": "AMREncode always encodes a frame worth of data, It doesn\u0027t take a size argument to signal how many of the input bytes need to be encoded.",
      "parentUuid": "6865f75c_d7f31d09",
      "range": {
        "startLine": 76,
        "startChar": 11,
        "endLine": 76,
        "endChar": 37
      },
      "revId": "536cd4d21ec370da9b97f710876f35cc18f3c1af",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "fb9fabac_8cac1997",
        "filename": "media/libstagefright/codecs/amrnb/enc/fuzzer/amrnb_enc_fuzzer.cpp",
        "patchSetId": 2
      },
      "lineNbr": 76,
      "author": {
        "id": 1108919
      },
      "writtenOn": "2020-10-14T20:29:20Z",
      "side": 1,
      "message": "so put another way, it always consumes exactly L_FRAME entties, which should be\nthe full contents of inputBuff[]\n[assuming we haven\u0027t mis-configured the size of inputBuf[]\nwhich should have L_FRAME entries.\nand since they are 16-bit entries, it should have L_FRAME*2 bytes.\nand the encoder should always be consuming exactly that many.\n\nI think we have kInputBufferSize mis-defined....  it would seem the array should have\nL_FRAME entries in it, but we defined kInputBufferSize to twice that.",
      "parentUuid": "cde26694_7c3accc6",
      "range": {
        "startLine": 76,
        "startChar": 11,
        "endLine": 76,
        "endChar": 37
      },
      "revId": "536cd4d21ec370da9b97f710876f35cc18f3c1af",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "226da8d8_0d777c33",
        "filename": "media/libstagefright/codecs/amrnb/enc/fuzzer/amrnb_enc_fuzzer.cpp",
        "patchSetId": 2
      },
      "lineNbr": 76,
      "author": {
        "id": 1653964
      },
      "writtenOn": "2020-10-16T16:57:47Z",
      "side": 1,
      "message": "Number of elements in the array \u0027inputBuf\u0027 has been set to \u0027kNumInputSamples\u0027 which denotes the number of samples rather than number of bytes.",
      "parentUuid": "fb9fabac_8cac1997",
      "range": {
        "startLine": 76,
        "startChar": 11,
        "endLine": 76,
        "endChar": 37
      },
      "revId": "536cd4d21ec370da9b97f710876f35cc18f3c1af",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "cd393df0_0038ded2",
        "filename": "media/libstagefright/codecs/amrnb/enc/fuzzer/amrnb_enc_fuzzer.cpp",
        "patchSetId": 2
      },
      "lineNbr": 76,
      "author": {
        "id": 1047003
      },
      "writtenOn": "2020-10-26T03:40:24Z",
      "side": 1,
      "message": "Marking this as resolved as CL has Code-Review +2",
      "parentUuid": "226da8d8_0d777c33",
      "range": {
        "startLine": 76,
        "startChar": 11,
        "endLine": 76,
        "endChar": 37
      },
      "revId": "536cd4d21ec370da9b97f710876f35cc18f3c1af",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d57af186_d1729dd8",
        "filename": "media/libstagefright/codecs/amrnb/enc/fuzzer/amrnb_enc_fuzzer.cpp",
        "patchSetId": 2
      },
      "lineNbr": 77,
      "author": {
        "id": 1108919
      },
      "writtenOn": "2020-10-14T20:29:20Z",
      "side": 1,
      "message": "a little uncomfortable with this being defined NOT in terms of L_FRAME;\n\nif L_FRAME were to get larger (unlikely, but).... then we\u0027d overrun this because\nkOutputBufferSize would not scale.   L_FRAME*2 would be sufficient if the codec turned out to just pass everything through unchanged.\nI could see something like (L_FRAME+ X) * 2     -- for some X which probably doesn\u0027t need to be very large.",
      "range": {
        "startLine": 77,
        "startChar": 22,
        "endLine": 77,
        "endChar": 39
      },
      "revId": "536cd4d21ec370da9b97f710876f35cc18f3c1af",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9b4f1025_157bd602",
        "filename": "media/libstagefright/codecs/amrnb/enc/fuzzer/amrnb_enc_fuzzer.cpp",
        "patchSetId": 2
      },
      "lineNbr": 77,
      "author": {
        "id": 1653964
      },
      "writtenOn": "2020-10-16T16:57:47Z",
      "side": 1,
      "message": "\u0027kOutputBufferSize\u0027 is now defined as twice the size of \u0027inputBuf\u0027, which itself is twice that of L_FRAME.",
      "parentUuid": "d57af186_d1729dd8",
      "range": {
        "startLine": 77,
        "startChar": 22,
        "endLine": 77,
        "endChar": 39
      },
      "revId": "536cd4d21ec370da9b97f710876f35cc18f3c1af",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ae42fa4b_84e4bd6c",
        "filename": "media/libstagefright/codecs/amrnb/enc/fuzzer/amrnb_enc_fuzzer.cpp",
        "patchSetId": 2
      },
      "lineNbr": 77,
      "author": {
        "id": 1047003
      },
      "writtenOn": "2020-10-26T03:40:24Z",
      "side": 1,
      "message": "Marking this as resolved as CL has Code-Review +2",
      "parentUuid": "9b4f1025_157bd602",
      "range": {
        "startLine": 77,
        "startChar": 22,
        "endLine": 77,
        "endChar": 39
      },
      "revId": "536cd4d21ec370da9b97f710876f35cc18f3c1af",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f3d76502_0b14b908",
        "filename": "media/libstagefright/codecs/amrnb/enc/fuzzer/amrnb_enc_fuzzer.cpp",
        "patchSetId": 2
      },
      "lineNbr": 78,
      "author": {
        "id": 1108919
      },
      "writtenOn": "2020-10-14T17:48:12Z",
      "side": 1,
      "message": "minSize is used with varying units.\n\nhere as the memcpy(), it is bytes\nin line 76, it is an element count -- of 2-byte entities.\n\nso the most it will ever fill of inputBuf[] is 50%.\n\nperhaps the calculation of minsize should be:   min(size,  sizeof(inputBuf));\n(which means flipping lines 75/76)",
      "range": {
        "startLine": 78,
        "startChar": 27,
        "endLine": 78,
        "endChar": 35
      },
      "revId": "536cd4d21ec370da9b97f710876f35cc18f3c1af",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "70e7ddc3_e11241a3",
        "filename": "media/libstagefright/codecs/amrnb/enc/fuzzer/amrnb_enc_fuzzer.cpp",
        "patchSetId": 2
      },
      "lineNbr": 78,
      "author": {
        "id": 1047003
      },
      "writtenOn": "2020-10-14T18:05:31Z",
      "side": 1,
      "message": "Ray,\nGood catch.\n\nAyushi,\nWe will need to also check whether kInputBufferSize should be L_FRAME or L_FRAME * sizeof(Word16)\n\nCurrently inputBuf is L_FRAME * 2 * sizeof(Word16) bytes",
      "parentUuid": "f3d76502_0b14b908",
      "range": {
        "startLine": 78,
        "startChar": 27,
        "endLine": 78,
        "endChar": 35
      },
      "revId": "536cd4d21ec370da9b97f710876f35cc18f3c1af",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e8fa3f93_8db96393",
        "filename": "media/libstagefright/codecs/amrnb/enc/fuzzer/amrnb_enc_fuzzer.cpp",
        "patchSetId": 2
      },
      "lineNbr": 78,
      "author": {
        "id": 1653964
      },
      "writtenOn": "2020-10-16T16:57:47Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "70e7ddc3_e11241a3",
      "range": {
        "startLine": 78,
        "startChar": 27,
        "endLine": 78,
        "endChar": 35
      },
      "revId": "536cd4d21ec370da9b97f710876f35cc18f3c1af",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}