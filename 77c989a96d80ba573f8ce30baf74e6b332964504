{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "222a31f2_46116001",
        "filename": "media/codec2/components/avc/C2SoftAvcEnc.cpp",
        "patchSetId": 7
      },
      "lineNbr": 398,
      "author": {
        "id": 1108919
      },
      "writtenOn": "2021-12-16T15:43:14Z",
      "side": 1,
      "message": "i think these 2 lines should still be DEFAULT_QP instead of AVC_QP",
      "range": {
        "startLine": 398,
        "startChar": 60,
        "endLine": 398,
        "endChar": 65
      },
      "revId": "77c989a96d80ba573f8ce30baf74e6b332964504",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8ec0ca8a_a598534f",
        "filename": "media/codec2/components/avc/C2SoftAvcEnc.cpp",
        "patchSetId": 7
      },
      "lineNbr": 398,
      "author": {
        "id": 1546599
      },
      "writtenOn": "2021-12-17T01:37:08Z",
      "side": 1,
      "message": "since this setter is only trying to ensure that min and max are legal values that the codec can support, these do not need to be DEFAULT_*_QP_*.\n\nIn avc which takes three separate values, setting these to either AVC_QP or DEFAULT_*_QP_*, doesn\u0027t make a difference. But in hevc which supports taking only one set  of min and max qp, these had to be HEVC_QP_* instead of DEFAULT_* as we would take min of three max values, max of three min values and use those in the codec. So in cases where only i and p values were specified, we would unnecessary bring default into equation.\n\nso for consistency with hevc, it would be better to leave these as AVC_QP*.",
      "parentUuid": "222a31f2_46116001",
      "range": {
        "startLine": 398,
        "startChar": 60,
        "endLine": 398,
        "endChar": 65
      },
      "revId": "77c989a96d80ba573f8ce30baf74e6b332964504",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "60741ed1_cb6f5c6d",
        "filename": "media/codec2/components/avc/C2SoftAvcEnc.cpp",
        "patchSetId": 7
      },
      "lineNbr": 398,
      "author": {
        "id": 1108919
      },
      "writtenOn": "2022-03-17T04:54:55Z",
      "side": 1,
      "message": "i\u0027ll disagree.\n\ni don\u0027t think that we should restrict avc because of limitations in hevc.",
      "parentUuid": "8ec0ca8a_a598534f",
      "range": {
        "startLine": 398,
        "startChar": 60,
        "endLine": 398,
        "endChar": 65
      },
      "revId": "77c989a96d80ba573f8ce30baf74e6b332964504",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "57b0b9d9_c9b06b0c",
        "filename": "media/codec2/components/avc/C2SoftAvcEnc.cpp",
        "patchSetId": 7
      },
      "lineNbr": 406,
      "author": {
        "id": 1108919
      },
      "writtenOn": "2021-12-16T15:43:14Z",
      "side": 1,
      "message": "the clamping -- that is correct to use AVC_QP_*\n\nalthough I prefer the clamping post-loop, the way it was before.\nAlthough we don\u0027t do it currently, if we wanted to do any adjustment\nbetween picture types -- say we wanted to enforce an ordering between iMax, pMax, and bMax -- the only place we can do that is after the loop.\nSo i\u0027d like the flow to be:\n-- get any values the user specified\n-- do our bounding / adjusting\nrather than fusing the operations as this change does.",
      "range": {
        "startLine": 406,
        "startChar": 64,
        "endLine": 406,
        "endChar": 75
      },
      "revId": "77c989a96d80ba573f8ce30baf74e6b332964504",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "217397c1_67170083",
        "filename": "media/codec2/components/avc/C2SoftAvcEnc.cpp",
        "patchSetId": 7
      },
      "lineNbr": 406,
      "author": {
        "id": 1546599
      },
      "writtenOn": "2021-12-17T01:37:08Z",
      "side": 1,
      "message": "Ray,\nWe were trying to get the change here in sync with the one in C2SoftHevcEnc.cpp\nreviewed at\nhttps://android-review.googlesource.com/c/platform/frameworks/av/+/1709436\n\nPlease let us know if you still prefer that this clamping be moved outside?\nIn that case we will also update C2SoftHevcEnc.cpp for consistency.",
      "parentUuid": "57b0b9d9_c9b06b0c",
      "range": {
        "startLine": 406,
        "startChar": 64,
        "endLine": 406,
        "endChar": 75
      },
      "revId": "77c989a96d80ba573f8ce30baf74e6b332964504",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2ef1d9aa_b11b7598",
        "filename": "media/codec2/components/avc/C2SoftAvcEnc.cpp",
        "patchSetId": 7
      },
      "lineNbr": 406,
      "author": {
        "id": 1108919
      },
      "writtenOn": "2022-03-17T04:54:55Z",
      "side": 1,
      "message": "i prefer it outside.\n\ni understand that HEVC works differently, so it\u0027s loop can be different.",
      "parentUuid": "217397c1_67170083",
      "range": {
        "startLine": 406,
        "startChar": 64,
        "endLine": 406,
        "endChar": 75
      },
      "revId": "77c989a96d80ba573f8ce30baf74e6b332964504",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}