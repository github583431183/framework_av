{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "3d2177d7_40ebe6c8",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1156740
      },
      "writtenOn": "2022-04-25T19:35:34Z",
      "side": 1,
      "message": "Since I have limited understanding on MediaImage2, gave +1.",
      "revId": "daf5c0e86f37d8f39742d36483f3c86d9b0ba03b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e0c0ff9f_eb0b9757",
        "filename": "media/codec2/sfplugin/utils/Codec2BufferUtils.cpp",
        "patchSetId": 2
      },
      "lineNbr": 103,
      "author": {
        "id": 1021605
      },
      "writtenOn": "2022-04-27T18:51:01Z",
      "side": 1,
      "message": "I feel that here you are trying to be very generic where this may only work for certain values.\n\nE.g. this will shift imgRow only if ~ bitDepthAllocated is bigDepth + 8, but will not work if it is e.g. bitDepth + 10\n\nSimilarly if rightShift is not 0 or 8, or if the plane is not NATIVE/LITTLE endian, viewRow shift logic will fail.\n\nWe should at least add some comments that this is not a generic solution.",
      "range": {
        "startLine": 102,
        "startChar": 8,
        "endLine": 103,
        "endChar": 41
      },
      "revId": "daf5c0e86f37d8f39742d36483f3c86d9b0ba03b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e3c913ef_0a93437f",
        "filename": "media/codec2/sfplugin/utils/Codec2BufferUtils.cpp",
        "patchSetId": 2
      },
      "lineNbr": 103,
      "author": {
        "id": 1021605
      },
      "writtenOn": "2022-04-27T21:08:15Z",
      "side": 1,
      "message": "We could e.g. say that \"the following works because the img allocated bit depth is always 8 or 16, and we are using the highest bits for 16-bit allocated format, so we can simply read those high-bits as bytes.\"",
      "parentUuid": "e0c0ff9f_eb0b9757",
      "range": {
        "startLine": 102,
        "startChar": 8,
        "endLine": 103,
        "endChar": 41
      },
      "revId": "daf5c0e86f37d8f39742d36483f3c86d9b0ba03b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a79ad729_2e6d87a6",
        "filename": "media/codec2/sfplugin/utils/Codec2BufferUtils.cpp",
        "patchSetId": 2
      },
      "lineNbr": 103,
      "author": {
        "id": 1018606
      },
      "writtenOn": "2022-04-29T22:55:55Z",
      "side": 1,
      "message": "PTAL",
      "parentUuid": "e3c913ef_0a93437f",
      "range": {
        "startLine": 102,
        "startChar": 8,
        "endLine": 103,
        "endChar": 41
      },
      "revId": "daf5c0e86f37d8f39742d36483f3c86d9b0ba03b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}