{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "e7a56ff8_fd9eb045",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 6
      },
      "lineNbr": 0,
      "author": {
        "id": 1055713
      },
      "writtenOn": "2022-10-11T23:49:26Z",
      "side": 1,
      "message": "Are there any tests to verify that these were propagated correctly?",
      "revId": "61048468876623b3ef3525bc596d4d24519c923e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "057c67f6_360bebb1",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 6
      },
      "lineNbr": 0,
      "author": {
        "id": 1261213
      },
      "writtenOn": "2022-10-18T13:55:57Z",
      "side": 1,
      "message": "This feature was enabled for AVC encoder and is tested manually. The change for software HEVC encoder was merged in https://android-review.googlesource.com/c/platform/frameworks/av/+/1709436 \n\nThis feature needs to be enabled in XML (media/libstagefright/data/media_codecs_sw.xml). Currently it is enabled only for AVC Encoder (c2.android.avc.encoder)\n\n\u003cFeature name\u003d\"qp-bounds\" /\u003e\n\nNeed to determine if VideoEncodingStatisticsTest in CTS validates some aspect of this feature.",
      "parentUuid": "e7a56ff8_fd9eb045",
      "revId": "61048468876623b3ef3525bc596d4d24519c923e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "cfe523a2_3e284244",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 6
      },
      "lineNbr": 0,
      "author": {
        "id": 1261213
      },
      "writtenOn": "2022-10-18T14:30:56Z",
      "side": 1,
      "message": "b/218950132 was tracking CTS test for FEATURE_QpBounds.",
      "parentUuid": "057c67f6_360bebb1",
      "revId": "61048468876623b3ef3525bc596d4d24519c923e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "67f2defe_247d2831",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 6
      },
      "lineNbr": 0,
      "author": {
        "id": 1055713
      },
      "writtenOn": "2023-02-28T19:42:04Z",
      "side": 1,
      "message": "Is this change still wanted?",
      "revId": "61048468876623b3ef3525bc596d4d24519c923e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "117149b9_3781415a",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 6
      },
      "lineNbr": 0,
      "author": {
        "id": 1047003
      },
      "writtenOn": "2023-02-28T19:44:54Z",
      "side": 1,
      "message": "James,\nYes. This is still needed.",
      "parentUuid": "67f2defe_247d2831",
      "revId": "61048468876623b3ef3525bc596d4d24519c923e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d6f28619_ae00565f",
        "filename": "media/codec2/components/vpx/C2SoftVpxEnc.cpp",
        "patchSetId": 6
      },
      "lineNbr": 357,
      "author": {
        "id": 1055713
      },
      "writtenOn": "2023-02-28T21:56:52Z",
      "side": 1,
      "message": "is C++17 generally allowed in the Android codebase now?",
      "range": {
        "startLine": 357,
        "startChar": 27,
        "endLine": 357,
        "endChar": 37
      },
      "revId": "61048468876623b3ef3525bc596d4d24519c923e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "993f9c4c_e4434d37",
        "filename": "media/codec2/components/vpx/C2SoftVpxEnc.cpp",
        "patchSetId": 6
      },
      "lineNbr": 357,
      "author": {
        "id": 1047003
      },
      "writtenOn": "2023-02-28T22:46:25Z",
      "side": 1,
      "message": "not sure about general guidelines for Android codebase.\nstd::clamp() has been used in few other places in frameworks/av/media",
      "parentUuid": "d6f28619_ae00565f",
      "range": {
        "startLine": 357,
        "startChar": 27,
        "endLine": 357,
        "endChar": 37
      },
      "revId": "61048468876623b3ef3525bc596d4d24519c923e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "8f59a4fd_5c1e580f",
        "filename": "media/codec2/components/vpx/C2SoftVpxEnc.cpp",
        "patchSetId": 6
      },
      "lineNbr": 357,
      "author": {
        "id": 1958927
      },
      "writtenOn": "2023-09-21T11:28:37Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "993f9c4c_e4434d37",
      "range": {
        "startLine": 357,
        "startChar": 27,
        "endLine": 357,
        "endChar": 37
      },
      "revId": "61048468876623b3ef3525bc596d4d24519c923e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2f0bad20_074cfb2f",
        "filename": "media/codec2/components/vpx/C2SoftVpxEnc.cpp",
        "patchSetId": 6
      },
      "lineNbr": 377,
      "author": {
        "id": 1055713
      },
      "writtenOn": "2023-03-01T01:12:48Z",
      "side": 1,
      "message": "with c++11 this can be std::min({iMax, pMax, bMax)});",
      "revId": "61048468876623b3ef3525bc596d4d24519c923e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f85f533a_fb3f1607",
        "filename": "media/codec2/components/vpx/C2SoftVpxEnc.cpp",
        "patchSetId": 6
      },
      "lineNbr": 377,
      "author": {
        "id": 1958927
      },
      "writtenOn": "2023-09-21T11:28:37Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "2f0bad20_074cfb2f",
      "revId": "61048468876623b3ef3525bc596d4d24519c923e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "bb2fd9bf_920199d1",
        "filename": "media/codec2/components/vpx/C2SoftVpxEnc.cpp",
        "patchSetId": 6
      },
      "lineNbr": 390,
      "author": {
        "id": 1055713
      },
      "writtenOn": "2023-03-01T01:12:48Z",
      "side": 1,
      "message": "these can be `else if ...` since only one is possible.",
      "revId": "61048468876623b3ef3525bc596d4d24519c923e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f2e8cb3d_05af047c",
        "filename": "media/codec2/components/vpx/C2SoftVpxEnc.cpp",
        "patchSetId": 6
      },
      "lineNbr": 390,
      "author": {
        "id": 1958927
      },
      "writtenOn": "2023-09-21T11:28:37Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "bb2fd9bf_920199d1",
      "revId": "61048468876623b3ef3525bc596d4d24519c923e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ca6dde37_53c1e1bd",
        "filename": "media/codec2/components/vpx/C2SoftVpxEnc.h",
        "patchSetId": 6
      },
      "lineNbr": 48,
      "author": {
        "id": 1055713
      },
      "writtenOn": "2023-02-28T21:56:52Z",
      "side": 1,
      "message": "these could be defined in the cpp file.",
      "revId": "61048468876623b3ef3525bc596d4d24519c923e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "dfd2e194_ab527ebe",
        "filename": "media/codec2/components/vpx/C2SoftVpxEnc.h",
        "patchSetId": 6
      },
      "lineNbr": 48,
      "author": {
        "id": 1958927
      },
      "writtenOn": "2023-09-21T11:28:37Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "ca6dde37_53c1e1bd",
      "revId": "61048468876623b3ef3525bc596d4d24519c923e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3d073a29_e1443d65",
        "filename": "media/codec2/components/vpx/C2SoftVpxEnc.h",
        "patchSetId": 6
      },
      "lineNbr": 228,
      "author": {
        "id": 1055713
      },
      "writtenOn": "2023-02-28T21:56:52Z",
      "side": 1,
      "message": "I don\u0027t see this being used to set anything in the libvpx encoder. Am I missing something?",
      "revId": "61048468876623b3ef3525bc596d4d24519c923e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "dfe17b84_67e50b61",
        "filename": "media/codec2/components/vpx/C2SoftVpxEnc.h",
        "patchSetId": 6
      },
      "lineNbr": 228,
      "author": {
        "id": 1047003
      },
      "writtenOn": "2023-02-28T22:46:25Z",
      "side": 1,
      "message": "this is used to mMaxQuantizer and mMinQuantizer at\nhttps://android-review.googlesource.com/c/platform/frameworks/av/+/1740757/6/media/codec2/components/vpx/C2SoftVpxEnc.cpp#546\n\nthese are then used to configure the encoder parameters at https://android-review.googlesource.com/c/platform/frameworks/av/+/1740757/6/media/codec2/components/vpx/C2SoftVpxEnc.cpp#682",
      "parentUuid": "3d073a29_e1443d65",
      "revId": "61048468876623b3ef3525bc596d4d24519c923e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2be99c84_badaadff",
        "filename": "media/codec2/components/vpx/C2SoftVpxEnc.h",
        "patchSetId": 6
      },
      "lineNbr": 228,
      "author": {
        "id": 1055713
      },
      "writtenOn": "2023-03-01T01:12:48Z",
      "side": 1,
      "message": "\u003e this is used to mMaxQuantizer and mMinQuantizer at\n\u003e https://android-review.googlesource.com/c/platform/frameworks/av/+/1740757/6/media/codec2/components/vpx/C2SoftVpxEnc.cpp#546\n\u003e \n\u003e these are then used to configure the encoder parameters at https://android-review.googlesource.com/c/platform/frameworks/av/+/1740757/6/media/codec2/components/vpx/C2SoftVpxEnc.cpp#682\n\nThe configuration is only updated based on a change in bitrate though. Was this intended to allow for changes to per-frame qp? The P/B paths won\u0027t have any effect right now.",
      "parentUuid": "dfe17b84_67e50b61",
      "revId": "61048468876623b3ef3525bc596d4d24519c923e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7c2305b1_3594e624",
        "filename": "media/codec2/components/vpx/C2SoftVpxEnc.h",
        "patchSetId": 6
      },
      "lineNbr": 228,
      "author": {
        "id": 1047003
      },
      "writtenOn": "2023-03-01T01:23:35Z",
      "side": 1,
      "message": "James,\n\nIntention is to limit the max and min QP used by the encoder.\n\nWe see that mCodecConfiguration-\u003erc_max_quantizer and mCodecConfiguration-\u003erc_min_quantizer are the two parameters that can be used to control max and min qp in the vpx encoder library.\n\nSince the library takes only one min and max, we are taking minimum of the I/P/B Max QP values and setting rc_max_quantizer with this. (similarly taking maximum of min QP values and setting rc_min_quantizer).\n\nmCodecConfiguration-\u003erc_max_quantizer and mCodecConfiguration-\u003erc_min_quantizer are set before calling vpx_codec_enc_init().\n\n\nIs the above way to configure min and max qp to the library incorrect?\nAre rc_max_quantizer and rc_min_quantizer only used for I frame qp in the library?\n\nPlease correct us, if the above understanding is wrong.\nThanks.",
      "parentUuid": "2be99c84_badaadff",
      "revId": "61048468876623b3ef3525bc596d4d24519c923e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9e81e353_8cc56330",
        "filename": "media/codec2/components/vpx/C2SoftVpxEnc.h",
        "patchSetId": 6
      },
      "lineNbr": 228,
      "author": {
        "id": 1055713
      },
      "writtenOn": "2023-03-01T02:10:51Z",
      "side": 1,
      "message": "\u003e James,\n\u003e \n\u003e Intention is to limit the max and min QP used by the encoder.\n\u003e \n\u003e We see that mCodecConfiguration-\u003erc_max_quantizer and mCodecConfiguration-\u003erc_min_quantizer are the two parameters that can be used to control max and min qp in the vpx encoder library.\n\u003e \n\u003e Since the library takes only one min and max, we are taking minimum of the I/P/B Max QP values and setting rc_max_quantizer with this. (similarly taking maximum of min QP values and setting rc_min_quantizer).\n\u003e \n\u003e mCodecConfiguration-\u003erc_max_quantizer and mCodecConfiguration-\u003erc_min_quantizer are set before calling vpx_codec_enc_init().\n\u003e \n\u003e \n\u003e Is the above way to configure min and max qp to the library incorrect?\n\u003e Are rc_max_quantizer and rc_min_quantizer only used for I frame qp in the library?\n\u003e \n\nThe quantizers are used for all frames and can be set with a configuration update, SVC also allows per-layer quantizers. See some examples in webrtc:\nhttps://source.chromium.org/chromium/chromium/src/+/main:third_party/webrtc/modules/video_coding/codecs/vp8/libvpx_vp8_encoder.cc;l\u003d370;drc\u003da09f21b2074b8058f92714eaa426b7a72fd85570\nhttps://source.chromium.org/chromium/chromium/src/+/main:third_party/webrtc/modules/video_coding/codecs/vp8/libvpx_vp8_encoder.cc;l\u003d1033;drc\u003da09f21b2074b8058f92714eaa426b7a72fd85570\n\n\u003e Please correct us, if the above understanding is wrong.\n\u003e Thanks.",
      "parentUuid": "7c2305b1_3594e624",
      "revId": "61048468876623b3ef3525bc596d4d24519c923e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b42dc171_93b8ea3c",
        "filename": "media/codec2/components/vpx/C2SoftVpxEnc.h",
        "patchSetId": 6
      },
      "lineNbr": 228,
      "author": {
        "id": 1958927
      },
      "writtenOn": "2023-09-21T11:28:37Z",
      "side": 1,
      "message": "Although vpx allows configuring per frame quantizer, the plugin cannot precisely tell if the frame that is being encoded is I frame or P frame (as the current frame type depends on params like key max, key min, force sync frame, scene-cut, ...) configuring the rc max/min quantizer with correct (I/P max, min) values may not possible. we can however say after a particular frame modify the qp max/min values but format keys KEY_VIDEO_QP_I_MAX/MIN, KEY_VIDEO_QP_P_MAX/MIN are not for that\n\nSo we can are configuring the qp level at init only. Now the choice needs to be made whether to use i frame quants max/min and over all max/min during configuration\n\nplease let us know how to proceed",
      "parentUuid": "9e81e353_8cc56330",
      "revId": "61048468876623b3ef3525bc596d4d24519c923e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ad8e3763_ca463396",
        "filename": "media/codec2/components/vpx/C2SoftVpxEnc.h",
        "patchSetId": 6
      },
      "lineNbr": 228,
      "author": {
        "id": 1055713
      },
      "writtenOn": "2023-10-04T01:33:24Z",
      "side": 1,
      "message": "\u003e Although vpx allows configuring per frame quantizer, the plugin cannot precisely tell if the frame that is being encoded is I frame or P frame (as the current frame type depends on params like key max, key min, force sync frame, scene-cut, ...) configuring the rc max/min quantizer with correct (I/P max, min) values may not possible. we can however say after a particular frame modify the qp max/min values but format keys KEY_VIDEO_QP_I_MAX/MIN, KEY_VIDEO_QP_P_MAX/MIN are not for that\n\u003e \n\u003e So we can are configuring the qp level at init only. Now the choice needs to be made whether to use i frame quants max/min and over all max/min during configuration\n\u003e \n\u003e please let us know how to proceed\n\nThis is fine if all that is wanted is to set rc_min_quantizer and rc_max_quantizer.",
      "parentUuid": "b42dc171_93b8ea3c",
      "revId": "61048468876623b3ef3525bc596d4d24519c923e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}