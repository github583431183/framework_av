{
  "comments": [
    {
      "key": {
        "uuid": "2ca836a9_82fdb0ab",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 12,
      "author": {
        "id": 1108919
      },
      "writtenOn": "2020-04-17T05:37:53Z",
      "side": 1,
      "message": "shouldn\u0027t we also build the fuzzer -- so that we know this fixed the host side?\n\ni would think that this should be \"built for android. built for host\u0027",
      "range": {
        "startLine": 12,
        "startChar": 6,
        "endLine": 12,
        "endChar": 48
      },
      "revId": "860a03118b2b76c0dc97d66c01dd285d8fccc3f3",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a2a66c88_f26cd0c6",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 12,
      "author": {
        "id": 1047003
      },
      "writtenOn": "2020-04-17T19:00:32Z",
      "side": 1,
      "message": "Ray,\nhost support for extractor fuzzer plugins needs few more CLs. These are the initial ones which are independent and easier for review. Once these are submitted, we will follow up with few more CLs to eventually enable host support for extractor fuzzer plugins.",
      "parentUuid": "2ca836a9_82fdb0ab",
      "range": {
        "startLine": 12,
        "startChar": 6,
        "endLine": 12,
        "endChar": 48
      },
      "revId": "860a03118b2b76c0dc97d66c01dd285d8fccc3f3",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c1a10165_347b6500",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 12,
      "author": {
        "id": 1047003
      },
      "writtenOn": "2020-04-21T18:09:43Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "a2a66c88_f26cd0c6",
      "range": {
        "startLine": 12,
        "startChar": 6,
        "endLine": 12,
        "endChar": 48
      },
      "revId": "860a03118b2b76c0dc97d66c01dd285d8fccc3f3",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "486bbaad_1c292317",
        "filename": "media/libstagefright/foundation/avc_utils.cpp",
        "patchSetId": 1
      },
      "lineNbr": 550,
      "author": {
        "id": 1108919
      },
      "writtenOn": "2020-04-17T05:37:53Z",
      "side": 1,
      "message": "since __unused vs __attribute__((unused))  is a compiler-related thing.\nand we\u0027re looking at multiple places in this file.\n\nI like the idea of at the top of the file:\n\n#define UNUSED __attribute__((unused))\n\nand then these become things like\n  unsigned vodei_object_layer_verid UNUSED;\n\nI\u0027m ok with different name than \"UNUSED\" -- UNUSED_VAR,  SET_BUT_NOT_READ.\n\nbut let\u0027s use that style.\n\n\nas I\u0027m reading the places where this is being done, I see that there are places\nwhere we assign the variable; i\u0027m guessing that the real issue is that we never\nread the result back out?",
      "range": {
        "startLine": 549,
        "startChar": 38,
        "endLine": 550,
        "endChar": 65
      },
      "revId": "860a03118b2b76c0dc97d66c01dd285d8fccc3f3",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ef908117_91e87315",
        "filename": "media/libstagefright/foundation/avc_utils.cpp",
        "patchSetId": 1
      },
      "lineNbr": 550,
      "author": {
        "id": 1047003
      },
      "writtenOn": "2020-04-17T19:00:32Z",
      "side": 1,
      "message": "Ray,\nWe had started with this approach initially, but there are few places where this approach didn\u0027t work, hence for consistency we thought it is better to use __attribute__((unused)) everywhere.\n\nVasu,\nLet us use the macro approach wherever we can use. When not possible, let us use the attribute approach.",
      "parentUuid": "486bbaad_1c292317",
      "range": {
        "startLine": 549,
        "startChar": 38,
        "endLine": 550,
        "endChar": 65
      },
      "revId": "860a03118b2b76c0dc97d66c01dd285d8fccc3f3",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "384d2584_5f6a17dc",
        "filename": "media/libstagefright/foundation/avc_utils.cpp",
        "patchSetId": 1
      },
      "lineNbr": 550,
      "author": {
        "id": 1108919
      },
      "writtenOn": "2020-04-17T22:25:43Z",
      "side": 1,
      "message": "I\u0027ll be interested to learn if there are any places where the macro approach doesn\u0027t work.",
      "parentUuid": "ef908117_91e87315",
      "range": {
        "startLine": 549,
        "startChar": 38,
        "endLine": 550,
        "endChar": 65
      },
      "revId": "860a03118b2b76c0dc97d66c01dd285d8fccc3f3",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "811b31ff_6c63ec7f",
        "filename": "media/libstagefright/foundation/avc_utils.cpp",
        "patchSetId": 1
      },
      "lineNbr": 550,
      "author": {
        "id": 1570907
      },
      "writtenOn": "2020-04-20T11:52:35Z",
      "side": 1,
      "message": "Updated to use skipBits. Hence these variables are no longer needed and are removed.",
      "parentUuid": "384d2584_5f6a17dc",
      "range": {
        "startLine": 549,
        "startChar": 38,
        "endLine": 550,
        "endChar": 65
      },
      "revId": "860a03118b2b76c0dc97d66c01dd285d8fccc3f3",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c359ea31_4e7606e6",
        "filename": "media/libstagefright/foundation/avc_utils.cpp",
        "patchSetId": 1
      },
      "lineNbr": 550,
      "author": {
        "id": 1047003
      },
      "writtenOn": "2020-04-21T18:09:43Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "811b31ff_6c63ec7f",
      "range": {
        "startLine": 549,
        "startChar": 38,
        "endLine": 550,
        "endChar": 65
      },
      "revId": "860a03118b2b76c0dc97d66c01dd285d8fccc3f3",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1c083eec_27f50241",
        "filename": "media/libstagefright/foundation/avc_utils.cpp",
        "patchSetId": 1
      },
      "lineNbr": 552,
      "author": {
        "id": 1108919
      },
      "writtenOn": "2020-04-17T05:37:53Z",
      "side": 1,
      "message": "i\u0027m guessing we\u0027re doing this because we want advance some pointer in the \u0027br\u0027 construct.\nso that we\u0027ve moved along to fields that we will actually use.\n\ncan we do:\n\n    (void) br.getBits(4);\n\nand get the desired semantics -- it invokes the function to advance the pointer\nand highlights that we\u0027re discarding the bits.\n\n[at this point, it\u0027s more discussion, since we already had this code in place.\n\nDid the compiler start complaining about the \"__unused\" construct? maybe because we\u0027re\ndoing host-side builds of some of these things so that we can fuzz them?",
      "range": {
        "startLine": 552,
        "startChar": 7,
        "endLine": 552,
        "endChar": 49
      },
      "revId": "860a03118b2b76c0dc97d66c01dd285d8fccc3f3",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "cac1dd20_62d4d278",
        "filename": "media/libstagefright/foundation/avc_utils.cpp",
        "patchSetId": 1
      },
      "lineNbr": 552,
      "author": {
        "id": 1047003
      },
      "writtenOn": "2020-04-17T19:00:32Z",
      "side": 1,
      "message": "Ray,\nYes. The compiler for host support throws errors on __unused.\nOne way is to remove __unused in most places where we see an error in host and handle any other compiler warnings appropriately by adding required (void) where they are declared.\nNot sure if it is a good idea to remove the variable completely as having them helps in code readability and when needed easier debugging to validate these values.",
      "parentUuid": "1c083eec_27f50241",
      "range": {
        "startLine": 552,
        "startChar": 7,
        "endLine": 552,
        "endChar": 49
      },
      "revId": "860a03118b2b76c0dc97d66c01dd285d8fccc3f3",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "86b56705_160d3131",
        "filename": "media/libstagefright/foundation/avc_utils.cpp",
        "patchSetId": 1
      },
      "lineNbr": 552,
      "author": {
        "id": 1108919
      },
      "writtenOn": "2020-04-17T22:25:43Z",
      "side": 1,
      "message": "validating the values would certainly make those values \u0027used\u0027 and remove the need for\na compiler directive (whether it be __unused or __attribute((unused)).\n\nthat changes the question to -- should we be validating these values?\nI see that this is a bool function -- so we could certainly return false if these\nfields aren\u0027t holding legal values. that means the values will be used, so we wouldn\u0027t need\nany kind of unused attribute.\n\ni\u0027m seeing some other points, like line 557 just below, where we call skipBits() instead of getBits() -- that\u0027s even better than \"(void) br.getBits(2)\"\n\nso for this layer_verid and layer_priority -- which are set but never read, I think\nI\u0027d like to change them to:\n\n    br.skipBits(4); // layer_verid\nso that they are in the style of line 557.\n\nany places that we think we need to keep the unused attribute -- let\u0027s replace it with the macro approach i suggested in the prior revision.",
      "parentUuid": "cac1dd20_62d4d278",
      "range": {
        "startLine": 552,
        "startChar": 7,
        "endLine": 552,
        "endChar": 49
      },
      "revId": "860a03118b2b76c0dc97d66c01dd285d8fccc3f3",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ffc3d139_2029d8fc",
        "filename": "media/libstagefright/foundation/avc_utils.cpp",
        "patchSetId": 1
      },
      "lineNbr": 552,
      "author": {
        "id": 1570907
      },
      "writtenOn": "2020-04-20T11:52:35Z",
      "side": 1,
      "message": "Done. Updated to match style of line 557. \nbr.skipBits(4); //video_object_layer_verid\nbr.skipBits(3); //video_object_layer_priority\n\nHence the variables \u0027video_object_layer_verid\u0027 and \u0027video_object_layer_priority\u0027 are no longer needed and are removed.",
      "parentUuid": "86b56705_160d3131",
      "range": {
        "startLine": 552,
        "startChar": 7,
        "endLine": 552,
        "endChar": 49
      },
      "revId": "860a03118b2b76c0dc97d66c01dd285d8fccc3f3",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3ed7df20_6cc616d7",
        "filename": "media/libstagefright/foundation/avc_utils.cpp",
        "patchSetId": 1
      },
      "lineNbr": 658,
      "author": {
        "id": 1108919
      },
      "writtenOn": "2020-04-17T22:25:43Z",
      "side": 1,
      "message": "since we\u0027re unpacking something that we already picked up, the getBits() vs skipBits() discussion earlier won\u0027t apply here.\n\nI think i\u0027d almost rather just turn this into a comment\n // we can get protection value from (header\u003e\u003e16)\u00261\n\njust avoid any code whatsoever at this point.",
      "range": {
        "startLine": 658,
        "startChar": 16,
        "endLine": 658,
        "endChar": 38
      },
      "revId": "860a03118b2b76c0dc97d66c01dd285d8fccc3f3",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "da84779c_ec8b156a",
        "filename": "media/libstagefright/foundation/avc_utils.cpp",
        "patchSetId": 1
      },
      "lineNbr": 658,
      "author": {
        "id": 1570907
      },
      "writtenOn": "2020-04-20T11:52:35Z",
      "side": 1,
      "message": "Done. Line updated to a comment.",
      "parentUuid": "3ed7df20_6cc616d7",
      "range": {
        "startLine": 658,
        "startChar": 16,
        "endLine": 658,
        "endChar": 38
      },
      "revId": "860a03118b2b76c0dc97d66c01dd285d8fccc3f3",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}