{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "ff210e77_ee9180d9",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1108919
      },
      "writtenOn": "2023-06-30T15:40:51Z",
      "side": 1,
      "message": "I think this one final observation....",
      "revId": "e015595a7b60c838db30b989c0ed6ad75868fc91",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ced90b1a_f186f375",
        "filename": "media/libstagefright/writer_fuzzers/WriterFuzzerBase.cpp",
        "patchSetId": 3
      },
      "lineNbr": 196,
      "author": {
        "id": 1108919
      },
      "writtenOn": "2023-06-30T15:40:51Z",
      "side": 1,
      "message": "seems to me that we should have a \n\ndelete mCurrentTrack[trackIndex]\n\nbefore we clear the pointer -- otherwise we leak the just-created MediaAdapter.",
      "range": {
        "startLine": 196,
        "startChar": 8,
        "endLine": 196,
        "endChar": 26
      },
      "revId": "e015595a7b60c838db30b989c0ed6ad75868fc91",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9e5e13d4_0075f591",
        "filename": "media/libstagefright/writer_fuzzers/WriterFuzzerBase.cpp",
        "patchSetId": 3
      },
      "lineNbr": 196,
      "author": {
        "id": 1890836
      },
      "writtenOn": "2023-07-05T04:27:42Z",
      "side": 1,
      "message": "\u0027mCurrentTack\u0027 is a vector of sp\u003cMediaAdapter\u003e. Here, \u0027sp operator\u003d\u0027 deletes the old pointer while assigning the new one. Thus, no pointer would be leaked.\n\n[link - https://cs.android.com/android/platform/superproject/+/master:frameworks/rs/cpp/util/StrongPointer.h;drc\u003d9c4ad291f012ed5f9ee9b131106e9732a848740f;bpv\u003d1;bpt\u003d1;l\u003d183?q\u003dStrongPointer\u0026ss\u003dandroid%2Fplatform%2Fsuperproject ]",
      "parentUuid": "ced90b1a_f186f375",
      "range": {
        "startLine": 196,
        "startChar": 8,
        "endLine": 196,
        "endChar": 26
      },
      "revId": "e015595a7b60c838db30b989c0ed6ad75868fc91",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ddecb9d6_c9740f0d",
        "filename": "media/libstagefright/writer_fuzzers/WriterFuzzerBase.cpp",
        "patchSetId": 3
      },
      "lineNbr": 196,
      "author": {
        "id": 1108919
      },
      "writtenOn": "2023-07-05T14:08:10Z",
      "side": 1,
      "message": "let\u0027s verify that this is working as desired.\nreading in go/c++ (Android Framework C++ Code Style Guidelines)\n\n\u003d\u003d use sp\u003cT\u003e for reference-counted pointers\n\u003d\u003d found in \u003cutils/StrongPointer.h\u003e\n\u003d\u003d T needs to have RefBase or LightRefBase as a base class. Use LightRefBase when \u003d\u003d weak pointers are not needed.\n\nI couldn\u0027t trace MediaAdapter to deriving from RefBase or LightRefBase.",
      "parentUuid": "9e5e13d4_0075f591",
      "range": {
        "startLine": 196,
        "startChar": 8,
        "endLine": 196,
        "endChar": 26
      },
      "revId": "e015595a7b60c838db30b989c0ed6ad75868fc91",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "847e0ab8_7d35bd19",
        "filename": "media/libstagefright/writer_fuzzers/WriterFuzzerBase.cpp",
        "patchSetId": 3
      },
      "lineNbr": 196,
      "author": {
        "id": 1890836
      },
      "writtenOn": "2023-07-06T04:24:57Z",
      "side": 1,
      "message": "MediaAdapter derives from MediaSource which derives from RefBase.\n\n[ MediaAdapter class defined at - https://cs.android.com/android/platform/superproject/+/master:frameworks/av/media/libstagefright/include/media/stagefright/MediaAdapter.h ]\n\n[ MediaSource class defined at - https://cs.android.com/android/platform/superproject/+/refs/heads/master:frameworks/av/media/libstagefright/include/media/stagefright/MediaSource.h ].\n\nHence, no leaks would occur.",
      "parentUuid": "ddecb9d6_c9740f0d",
      "range": {
        "startLine": 196,
        "startChar": 8,
        "endLine": 196,
        "endChar": 26
      },
      "revId": "e015595a7b60c838db30b989c0ed6ad75868fc91",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "087ffae5_d0226279",
        "filename": "media/libstagefright/writer_fuzzers/WriterFuzzerBase.cpp",
        "patchSetId": 3
      },
      "lineNbr": 196,
      "author": {
        "id": 1108919
      },
      "writtenOn": "2023-07-06T11:17:52Z",
      "side": 1,
      "message": "and I looked right at the MediaSource definition, too.\nI should probably go get my eyes checked...",
      "parentUuid": "847e0ab8_7d35bd19",
      "range": {
        "startLine": 196,
        "startChar": 8,
        "endLine": 196,
        "endChar": 26
      },
      "revId": "e015595a7b60c838db30b989c0ed6ad75868fc91",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}