{
  "comments": [
    {
      "key": {
        "uuid": "268cce49_0df0b174",
        "filename": "media/mtp/AsyncIO.h",
        "patchSetId": 6
      },
      "lineNbr": 62,
      "author": {
        "id": 1091002
      },
      "writtenOn": "2016-10-31T02:05:06Z",
      "side": 1,
      "message": "nit: Remove the trailing space.",
      "range": {
        "startLine": 62,
        "startChar": 62,
        "endLine": 62,
        "endChar": 63
      },
      "revId": "1f40faaa987aa0d927e094b6bebc2cfc35e5858f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2675ae07_392db7c8",
        "filename": "media/mtp/AsyncIO.h",
        "patchSetId": 6
      },
      "lineNbr": 62,
      "author": {
        "id": 1113594
      },
      "writtenOn": "2016-10-31T21:14:05Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "268cce49_0df0b174",
      "range": {
        "startLine": 62,
        "startChar": 62,
        "endLine": 62,
        "endChar": 63
      },
      "revId": "1f40faaa987aa0d927e094b6bebc2cfc35e5858f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "268cce49_2df56d65",
        "filename": "media/mtp/MtpFfsHandle.cpp",
        "patchSetId": 6
      },
      "lineNbr": 151,
      "author": {
        "id": 1091002
      },
      "writtenOn": "2016-10-31T02:05:06Z",
      "side": 1,
      "message": "nit: The structures should be const?",
      "revId": "1f40faaa987aa0d927e094b6bebc2cfc35e5858f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2675ae07_1ac38949",
        "filename": "media/mtp/MtpFfsHandle.cpp",
        "patchSetId": 6
      },
      "lineNbr": 151,
      "author": {
        "id": 1113594
      },
      "writtenOn": "2016-10-31T21:14:05Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "268cce49_2df56d65",
      "revId": "1f40faaa987aa0d927e094b6bebc2cfc35e5858f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "268cce49_4deab988",
        "filename": "media/mtp/MtpFfsHandle.cpp",
        "patchSetId": 6
      },
      "lineNbr": 156,
      "author": {
        "id": 1091002
      },
      "writtenOn": "2016-10-31T02:05:06Z",
      "side": 1,
      "message": "Maybe we should use the same value for bInterfaceClass, bInterfaceSubClass, bInterfaceProtocol, defined in f_mtp.c ?\n\nhttps://cs.corp.google.com/android/hardware/bsp/kernel/common/v4.4/drivers/usb/gadget/function/f_mtp.c?q\u003dpackage:android+mtp_usb\u0026dr\u003dC\u0026l\u003d1048",
      "revId": "1f40faaa987aa0d927e094b6bebc2cfc35e5858f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2675ae07_3a104530",
        "filename": "media/mtp/MtpFfsHandle.cpp",
        "patchSetId": 6
      },
      "lineNbr": 156,
      "author": {
        "id": 1113594
      },
      "writtenOn": "2016-10-31T21:14:05Z",
      "side": 1,
      "message": "So according to the MTP protocol, compliant class and subclass should be the same as those for PTP. The vendor specific codes are necessary for windows, which for some time didn\u0027t support the compliant version and instead required a special handshake. There isn\u0027t really a clean way to implement this handshake with ffs and on my testing with windows 10, it seems like windows now also supports the standard compliant values without the handshake. It would be easy to move to these new values, although we might lose compatibility with some older versions of windows. I haven\u0027t gotten my hands on an older windows device to test yet though. Do you have any thoughts on this? \n\nSee slide 6 in http://events.linuxfoundation.org/sites/events/files/slides/Media%20Transfer%20Protocol.pdf for this info.",
      "parentUuid": "268cce49_4deab988",
      "revId": "1f40faaa987aa0d927e094b6bebc2cfc35e5858f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "268cce49_0d1d117b",
        "filename": "media/mtp/MtpFfsHandle.cpp",
        "patchSetId": 6
      },
      "lineNbr": 156,
      "author": {
        "id": 1091002
      },
      "writtenOn": "2016-11-01T01:05:53Z",
      "side": 1,
      "message": "I\u0027m still thinking if there is benefit for users if we follow the spec. I agree with that we basically should follow the spec. But in this case, changing the classes may break old Windows or AFT (https://www.android.com/filetransfer/). Following the spec does not give us better compatibility here.",
      "parentUuid": "2675ae07_3a104530",
      "revId": "1f40faaa987aa0d927e094b6bebc2cfc35e5858f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "268cce49_6def7597",
        "filename": "media/mtp/MtpFfsHandle.cpp",
        "patchSetId": 6
      },
      "lineNbr": 175,
      "author": {
        "id": 1091002
      },
      "writtenOn": "2016-10-31T02:05:06Z",
      "side": 1,
      "message": "source should be USB_DIR_IN?",
      "revId": "1f40faaa987aa0d927e094b6bebc2cfc35e5858f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2675ae07_d93ae3e0",
        "filename": "media/mtp/MtpFfsHandle.cpp",
        "patchSetId": 6
      },
      "lineNbr": 175,
      "author": {
        "id": 1113594
      },
      "writtenOn": "2016-10-31T21:14:05Z",
      "side": 1,
      "message": "For usb endpoints, IN always refers to device to host, and OUT refers to host to device.",
      "parentUuid": "268cce49_6def7597",
      "revId": "1f40faaa987aa0d927e094b6bebc2cfc35e5858f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "268cce49_8ded814f",
        "filename": "media/mtp/MtpFfsHandle.cpp",
        "patchSetId": 6
      },
      "lineNbr": 175,
      "author": {
        "id": 1091002
      },
      "writtenOn": "2016-11-01T01:05:53Z",
      "side": 1,
      "message": "Could you double check? In f_mtp.c, there are three endpoints, in, out, intr. And the directions look like USB_DIR_IN for in, USB_DIR_OUT for out, USB_DIR_IN for intr.\n\nhttps://cs.corp.google.com/android/hardware/bsp/kernel/common/v4.4/drivers/usb/gadget/function/f_mtp.c?rcl\u003d4ecd03a43349a6dab58bc7f964de13698a5cef0e\u0026l\u003d213\n\nIn the func_desc structure in this file, there are also three endpoints: source, sink, intr. And the directions look like USB_DIR_OUT for source, USB_DIR_IN for sink, and USB_DIR_IN for intr.\n\nI\u0027m not sure if the difference of orders (USB_DIR_IN, USB_DIR_OUT, USB_DIR_IN) vs (USB_DIR_OUT, USB_DIR_IN, USB_DIR_IN) is matter. But wondered why the two definitions are different.",
      "parentUuid": "2675ae07_d93ae3e0",
      "revId": "1f40faaa987aa0d927e094b6bebc2cfc35e5858f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "268cce49_8d03c173",
        "filename": "media/mtp/MtpFfsHandle.cpp",
        "patchSetId": 6
      },
      "lineNbr": 183,
      "author": {
        "id": 1091002
      },
      "writtenOn": "2016-10-31T02:05:06Z",
      "side": 1,
      "message": "sink should be USB_DIR_OUT?",
      "revId": "1f40faaa987aa0d927e094b6bebc2cfc35e5858f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2675ae07_19447b67",
        "filename": "media/mtp/MtpFfsHandle.cpp",
        "patchSetId": 6
      },
      "lineNbr": 183,
      "author": {
        "id": 1113594
      },
      "writtenOn": "2016-10-31T21:14:05Z",
      "side": 1,
      "message": "see above",
      "parentUuid": "268cce49_8d03c173",
      "revId": "1f40faaa987aa0d927e094b6bebc2cfc35e5858f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "268cce49_ad007d67",
        "filename": "media/mtp/MtpFfsHandle.cpp",
        "patchSetId": 6
      },
      "lineNbr": 262,
      "author": {
        "id": 1091002
      },
      "writtenOn": "2016-10-31T02:05:06Z",
      "side": 1,
      "message": "nit: Debug code?",
      "revId": "1f40faaa987aa0d927e094b6bebc2cfc35e5858f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2675ae07_7a363db1",
        "filename": "media/mtp/MtpFfsHandle.cpp",
        "patchSetId": 6
      },
      "lineNbr": 262,
      "author": {
        "id": 1113594
      },
      "writtenOn": "2016-10-31T21:14:05Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "268cce49_ad007d67",
      "revId": "1f40faaa987aa0d927e094b6bebc2cfc35e5858f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "268cce49_4d65595d",
        "filename": "media/mtp/MtpFfsHandle.cpp",
        "patchSetId": 6
      },
      "lineNbr": 553,
      "author": {
        "id": 1091002
      },
      "writtenOn": "2016-10-31T02:05:06Z",
      "side": 1,
      "message": "This should be mClosedLock.",
      "range": {
        "startLine": 553,
        "startChar": 36,
        "endLine": 553,
        "endChar": 46
      },
      "revId": "1f40faaa987aa0d927e094b6bebc2cfc35e5858f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2675ae07_0e9fca35",
        "filename": "media/mtp/MtpFfsHandle.cpp",
        "patchSetId": 6
      },
      "lineNbr": 553,
      "author": {
        "id": 1113594
      },
      "writtenOn": "2016-10-31T21:14:05Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "268cce49_4d65595d",
      "range": {
        "startLine": 553,
        "startChar": 36,
        "endLine": 553,
        "endChar": 46
      },
      "revId": "1f40faaa987aa0d927e094b6bebc2cfc35e5858f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "268cce49_8d4e61dc",
        "filename": "media/mtp/MtpFfsHandle.cpp",
        "patchSetId": 6
      },
      "lineNbr": 556,
      "author": {
        "id": 1091002
      },
      "writtenOn": "2016-10-31T02:05:06Z",
      "side": 1,
      "message": "1. configure()\n2. configure()\n3. start()\n\nwill cause dead lock here because mClosed will not be true at the second configure call.",
      "revId": "1f40faaa987aa0d927e094b6bebc2cfc35e5858f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2675ae07_f9d31f5d",
        "filename": "media/mtp/MtpFfsHandle.cpp",
        "patchSetId": 6
      },
      "lineNbr": 556,
      "author": {
        "id": 1113594
      },
      "writtenOn": "2016-10-31T21:14:05Z",
      "side": 1,
      "message": "you\u0027re right this block should be below the check for ffs being already open so the second configure does not wait.",
      "parentUuid": "268cce49_8d4e61dc",
      "revId": "1f40faaa987aa0d927e094b6bebc2cfc35e5858f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "268cce49_6d6a1530",
        "filename": "media/mtp/MtpFfsHandle.cpp",
        "patchSetId": 6
      },
      "lineNbr": 562,
      "author": {
        "id": 1091002
      },
      "writtenOn": "2016-10-31T02:05:06Z",
      "side": 1,
      "message": "We have dead lock here?\n\n1. configure()\n2. configure() // Return here because mBulkIn \u003e 0.\n3. start() // mReadyCond.wait does not return because mReady will not be true.",
      "range": {
        "startLine": 562,
        "startChar": 4,
        "endLine": 562,
        "endChar": 30
      },
      "revId": "1f40faaa987aa0d927e094b6bebc2cfc35e5858f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "268cce49_cd26a92e",
        "filename": "media/mtp/MtpFfsHandle.cpp",
        "patchSetId": 6
      },
      "lineNbr": 562,
      "author": {
        "id": 1091002
      },
      "writtenOn": "2016-10-31T02:05:06Z",
      "side": 1,
      "message": "If mBulkIn has already been opened, it\u0027s OK not to check mPtp !\u003d usePtp?",
      "revId": "1f40faaa987aa0d927e094b6bebc2cfc35e5858f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "466e220f_ab3e997c",
        "filename": "media/mtp/MtpFfsHandle.cpp",
        "patchSetId": 6
      },
      "lineNbr": 562,
      "author": {
        "id": 1113594
      },
      "writtenOn": "2016-10-31T21:14:05Z",
      "side": 1,
      "message": "If the first configure sets mReady to true, additional configures shouldn\u0027t affect that value.",
      "parentUuid": "268cce49_6d6a1530",
      "range": {
        "startLine": 562,
        "startChar": 4,
        "endLine": 562,
        "endChar": 30
      },
      "revId": "1f40faaa987aa0d927e094b6bebc2cfc35e5858f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2675ae07_b96527cd",
        "filename": "media/mtp/MtpFfsHandle.cpp",
        "patchSetId": 6
      },
      "lineNbr": 562,
      "author": {
        "id": 1113594
      },
      "writtenOn": "2016-10-31T21:14:05Z",
      "side": 1,
      "message": "A configuration change from mtp to ptp will cause mtpserver to shut down and close the non config endpoints. Configure would be called, but it would have to wait for the server to finish closing before resetting the config",
      "parentUuid": "268cce49_cd26a92e",
      "revId": "1f40faaa987aa0d927e094b6bebc2cfc35e5858f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "268cce49_cdfdc94a",
        "filename": "media/mtp/MtpFfsHandle.cpp",
        "patchSetId": 6
      },
      "lineNbr": 771,
      "author": {
        "id": 1091002
      },
      "writtenOn": "2016-10-31T02:05:06Z",
      "side": 1,
      "message": "Can we define everything except for get_ffs_handle in an anonymous namespace?",
      "revId": "1f40faaa987aa0d927e094b6bebc2cfc35e5858f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2675ae07_1a4e293a",
        "filename": "media/mtp/MtpFfsHandle.cpp",
        "patchSetId": 6
      },
      "lineNbr": 771,
      "author": {
        "id": 1113594
      },
      "writtenOn": "2016-10-31T21:14:05Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "268cce49_cdfdc94a",
      "revId": "1f40faaa987aa0d927e094b6bebc2cfc35e5858f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}