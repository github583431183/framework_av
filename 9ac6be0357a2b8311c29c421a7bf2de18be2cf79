{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "dbc8d64a_00c6d0f4",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 10,
      "author": {
        "id": 1040213
      },
      "writtenOn": "2022-06-30T06:01:57Z",
      "side": 1,
      "message": "for future bug triage purposes, can you please open a bug on this, and give an example of the problem it solves?\n\n\"I founded that some app will stop play after several minutes, when the playback thread is suspended, and the root cause is  MixerThread::suspendSleepTimeUs returned a smaller value.\"\n\nCan you also include the value of mNormalFrameCount, sample rate, suspendSleepTimeUs return value, and the app?\n\nThanks!  Once the bug is open, add this line above the change id.\n\nBug: XYZ",
      "revId": "9ac6be0357a2b8311c29c421a7bf2de18be2cf79",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1e1d0e1d_4e128570",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 10,
      "author": {
        "id": 1931225
      },
      "writtenOn": "2022-07-05T02:09:39Z",
      "side": 1,
      "message": "mNormalFrameCount: 2048\nsample rate: 48000\nsuspendSleepTimeUs: 42000\napp: com.roposo.android com.google.android.apps.nbu.files\nplaybackthread is suspended",
      "parentUuid": "dbc8d64a_00c6d0f4",
      "revId": "9ac6be0357a2b8311c29c421a7bf2de18be2cf79",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "51854c05_800cf93e",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 10,
      "author": {
        "id": 1931225
      },
      "writtenOn": "2022-07-05T02:41:40Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "1e1d0e1d_4e128570",
      "revId": "9ac6be0357a2b8311c29c421a7bf2de18be2cf79",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c48746af_82e7748c",
        "filename": "services/audioflinger/Threads.cpp",
        "patchSetId": 1
      },
      "lineNbr": 3206,
      "author": {
        "id": 1060286
      },
      "writtenOn": "2022-06-22T15:45:34Z",
      "side": 1,
      "message": "is there a chance of overflowing  here? how large can mNormalFrameCount be?",
      "range": {
        "startLine": 3206,
        "startChar": 23,
        "endLine": 3206,
        "endChar": 50
      },
      "revId": "9ac6be0357a2b8311c29c421a7bf2de18be2cf79",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "52b1fc11_1f0ab24c",
        "filename": "services/audioflinger/Threads.cpp",
        "patchSetId": 1
      },
      "lineNbr": 3206,
      "author": {
        "id": 1060750
      },
      "writtenOn": "2022-06-23T15:07:08Z",
      "side": 1,
      "message": "There is a significant chance of overflowing if size_t is 32-bits.\nIf the mNormalFrameCount is \u003e\u003d 4294 then it would overflow.\nThat is about 89 msec at 48000 Hz.\n\nIf we need to run in a 32-bit mode then we should cast to uint64_t for the intermediate terms.",
      "parentUuid": "c48746af_82e7748c",
      "range": {
        "startLine": 3206,
        "startChar": 23,
        "endLine": 3206,
        "endChar": 50
      },
      "revId": "9ac6be0357a2b8311c29c421a7bf2de18be2cf79",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d6ee5bba_8662b73b",
        "filename": "services/audioflinger/Threads.cpp",
        "patchSetId": 1
      },
      "lineNbr": 3206,
      "author": {
        "id": 1931225
      },
      "writtenOn": "2022-06-24T01:49:35Z",
      "side": 1,
      "message": "I founded that some app will stop play after several minutes, when the playback thread is suspended, and the root cause is  MixerThread::suspendSleepTimeUs returned a smaller value.",
      "parentUuid": "52b1fc11_1f0ab24c",
      "range": {
        "startLine": 3206,
        "startChar": 23,
        "endLine": 3206,
        "endChar": 50
      },
      "revId": "9ac6be0357a2b8311c29c421a7bf2de18be2cf79",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "959249c3_8297c571",
        "filename": "services/audioflinger/Threads.cpp",
        "patchSetId": 1
      },
      "lineNbr": 3206,
      "author": {
        "id": 1931225
      },
      "writtenOn": "2022-06-24T02:39:07Z",
      "side": 1,
      "message": "I tested it on ubuntu, the result shows that there is no overflow:\nyaoyongming@ubuntu-4-145:/work/oppo_yaoyongming/lab/overflow$ g++ 1.cpp \nyaoyongming@ubuntu-4-145:/work/oppo_yaoyongming/lab/overflow$ ./a.out   \nsizeof size_t     \u003d 8\nsizeof uint32_t   \u003d 4\nmNormalFrameCount \u003d 4294\nmSampleRate       \u003d 48000\nbefore result is  \u003d 89000\nafter  result is  \u003d 89458\n\nThe following shows the scenarios of the problems I found:\nyaoyongming@ubuntu-4-145:/work/oppo_yaoyongming/lab/overflow$ g++ 1.cpp \nyaoyongming@ubuntu-4-145:/work/oppo_yaoyongming/lab/overflow$ ./a.out   \nsizeof size_t     \u003d 8\nsizeof uint32_t   \u003d 4\nmNormalFrameCount \u003d 2048\nmSampleRate       \u003d 48000\nbefore result is  \u003d 42000\nafter  result is  \u003d 42666",
      "parentUuid": "d6ee5bba_8662b73b",
      "range": {
        "startLine": 3206,
        "startChar": 23,
        "endLine": 3206,
        "endChar": 50
      },
      "revId": "9ac6be0357a2b8311c29c421a7bf2de18be2cf79",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "1549ebaa_81d822af",
        "filename": "services/audioflinger/Threads.cpp",
        "patchSetId": 1
      },
      "lineNbr": 3206,
      "author": {
        "id": 1931225
      },
      "writtenOn": "2022-06-27T01:28:08Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "959249c3_8297c571",
      "range": {
        "startLine": 3206,
        "startChar": 23,
        "endLine": 3206,
        "endChar": 50
      },
      "revId": "9ac6be0357a2b8311c29c421a7bf2de18be2cf79",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "fc91070d_64a836f8",
        "filename": "services/audioflinger/Threads.cpp",
        "patchSetId": 1
      },
      "lineNbr": 3206,
      "author": {
        "id": 1060750
      },
      "writtenOn": "2022-06-27T19:31:24Z",
      "side": 1,
      "message": "If size_t is 8 then it will not overflow. But if size_t is 4 then it will easily overflow.\n\n@hunga - is anyone still running AudioFlinger in 32-bit mode?\nI think it would be safer to use a uint64_t intermediate term to avoid overflow.\n\n@Yongming - It is not clear why this change would fix the problem with playback stopping. Can you explain more?",
      "parentUuid": "1549ebaa_81d822af",
      "range": {
        "startLine": 3206,
        "startChar": 23,
        "endLine": 3206,
        "endChar": 50
      },
      "revId": "9ac6be0357a2b8311c29c421a7bf2de18be2cf79",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c8fa49b4_79aa464c",
        "filename": "services/audioflinger/Threads.cpp",
        "patchSetId": 1
      },
      "lineNbr": 3206,
      "author": {
        "id": 1931225
      },
      "writtenOn": "2022-06-30T03:42:44Z",
      "side": 1,
      "message": "suspendSleepTimeUs() will affect threadloop\u0027s periods, if threadloop\u0027s periods becomes shorter, it maybe mismatch client\u0027s audio data write logic.",
      "parentUuid": "fc91070d_64a836f8",
      "range": {
        "startLine": 3206,
        "startChar": 23,
        "endLine": 3206,
        "endChar": 50
      },
      "revId": "9ac6be0357a2b8311c29c421a7bf2de18be2cf79",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "47a8a52b_8b7aa430",
        "filename": "services/audioflinger/Threads.cpp",
        "patchSetId": 1
      },
      "lineNbr": 3206,
      "author": {
        "id": 1040213
      },
      "writtenOn": "2022-06-30T06:01:57Z",
      "side": 1,
      "message": "Phil, I agree, we should use an intermediate int64_t or uint64_t (either is fine).  That would be as simple as:\n\n  (uint32_t)((mNormalFrameCount * 1000000LL) / mSampleRate)\n \nbut we should use something like MICROS_PER_SECOND (here and below).\n\n  (uint32_t)((mNormalFrameCount * MICROS_PER_SECOND) / mSampleRate)\n  \nhttps://cs.android.com/android/platform/superproject/+/master:system/media/audio_utils/include/audio_utils/clock.h;drc\u003d592515407dc325c5b0be81483618f8f2ea90dd75;l\u003d29\n  \nTBH, the original code is accurate to 1ms (rounding down).  I think mNormalFrameCount is typically a multiple of ms, so that\u0027s not an issue except for a sample rate like 44.1kHz.  In this context, mNormalFrameCount is typically (but not always) 20ms or larger.\n\nI\u0027d be curious on when the original precision granularity of 1ms is an issue.",
      "range": {
        "startLine": 3206,
        "startChar": 11,
        "endLine": 3206,
        "endChar": 66
      },
      "revId": "9ac6be0357a2b8311c29c421a7bf2de18be2cf79",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c9ba46d7_0a16514b",
        "filename": "services/audioflinger/Threads.cpp",
        "patchSetId": 1
      },
      "lineNbr": 3206,
      "author": {
        "id": 1931225
      },
      "writtenOn": "2022-07-05T02:41:59Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "47a8a52b_8b7aa430",
      "range": {
        "startLine": 3206,
        "startChar": 11,
        "endLine": 3206,
        "endChar": 66
      },
      "revId": "9ac6be0357a2b8311c29c421a7bf2de18be2cf79",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}