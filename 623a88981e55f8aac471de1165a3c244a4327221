{
  "comments": [
    {
      "key": {
        "uuid": "e0afdeb0_e6fedda6",
        "filename": "media/libstagefright/foundation/tests/OpusHeader/OpusHeaderTest.cpp",
        "patchSetId": 11
      },
      "lineNbr": 140,
      "author": {
        "id": 1108919
      },
      "writtenOn": "2020-03-05T22:52:50Z",
      "side": 1,
      "message": "i think we need to be checking these for specific values even in the mono/stereo cases.\nit appears to me that they appear in the file based on the channel mapping family,\nnot the number of channels.",
      "range": {
        "startLine": 137,
        "startChar": 7,
        "endLine": 140,
        "endChar": 69
      },
      "revId": "623a88981e55f8aac471de1165a3c244a4327221",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7e7c56ab_959c48a8",
        "filename": "media/libstagefright/foundation/tests/OpusHeader/OpusHeaderTest.cpp",
        "patchSetId": 11
      },
      "lineNbr": 140,
      "author": {
        "id": 1550394
      },
      "writtenOn": "2020-03-07T18:33:43Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "e0afdeb0_e6fedda6",
      "range": {
        "startLine": 137,
        "startChar": 7,
        "endLine": 140,
        "endChar": 69
      },
      "revId": "623a88981e55f8aac471de1165a3c244a4327221",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "edf2ed50_91298ba3",
        "filename": "media/libstagefright/foundation/tests/OpusHeader/OpusHeaderTest.cpp",
        "patchSetId": 11
      },
      "lineNbr": 227,
      "author": {
        "id": 1108919
      },
      "writtenOn": "2020-03-05T22:52:50Z",
      "side": 1,
      "message": "ASSERT_LE(header.channels \u003c\u003d kMaxChannels)",
      "range": {
        "startLine": 227,
        "startChar": 21,
        "endLine": 227,
        "endChar": 29
      },
      "revId": "623a88981e55f8aac471de1165a3c244a4327221",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "025eba00_973ff8bd",
        "filename": "media/libstagefright/foundation/tests/OpusHeader/OpusHeaderTest.cpp",
        "patchSetId": 11
      },
      "lineNbr": 227,
      "author": {
        "id": 1550394
      },
      "writtenOn": "2020-03-07T18:33:43Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "edf2ed50_91298ba3",
      "range": {
        "startLine": 227,
        "startChar": 21,
        "endLine": 227,
        "endChar": 29
      },
      "revId": "623a88981e55f8aac471de1165a3c244a4327221",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "25445b9a_1bcdd5bf",
        "filename": "media/libstagefright/foundation/tests/OpusHeader/OpusHeaderTest.cpp",
        "patchSetId": 11
      },
      "lineNbr": 229,
      "author": {
        "id": 1108919
      },
      "writtenOn": "2020-03-05T22:52:50Z",
      "side": 1,
      "message": "this test is good.\n\nshouldn\u0027t we also ASSERT_EQ(num_coupled + num_streams \u003d\u003d channels):",
      "range": {
        "startLine": 229,
        "startChar": 14,
        "endLine": 229,
        "endChar": 53
      },
      "revId": "623a88981e55f8aac471de1165a3c244a4327221",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2652135c_c746df4a",
        "filename": "media/libstagefright/foundation/tests/OpusHeader/OpusHeaderTest.cpp",
        "patchSetId": 11
      },
      "lineNbr": 229,
      "author": {
        "id": 1550394
      },
      "writtenOn": "2020-03-07T18:33:43Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "25445b9a_1bcdd5bf",
      "range": {
        "startLine": 229,
        "startChar": 14,
        "endLine": 229,
        "endChar": 53
      },
      "revId": "623a88981e55f8aac471de1165a3c244a4327221",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}