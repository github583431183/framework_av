{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "32b70568_e7856b8e",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1108919
      },
      "writtenOn": "2021-01-21T14:45:41Z",
      "side": 1,
      "message": "\n\u003d\u003d This is a valid complaint, but we force all uninitialized memory to\n\u003d\u003d zero, so it seems harmless to make this explicit in the code.\n\ni thought that was only an internal experiment to help us detect things.\nwe also had an experiment that loaded a known non-zero pattern to help trigger failures\nfor uninitialized memory.",
      "revId": "08464604642675b3dcbc7cfc7a7f793f115ec548",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a8f6d012_d342d292",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1108919
      },
      "writtenOn": "2021-01-21T17:03:53Z",
      "side": 1,
      "message": "(i was wrong -- the zero-init for stack variables work did roll out to production.)",
      "parentUuid": "32b70568_e7856b8e",
      "revId": "08464604642675b3dcbc7cfc7a7f793f115ec548",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2b127247_b899ae0f",
        "filename": "media/codecs/amrnb/enc/src/cor_h_x2.cpp",
        "patchSetId": 2
      },
      "lineNbr": 263,
      "author": {
        "id": 1108919
      },
      "writtenOn": "2021-01-21T14:56:03Z",
      "side": 1,
      "message": "first thought is that this would initialize all of them.\nthe reason it isn\u0027t is the \u0027step\u0027 can be something other than 1\nand thus we\u0027d skip some of the entries.",
      "range": {
        "startLine": 263,
        "startChar": 12,
        "endLine": 263,
        "endChar": 23
      },
      "revId": "08464604642675b3dcbc7cfc7a7f793f115ec548",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "085455a8_97dba00a",
        "filename": "media/codecs/amrnb/enc/src/cor_h_x2.cpp",
        "patchSetId": 2
      },
      "lineNbr": 263,
      "author": {
        "id": 1096946
      },
      "writtenOn": "2021-01-21T17:57:40Z",
      "side": 1,
      "message": "yeah, either `nb_track \u003d\u003d 0` or `step !\u003d 1` has to be the case for `y32` to not be fully initialized. would you prefer that i add asserts to those effects, or just stick with the zero-init?",
      "parentUuid": "2b127247_b899ae0f",
      "range": {
        "startLine": 263,
        "startChar": 12,
        "endLine": 263,
        "endChar": 23
      },
      "revId": "08464604642675b3dcbc7cfc7a7f793f115ec548",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "155e197c_a77e28ef",
        "filename": "media/codecs/amrnb/enc/src/cor_h_x2.cpp",
        "patchSetId": 2
      },
      "lineNbr": 263,
      "author": {
        "id": 1108919
      },
      "writtenOn": "2021-01-21T18:27:16Z",
      "side": 1,
      "message": "stay with the zero initialization.",
      "parentUuid": "085455a8_97dba00a",
      "range": {
        "startLine": 263,
        "startChar": 12,
        "endLine": 263,
        "endChar": 23
      },
      "revId": "08464604642675b3dcbc7cfc7a7f793f115ec548",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "98c7f5aa_afddffd3",
        "filename": "media/codecs/amrnb/enc/src/cor_h_x2.cpp",
        "patchSetId": 2
      },
      "lineNbr": 263,
      "author": {
        "id": 1096946
      },
      "writtenOn": "2021-01-21T18:31:06Z",
      "side": 1,
      "message": "thanks!",
      "parentUuid": "155e197c_a77e28ef",
      "range": {
        "startLine": 263,
        "startChar": 12,
        "endLine": 263,
        "endChar": 23
      },
      "revId": "08464604642675b3dcbc7cfc7a7f793f115ec548",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}