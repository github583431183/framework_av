{
  "comments": [
    {
      "key": {
        "uuid": "a34ec42c_8ab0df16",
        "filename": "media/libstagefright/codecs/mp3dec/fuzzer/mp3_dec_fuzzer.cpp",
        "patchSetId": 1
      },
      "lineNbr": 38,
      "author": {
        "id": 1108919
      },
      "writtenOn": "2020-04-06T17:00:45Z",
      "side": 1,
      "message": "it feels to me like this should be 0 unless we get to the end where we can fill in\nthe actual number.",
      "range": {
        "startLine": 38,
        "startChar": 42,
        "endLine": 38,
        "endChar": 47
      },
      "revId": "9890fb6bcb3016ded5b319cd900ff91b4a755ebf",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d2e0c9c1_2e3a05c2",
        "filename": "media/libstagefright/codecs/mp3dec/fuzzer/mp3_dec_fuzzer.cpp",
        "patchSetId": 1
      },
      "lineNbr": 38,
      "author": {
        "id": 1653964
      },
      "writtenOn": "2020-04-07T12:28:49Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "a34ec42c_8ab0df16",
      "range": {
        "startLine": 38,
        "startChar": 42,
        "endLine": 38,
        "endChar": 47
      },
      "revId": "9890fb6bcb3016ded5b319cd900ff91b4a755ebf",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c4270d27_0749533c",
        "filename": "media/libstagefright/codecs/mp3dec/fuzzer/mp3_dec_fuzzer.cpp",
        "patchSetId": 1
      },
      "lineNbr": 146,
      "author": {
        "id": 1108919
      },
      "writtenOn": "2020-04-06T17:00:45Z",
      "side": 1,
      "message": "if i\u0027m tracking correctly.\n\nwe have a buffer of bytes.\nwe\u0027re going to walk through until we find a legitimate 32-byte header.\nso we check at +0, +4, +8 , ... out to inSize-4  [assuming inSize is multiple of 4]\n\nshould we be starting the search at inSize-4 and walking backwards? It seems to me\nthat the more likely case is that the magic header is closer to the end of the buffer\nthan somewhere in the middle.\n\nhave to do a little work to make sure that if we start at inSize-4, we\u0027re on an\nappropriate multiple-of-4 boundary. But that\u0027s just being careful with the initial value.\n\nor is there something in play with knowing that we are sending multiple frames here all the time and we have to do it in order?",
      "range": {
        "startLine": 139,
        "startChar": 2,
        "endLine": 146,
        "endChar": 3
      },
      "revId": "9890fb6bcb3016ded5b319cd900ff91b4a755ebf",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f42b1e5e_ef9a0995",
        "filename": "media/libstagefright/codecs/mp3dec/fuzzer/mp3_dec_fuzzer.cpp",
        "patchSetId": 1
      },
      "lineNbr": 146,
      "author": {
        "id": 1653964
      },
      "writtenOn": "2020-04-07T12:28:49Z",
      "side": 1,
      "message": "The implementation checks if valid headers are present at all frame boundaries. This is similar to the checks present in Codec2. In this way if any issue is caught by fuzzer plugin, it will most likely be present via Codec2 path also.",
      "parentUuid": "c4270d27_0749533c",
      "range": {
        "startLine": 139,
        "startChar": 2,
        "endLine": 146,
        "endChar": 3
      },
      "revId": "9890fb6bcb3016ded5b319cd900ff91b4a755ebf",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    }
  ]
}