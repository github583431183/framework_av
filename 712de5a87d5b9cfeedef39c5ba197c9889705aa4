{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "bf22200e_b3ab9db3",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1019050
      },
      "writtenOn": "2023-05-16T22:57:42Z",
      "side": 1,
      "message": "This is clean-up in preparation to modify debuggerd to add a new allowed syscall.",
      "revId": "712de5a87d5b9cfeedef39c5ba197c9889705aa4",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "af5ce277_0bd1409d",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1019050
      },
      "writtenOn": "2023-05-22T19:34:23Z",
      "side": 1,
      "message": "This actually increases security since it disallows any EXEC maps.\n\nI couldn\u0027t find any reason in the past that the code allowed EXEC maps, but it might be required for sw codecs.\n\nif it is, I can come up with a new solution for this.",
      "revId": "712de5a87d5b9cfeedef39c5ba197c9889705aa4",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b145c3e5_d306a527",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2023-05-22T19:38:30Z",
      "side": 1,
      "message": "doesn\u0027t `1` just mean \"always allowed\"? don\u0027t you need `arg2 in ~PROT_EXEC` if you want to disallow PROT_EXEC?",
      "parentUuid": "af5ce277_0bd1409d",
      "revId": "712de5a87d5b9cfeedef39c5ba197c9889705aa4",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "99541897_ca622a66",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1019050
      },
      "writtenOn": "2023-05-22T19:40:12Z",
      "side": 1,
      "message": "It inherits the restrictions from the crash_dump policy. The problem is you can\u0027t have restrictive rules in both places. If you have the arg2 restriction here, the process won\u0027t load because of rule in crash_dump policy.\n\nThat\u0027s why the other that load the crash_dump policy just set it to 1.",
      "parentUuid": "b145c3e5_d306a527",
      "revId": "712de5a87d5b9cfeedef39c5ba197c9889705aa4",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "0d22d9a9_a0bcf9e1",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2023-05-22T20:01:36Z",
      "side": 1,
      "message": "so shouldn\u0027t we just _remove_ these lines rather than have them be `1`, in case crash_dump policy changes?",
      "parentUuid": "99541897_ca622a66",
      "revId": "712de5a87d5b9cfeedef39c5ba197c9889705aa4",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}