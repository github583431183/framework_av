{
  "comments": [
    {
      "key": {
        "uuid": "85d9c240_28ef0aab",
        "filename": "media/libstagefright/FLACExtractor.cpp",
        "patchSetId": 1
      },
      "lineNbr": 861,
      "author": {
        "id": 1001525
      },
      "writtenOn": "2015-12-15T17:32:15Z",
      "side": 1,
      "message": "The id3 spec says:\n\n\"An ID3v2 tag can be detected with the following pattern:\n$49 44 33 yy yy xx zz zz zz zz\nWhere yy is less than $FF, xx is the \u0027flags\u0027 byte and zz is less than $80.\"\n\nso it might be a good idea to check those yy and zz bytes in addition to the three leading \u0027ID3\u0027 bytes.\n\nAlso note that id3v2.4 defines an optional footer at the end of the tag, which is not included in the size. So if the version is 2.4, and the footer-flag is set, another sizeof(id3header) should be added.",
      "revId": "109de2a7d499aca4c9a2db2ddb9de0c58251338c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "85b2a2f4_fdeebfac",
        "filename": "media/libstagefright/FLACExtractor.cpp",
        "patchSetId": 1
      },
      "lineNbr": 861,
      "author": {
        "id": 1037953
      },
      "writtenOn": "2015-12-16T15:52:50Z",
      "side": 1,
      "message": "Will look into updating the commit.\n\nHowever please note that the current upload brings it more in line with how the reference sniffer in external/flac/libFLAC/metadata_iterators.c handles ID3v2 tags. By adding additional checks on the file would make Android more strict than the reference sniffer.\nIs this wanted and expected?",
      "parentUuid": "85d9c240_28ef0aab",
      "revId": "109de2a7d499aca4c9a2db2ddb9de0c58251338c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "455a6ade_a529be7a",
        "filename": "media/libstagefright/FLACExtractor.cpp",
        "patchSetId": 1
      },
      "lineNbr": 861,
      "author": {
        "id": 1001525
      },
      "writtenOn": "2015-12-16T16:23:38Z",
      "side": 1,
      "message": "It can be argued both ways. I expect the reference implementation to fail on id3v2.4 files with footer (because it will end up at the wrong offset in the file). Making the change I suggested would make it work with such files. On the other hand, we\u0027d be less forgiving with files that are technically in violation of the spec, whereas the reference parser would accept those anyway.\n\nNote that the id3 parser at frameworks/av/media/libstagefright/id3/ID3.cpp doesn\u0027t deal with footers either, but it does check that the version fields are valid.\n\nPerhaps a compromise here could be to check the version and flags, but only specifically for v2.4+footer. That way flac files that specify the id3 version wrong would still be accepted, while files that correctly specify the version and footer flag could be parsed too.",
      "parentUuid": "85b2a2f4_fdeebfac",
      "revId": "109de2a7d499aca4c9a2db2ddb9de0c58251338c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a58fdf1e_e1cf0863",
        "filename": "media/libstagefright/FLACExtractor.cpp",
        "patchSetId": 1
      },
      "lineNbr": 861,
      "author": {
        "id": 1037953
      },
      "writtenOn": "2017-11-16T14:00:00Z",
      "side": 1,
      "message": "After doing testing the code has been updated to only check for one single instance of a ID3v2 header without footers.\n\nThis is to match what external/flac/libFLAC/stream_decoder.c - skip_id3v2_tag_ does. If we accept a more complicated header (with footers) the sniffer will accept the file but the playback will fail because the footer will not be skipped.\n\nIf footer support is required then the upstream FLAC project also needs patching.",
      "parentUuid": "455a6ade_a529be7a",
      "revId": "109de2a7d499aca4c9a2db2ddb9de0c58251338c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}