{
  "comments": [
    {
      "key": {
        "uuid": "768e109b_e12be0d7",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1572775
      },
      "writtenOn": "2020-08-12T17:51:48Z",
      "side": 1,
      "message": "Please review.",
      "revId": "ecbc6ea6a3bed314eb6bcfafd5aa5abb6497d501",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a6929d4f_e4278f2c",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1047003
      },
      "writtenOn": "2020-08-12T20:01:54Z",
      "side": 1,
      "message": "Neel,\nI was looking at one more integer-overflow error reported in mpeg4/h263 decoders and looks like one or two more functions may have similar overflow errors.\nCan you please look at those functions as well?",
      "revId": "ecbc6ea6a3bed314eb6bcfafd5aa5abb6497d501",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "79b61475_836107b5",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1047003
      },
      "writtenOn": "2020-08-14T17:34:59Z",
      "side": 1,
      "message": "Ray,\nInstead of typecasting would it be better to add an attribute to disable integer overflow sanitizer checks in these functions like it was done in the following?\nhttps://cs.android.com/android/_/android/platform/frameworks/av/+/b4ca5ee2d890e68eb7eaa5fab1875bfac5d680a5\n\nthis way it would be consistent and won\u0027t impact performance.",
      "revId": "ecbc6ea6a3bed314eb6bcfafd5aa5abb6497d501",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "917c0298_825ac9e6",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1047003
      },
      "writtenOn": "2020-08-14T17:37:17Z",
      "side": 1,
      "message": "Keeping the comment \"unresolved\"",
      "parentUuid": "79b61475_836107b5",
      "revId": "ecbc6ea6a3bed314eb6bcfafd5aa5abb6497d501",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "eb2f7c6d_0f044583",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1108919
      },
      "writtenOn": "2020-08-17T21:08:06Z",
      "side": 1,
      "message": "for a routine that we know is playing games and intentionally wrapping,\nsure. I\u0027m ok with a decoration in the code.\nI\u0027d prefer the annotation in the  code instead of in the blocklist -- because then it\u0027s obvious when looking at the code that we\u0027re ignoring overflow here.",
      "parentUuid": "917c0298_825ac9e6",
      "revId": "ecbc6ea6a3bed314eb6bcfafd5aa5abb6497d501",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0f526202_278fa371",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1047003
      },
      "writtenOn": "2020-08-17T21:12:33Z",
      "side": 1,
      "message": "Ray,\nThanks.\n\nNeel,\nFor all functions which are updated here, please revert the changes and add an attribute to disable signed integer overflow sanitizer for those functions.",
      "parentUuid": "eb2f7c6d_0f044583",
      "revId": "ecbc6ea6a3bed314eb6bcfafd5aa5abb6497d501",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "cf26abe3_0b1486a0",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1572775
      },
      "writtenOn": "2020-08-18T15:30:33Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "0f526202_278fa371",
      "revId": "ecbc6ea6a3bed314eb6bcfafd5aa5abb6497d501",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a578f825_dfe02d41",
        "filename": "media/libstagefright/codecs/m4v_h263/dec/src/block_idct.cpp",
        "patchSetId": 1
      },
      "lineNbr": 893,
      "author": {
        "id": 1108919
      },
      "writtenOn": "2020-08-12T19:02:26Z",
      "side": 1,
      "message": "this still allows x4+x5 to be in 32-bits and overflow.\nhow about:\n\nx2 \u003d (181 * ((int64)x4 + x5) + 128) \u003e\u003e 8;\n\nso that the x4+x5 is protected.\n\nthis phrasing generates a better instruction sequence too.",
      "range": {
        "startLine": 892,
        "startChar": 10,
        "endLine": 893,
        "endChar": 40
      },
      "revId": "ecbc6ea6a3bed314eb6bcfafd5aa5abb6497d501",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "54e06079_7fa8e4df",
        "filename": "media/libstagefright/codecs/m4v_h263/dec/src/block_idct.cpp",
        "patchSetId": 1
      },
      "lineNbr": 893,
      "author": {
        "id": 1047003
      },
      "writtenOn": "2020-08-12T19:10:37Z",
      "side": 1,
      "message": "Ray,\nInput to this function is clipped to 12bit precision.\nOnly because of this multiplication by 181, required precision increases for these computations (i think max of 36 bits) and then \u003e\u003e8 brings the result comfortably within 32 bits.\nSo there is no need to move the typecast to x4.",
      "parentUuid": "a578f825_dfe02d41",
      "range": {
        "startLine": 892,
        "startChar": 10,
        "endLine": 893,
        "endChar": 40
      },
      "revId": "ecbc6ea6a3bed314eb6bcfafd5aa5abb6497d501",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8af2264b_e32c48eb",
        "filename": "media/libstagefright/codecs/m4v_h263/dec/src/block_idct.cpp",
        "patchSetId": 1
      },
      "lineNbr": 893,
      "author": {
        "id": 1047003
      },
      "writtenOn": "2020-08-18T15:34:04Z",
      "side": 1,
      "message": "With attribute added to ignore signed integer overflows in the whole function, this is taken care of.",
      "parentUuid": "54e06079_7fa8e4df",
      "range": {
        "startLine": 892,
        "startChar": 10,
        "endLine": 893,
        "endChar": 40
      },
      "revId": "ecbc6ea6a3bed314eb6bcfafd5aa5abb6497d501",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "67377b84_037de7f1",
        "filename": "media/libstagefright/codecs/m4v_h263/dec/src/idct_vca.cpp",
        "patchSetId": 1
      },
      "lineNbr": 338,
      "author": {
        "id": 1047003
      },
      "writtenOn": "2020-08-12T20:01:54Z",
      "side": 1,
      "message": "Neel,\nCan you please check if this needs a typecast too?",
      "range": {
        "startLine": 337,
        "startChar": 0,
        "endLine": 338,
        "endChar": 42
      },
      "revId": "ecbc6ea6a3bed314eb6bcfafd5aa5abb6497d501",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "284af1fd_c854849c",
        "filename": "media/libstagefright/codecs/m4v_h263/dec/src/idct_vca.cpp",
        "patchSetId": 1
      },
      "lineNbr": 338,
      "author": {
        "id": 1572775
      },
      "writtenOn": "2020-08-18T15:30:33Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "67377b84_037de7f1",
      "range": {
        "startLine": 337,
        "startChar": 0,
        "endLine": 338,
        "endChar": 42
      },
      "revId": "ecbc6ea6a3bed314eb6bcfafd5aa5abb6497d501",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ef430eb1_a59fe672",
        "filename": "media/libstagefright/codecs/m4v_h263/dec/src/idct_vca.cpp",
        "patchSetId": 1
      },
      "lineNbr": 399,
      "author": {
        "id": 1108919
      },
      "writtenOn": "2020-08-12T19:02:26Z",
      "side": 1,
      "message": "same comment as in the other file.",
      "range": {
        "startLine": 399,
        "startChar": 7,
        "endLine": 399,
        "endChar": 24
      },
      "revId": "ecbc6ea6a3bed314eb6bcfafd5aa5abb6497d501",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "cbe7d003_91591741",
        "filename": "media/libstagefright/codecs/m4v_h263/dec/src/idct_vca.cpp",
        "patchSetId": 1
      },
      "lineNbr": 399,
      "author": {
        "id": 1572775
      },
      "writtenOn": "2020-08-18T15:30:33Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "ef430eb1_a59fe672",
      "range": {
        "startLine": 399,
        "startChar": 7,
        "endLine": 399,
        "endChar": 24
      },
      "revId": "ecbc6ea6a3bed314eb6bcfafd5aa5abb6497d501",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "370428cc_99039838",
        "filename": "media/libstagefright/codecs/m4v_h263/dec/src/idct_vca.cpp",
        "patchSetId": 1
      },
      "lineNbr": 618,
      "author": {
        "id": 1047003
      },
      "writtenOn": "2020-08-12T20:01:54Z",
      "side": 1,
      "message": "and this?",
      "range": {
        "startLine": 617,
        "startChar": 0,
        "endLine": 618,
        "endChar": 42
      },
      "revId": "ecbc6ea6a3bed314eb6bcfafd5aa5abb6497d501",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "08f4be17_9c0541af",
        "filename": "media/libstagefright/codecs/m4v_h263/dec/src/idct_vca.cpp",
        "patchSetId": 1
      },
      "lineNbr": 618,
      "author": {
        "id": 1572775
      },
      "writtenOn": "2020-08-18T15:30:33Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "370428cc_99039838",
      "range": {
        "startLine": 617,
        "startChar": 0,
        "endLine": 618,
        "endChar": 42
      },
      "revId": "ecbc6ea6a3bed314eb6bcfafd5aa5abb6497d501",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}