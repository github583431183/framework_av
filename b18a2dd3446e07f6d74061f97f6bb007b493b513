{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "fa0d7ae0_7a52aab5",
        "filename": "media/codec2/hal/common/MultiAccessUnitHelper.cpp",
        "patchSetId": 2
      },
      "lineNbr": 206,
      "author": {
        "id": 1018606
      },
      "writtenOn": "2024-04-23T17:20:32Z",
      "side": 1,
      "message": "is this equivalent to `mFrameHolder.empty()`? if so -- should we have it as a method?",
      "range": {
        "startLine": 206,
        "startChar": 4,
        "endLine": 206,
        "endChar": 28
      },
      "revId": "b18a2dd3446e07f6d74061f97f6bb007b493b513",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b4d630d6_22106245",
        "filename": "media/codec2/hal/common/MultiAccessUnitHelper.cpp",
        "patchSetId": 2
      },
      "lineNbr": 206,
      "author": {
        "id": 1939216
      },
      "writtenOn": "2024-04-23T21:49:10Z",
      "side": 1,
      "message": "maxSize \u003e 0 will enable this module and the framework will startg receiving metadata. When that happens this also updates the metadata for buffers help in the skip-cut buffer. If maxSize is set to 0 in the middle then we dont send metadata. So changing from zero to non-zero or non-zero to zero can cause issues with skip cut logic. So once the codec is in session, this cannot be done. But changing maxSize to another non-zero value is ok.\nThis variable is to track that situation.",
      "parentUuid": "fa0d7ae0_7a52aab5",
      "range": {
        "startLine": 206,
        "startChar": 4,
        "endLine": 206,
        "endChar": 28
      },
      "revId": "b18a2dd3446e07f6d74061f97f6bb007b493b513",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c7393d4a_93c541d0",
        "filename": "media/codec2/hal/common/MultiAccessUnitHelper.cpp",
        "patchSetId": 2
      },
      "lineNbr": 206,
      "author": {
        "id": 1018606
      },
      "writtenOn": "2024-04-30T00:23:15Z",
      "side": 1,
      "message": "Acknowledged",
      "parentUuid": "b4d630d6_22106245",
      "range": {
        "startLine": 206,
        "startChar": 4,
        "endLine": 206,
        "endChar": 28
      },
      "revId": "b18a2dd3446e07f6d74061f97f6bb007b493b513",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6fd077ca_fe75f6b1",
        "filename": "media/codec2/hal/common/MultiAccessUnitHelper.cpp",
        "patchSetId": 2
      },
      "lineNbr": 277,
      "author": {
        "id": 1018606
      },
      "writtenOn": "2024-04-23T17:20:32Z",
      "side": 1,
      "message": "nit: I\u0027d prefer listing all lambda captures explicitly",
      "revId": "b18a2dd3446e07f6d74061f97f6bb007b493b513",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c91c5416_eff76b51",
        "filename": "media/codec2/hal/common/MultiAccessUnitHelper.cpp",
        "patchSetId": 2
      },
      "lineNbr": 277,
      "author": {
        "id": 1939216
      },
      "writtenOn": "2024-04-23T21:49:10Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "6fd077ca_fe75f6b1",
      "revId": "b18a2dd3446e07f6d74061f97f6bb007b493b513",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f32d7c49_8d20d1af",
        "filename": "media/codec2/hal/common/MultiAccessUnitHelper.cpp",
        "patchSetId": 2
      },
      "lineNbr": 288,
      "author": {
        "id": 1018606
      },
      "writtenOn": "2024-04-23T17:20:32Z",
      "side": 1,
      "message": "do we just drop the config if the reconfigure fails?",
      "revId": "b18a2dd3446e07f6d74061f97f6bb007b493b513",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "92de1308_4c18541a",
        "filename": "media/codec2/hal/common/MultiAccessUnitHelper.cpp",
        "patchSetId": 2
      },
      "lineNbr": 288,
      "author": {
        "id": 1939216
      },
      "writtenOn": "2024-04-23T21:49:10Z",
      "side": 1,
      "message": "yes, if we are unable to apply it now, then the old config is retained? Not sure if we need to update work-\u003econfigUpdate if we dont change.",
      "parentUuid": "f32d7c49_8d20d1af",
      "revId": "b18a2dd3446e07f6d74061f97f6bb007b493b513",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7f455e8e_7cb9048e",
        "filename": "media/codec2/hal/common/MultiAccessUnitHelper.cpp",
        "patchSetId": 2
      },
      "lineNbr": 288,
      "author": {
        "id": 1018606
      },
      "writtenOn": "2024-04-30T00:23:15Z",
      "side": 1,
      "message": "Yes the old config will be retained on the component side. On the semantics though, I wonder if we want to keep the failed config so that the helper can reconfigure itself when it is ready for it, or it\u0027s okay to drop the request here.",
      "parentUuid": "92de1308_4c18541a",
      "revId": "b18a2dd3446e07f6d74061f97f6bb007b493b513",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7e2eb065_64a312b9",
        "filename": "media/codec2/hal/common/MultiAccessUnitHelper.cpp",
        "patchSetId": 2
      },
      "lineNbr": 288,
      "author": {
        "id": 1939216
      },
      "writtenOn": "2024-04-30T16:20:02Z",
      "side": 1,
      "message": "To the extend that i can think of, if we are not able to reconfigure now, then the it cannot be reconfigured to that value unless we do a reset, in which case an explicit reconfigure is required.",
      "parentUuid": "7f455e8e_7cb9048e",
      "revId": "b18a2dd3446e07f6d74061f97f6bb007b493b513",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}