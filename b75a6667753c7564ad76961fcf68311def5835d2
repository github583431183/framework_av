{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "7985f583_20d104dc",
        "filename": "media/codec2/sfplugin/CCodec.cpp",
        "patchSetId": 1
      },
      "lineNbr": 1443,
      "author": {
        "id": 1018606
      },
      "writtenOn": "2021-12-21T19:18:36Z",
      "side": 1,
      "message": "Can we use constants for the levels?",
      "range": {
        "startLine": 1443,
        "startChar": 42,
        "endLine": 1443,
        "endChar": 43
      },
      "revId": "b75a6667753c7564ad76961fcf68311def5835d2",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6a785048_d972dbba",
        "filename": "media/codec2/sfplugin/CCodec.cpp",
        "patchSetId": 1
      },
      "lineNbr": 1443,
      "author": {
        "id": 1108919
      },
      "writtenOn": "2021-12-21T19:23:28Z",
      "side": 1,
      "message": "i\u0027d drop this, in favor of making the switch() express all the options.",
      "range": {
        "startLine": 1443,
        "startChar": 10,
        "endLine": 1443,
        "endChar": 46
      },
      "revId": "b75a6667753c7564ad76961fcf68311def5835d2",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "aec4dd55_393aec84",
        "filename": "media/codec2/sfplugin/CCodec.cpp",
        "patchSetId": 1
      },
      "lineNbr": 1443,
      "author": {
        "id": 1903520
      },
      "writtenOn": "2021-12-21T21:03:25Z",
      "side": 1,
      "message": "Ack, Sure!",
      "parentUuid": "7985f583_20d104dc",
      "range": {
        "startLine": 1443,
        "startChar": 42,
        "endLine": 1443,
        "endChar": 43
      },
      "revId": "b75a6667753c7564ad76961fcf68311def5835d2",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "37f59fc1_afd7bd42",
        "filename": "media/codec2/sfplugin/CCodec.cpp",
        "patchSetId": 1
      },
      "lineNbr": 1443,
      "author": {
        "id": 1903520
      },
      "writtenOn": "2021-12-31T23:55:05Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "6a785048_d972dbba",
      "range": {
        "startLine": 1443,
        "startChar": 10,
        "endLine": 1443,
        "endChar": 46
      },
      "revId": "b75a6667753c7564ad76961fcf68311def5835d2",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e9109964_d22a8cd4",
        "filename": "media/codec2/sfplugin/CCodec.cpp",
        "patchSetId": 1
      },
      "lineNbr": 1444,
      "author": {
        "id": 1108919
      },
      "writtenOn": "2021-12-21T19:23:28Z",
      "side": 1,
      "message": "4 character indent steps. so L1444..1455 should be re-indented.",
      "range": {
        "startLine": 1444,
        "startChar": 9,
        "endLine": 1444,
        "endChar": 16
      },
      "revId": "b75a6667753c7564ad76961fcf68311def5835d2",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "5b4aaa96_52893ab7",
        "filename": "media/codec2/sfplugin/CCodec.cpp",
        "patchSetId": 1
      },
      "lineNbr": 1444,
      "author": {
        "id": 1903520
      },
      "writtenOn": "2021-12-31T23:55:05Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "e9109964_d22a8cd4",
      "range": {
        "startLine": 1444,
        "startChar": 9,
        "endLine": 1444,
        "endChar": 16
      },
      "revId": "b75a6667753c7564ad76961fcf68311def5835d2",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "337a5663_b2987eb9",
        "filename": "media/codec2/sfplugin/CCodec.cpp",
        "patchSetId": 1
      },
      "lineNbr": 1446,
      "author": {
        "id": 1108919
      },
      "writtenOn": "2021-12-21T19:23:28Z",
      "side": 1,
      "message": "case 3 adds nothing at this point.\ncase 2 should be enough for the pattern.",
      "range": {
        "startLine": 1445,
        "startChar": 11,
        "endLine": 1446,
        "endChar": 89
      },
      "revId": "b75a6667753c7564ad76961fcf68311def5835d2",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "abcaa346_92b4d358",
        "filename": "media/codec2/sfplugin/CCodec.cpp",
        "patchSetId": 1
      },
      "lineNbr": 1446,
      "author": {
        "id": 1903520
      },
      "writtenOn": "2021-12-31T23:55:05Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "337a5663_b2987eb9",
      "range": {
        "startLine": 1445,
        "startChar": 11,
        "endLine": 1446,
        "endChar": 89
      },
      "revId": "b75a6667753c7564ad76961fcf68311def5835d2",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "cb92c376_2d0970d9",
        "filename": "media/codec2/sfplugin/CCodec.cpp",
        "patchSetId": 1
      },
      "lineNbr": 1448,
      "author": {
        "id": 1108919
      },
      "writtenOn": "2021-12-21T19:23:28Z",
      "side": 1,
      "message": "i expect that level2 will be \"lvel 1 + some new stuff\"\nso document here that we are explicitly doing a fall through.",
      "range": {
        "startLine": 1448,
        "startChar": 15,
        "endLine": 1448,
        "endChar": 26
      },
      "revId": "b75a6667753c7564ad76961fcf68311def5835d2",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "0a2ee345_f9e564a0",
        "filename": "media/codec2/sfplugin/CCodec.cpp",
        "patchSetId": 1
      },
      "lineNbr": 1448,
      "author": {
        "id": 1903520
      },
      "writtenOn": "2021-12-31T23:55:05Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "cb92c376_2d0970d9",
      "range": {
        "startLine": 1448,
        "startChar": 15,
        "endLine": 1448,
        "endChar": 26
      },
      "revId": "b75a6667753c7564ad76961fcf68311def5835d2",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4967b153_10e38ec5",
        "filename": "media/codec2/sfplugin/CCodec.cpp",
        "patchSetId": 1
      },
      "lineNbr": 1450,
      "author": {
        "id": 1018606
      },
      "writtenOn": "2021-12-21T19:18:36Z",
      "side": 1,
      "message": "Let\u0027s use CCodecConfig::subscribeToConfigUpdate() (we\u0027ll need to change the method\u0027s visibility to public as well).",
      "revId": "b75a6667753c7564ad76961fcf68311def5835d2",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "be27d28d_b2f9b271",
        "filename": "media/codec2/sfplugin/CCodec.cpp",
        "patchSetId": 1
      },
      "lineNbr": 1450,
      "author": {
        "id": 1903520
      },
      "writtenOn": "2021-12-21T21:03:25Z",
      "side": 1,
      "message": "Sure! Let me figure out how to use that function here.",
      "parentUuid": "4967b153_10e38ec5",
      "revId": "b75a6667753c7564ad76961fcf68311def5835d2",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f2617ccd_c7d6ec02",
        "filename": "media/codec2/sfplugin/CCodec.cpp",
        "patchSetId": 1
      },
      "lineNbr": 1450,
      "author": {
        "id": 1903520
      },
      "writtenOn": "2021-12-31T23:55:05Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "be27d28d_b2f9b271",
      "revId": "b75a6667753c7564ad76961fcf68311def5835d2",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "96135a95_0a78b26a",
        "filename": "media/codec2/sfplugin/CCodec.cpp",
        "patchSetId": 1
      },
      "lineNbr": 1450,
      "author": {
        "id": 1903520
      },
      "writtenOn": "2022-01-01T01:57:02Z",
      "side": 1,
      "message": "I followed your recommendation, but could you help me understand why you recommended using subscribeToConfigUpdate(), which there has been no such practices in the codebase please?",
      "parentUuid": "f2617ccd_c7d6ec02",
      "revId": "b75a6667753c7564ad76961fcf68311def5835d2",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "baeda57e_0dc3e549",
        "filename": "media/codec2/sfplugin/CCodec.cpp",
        "patchSetId": 1
      },
      "lineNbr": 1454,
      "author": {
        "id": 1108919
      },
      "writtenOn": "2021-12-21T19:23:28Z",
      "side": 1,
      "message": "I think you want a case 0 -- for \"turn off the reporting\".",
      "range": {
        "startLine": 1454,
        "startChar": 15,
        "endLine": 1454,
        "endChar": 20
      },
      "revId": "b75a6667753c7564ad76961fcf68311def5835d2",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "61591032_621c6118",
        "filename": "media/codec2/sfplugin/CCodec.cpp",
        "patchSetId": 1
      },
      "lineNbr": 1454,
      "author": {
        "id": 1903520
      },
      "writtenOn": "2021-12-31T23:55:05Z",
      "side": 1,
      "message": "I think level 0 case is equivalent to the case that App client does not subscribe to this feature when encoder is created? With that, I\u0027d recommend that level should not be zero when subscribing, but added LEVEL_NONE just in case we allow App client do that and it is also used for internal initialization.",
      "parentUuid": "baeda57e_0dc3e549",
      "range": {
        "startLine": 1454,
        "startChar": 15,
        "endLine": 1454,
        "endChar": 20
      },
      "revId": "b75a6667753c7564ad76961fcf68311def5835d2",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "bb246616_3263aa2a",
        "filename": "media/codec2/sfplugin/CCodec.cpp",
        "patchSetId": 1
      },
      "lineNbr": 1456,
      "author": {
        "id": 1108919
      },
      "writtenOn": "2021-12-21T19:23:28Z",
      "side": 1,
      "message": "after looking at this switch, I think that perhaps a better expression of what you want to achieve is a pattern like:\n\n   if (we have a level -- any level) {\n       if (level \u003c\u003d 0) {\n           turn it off\n       }\n       if (level \u003e\u003d 1) {\n           add the level 1 things\n       }\n       if (level \u003e\u003d 2) {\n           // we take the level 1 stuff plus\n           l2 features added\n       }\n       if (level \u003e\u003d 3) {\n           // we take the L1 + L2 stuff\n           if L3 meant removing something that was in L2.\n               we can mess with configUpdate to remove/alter that at this point.\n       }\n       if (level \u003e\u003d 4) {\n           ALOGD(\" we only understand to level 3, so that\u0027s all you get\");\n       }\n   }",
      "range": {
        "startLine": 1456,
        "startChar": 6,
        "endLine": 1456,
        "endChar": 9
      },
      "revId": "b75a6667753c7564ad76961fcf68311def5835d2",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "287c4c2e_84361d08",
        "filename": "media/codec2/sfplugin/CCodec.cpp",
        "patchSetId": 1
      },
      "lineNbr": 1456,
      "author": {
        "id": 1903520
      },
      "writtenOn": "2021-12-31T23:55:05Z",
      "side": 1,
      "message": "Because the upper level include all of lower level stats, i.e. incremental stat kinds as level increases, the switch statement well serve that purposes w/o using \u0027break;\u0027 and doing fall through.",
      "parentUuid": "bb246616_3263aa2a",
      "range": {
        "startLine": 1456,
        "startChar": 6,
        "endLine": 1456,
        "endChar": 9
      },
      "revId": "b75a6667753c7564ad76961fcf68311def5835d2",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "21644285_ec94f376",
        "filename": "media/codec2/sfplugin/CCodec.cpp",
        "patchSetId": 1
      },
      "lineNbr": 1458,
      "author": {
        "id": 1108919
      },
      "writtenOn": "2021-12-21T19:23:28Z",
      "side": 1,
      "message": "it\u0027s worth including the encoding stats level in this set of messages.",
      "range": {
        "startLine": 1458,
        "startChar": 15,
        "endLine": 1458,
        "endChar": 28
      },
      "revId": "b75a6667753c7564ad76961fcf68311def5835d2",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2300b2ce_f36898d6",
        "filename": "media/codec2/sfplugin/CCodec.cpp",
        "patchSetId": 1
      },
      "lineNbr": 1458,
      "author": {
        "id": 1903520
      },
      "writtenOn": "2021-12-31T23:55:05Z",
      "side": 1,
      "message": "In fact, I wanted that but I was not sure I can just add the parameter in config-\u003emOutpufFormat, since the para seems all required to be set with meaningful values in the cases in the same file.",
      "parentUuid": "21644285_ec94f376",
      "range": {
        "startLine": 1458,
        "startChar": 15,
        "endLine": 1458,
        "endChar": 28
      },
      "revId": "b75a6667753c7564ad76961fcf68311def5835d2",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "22f01c35_90f4fa12",
        "filename": "media/codec2/sfplugin/CCodec.cpp",
        "patchSetId": 1
      },
      "lineNbr": 1458,
      "author": {
        "id": 1018606
      },
      "writtenOn": "2022-01-07T00:13:49Z",
      "side": 1,
      "message": "You could just log it separately:\n\n  ALOGD(\"encoding statistics level \u003d %d\", encodingStatisticsLevel);",
      "parentUuid": "2300b2ce_f36898d6",
      "range": {
        "startLine": 1458,
        "startChar": 15,
        "endLine": 1458,
        "endChar": 28
      },
      "revId": "b75a6667753c7564ad76961fcf68311def5835d2",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "81f35fc8_ae87b2a2",
        "filename": "media/codec2/sfplugin/CCodec.cpp",
        "patchSetId": 1
      },
      "lineNbr": 1458,
      "author": {
        "id": 1108919
      },
      "writtenOn": "2022-01-07T04:07:48Z",
      "side": 1,
      "message": "The specific thing I was thinking would be to change line 1458 to:\n\nALOGD(\"setup formats, level %d input: %s\", encodingStatisticsLevel,\n       config-\u003emInputFormat-\u003edebugString().c_str());\n\ni prefer that all on a single line, rather than having an extra line as wonsik\u0027s suggestion would yield. i prefer a slightly more complicated single llogcat ine over having multiple logcat lines.",
      "parentUuid": "22f01c35_90f4fa12",
      "range": {
        "startLine": 1458,
        "startChar": 15,
        "endLine": 1458,
        "endChar": 28
      },
      "revId": "b75a6667753c7564ad76961fcf68311def5835d2",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "48c7e28d_a77d8312",
        "filename": "media/codec2/sfplugin/CCodec.cpp",
        "patchSetId": 1
      },
      "lineNbr": 1458,
      "author": {
        "id": 1903520
      },
      "writtenOn": "2022-01-07T07:11:39Z",
      "side": 1,
      "message": "re: Wonsik, Aha, that\u0027s it? Thanks a lot!\nI thought I should do something like:\nALOGD(\"........: %s\", config-\u003emInputFormat-\u003edebugString().c_str());\n\nre: Ray, I see. My response above to Wonsik was written (right after Patch around 5pm) before your last comment here but has not submitted. \nIs there any way for config-\u003emInputFormat-\u003edebugString() to even have encodingStatisticsLevel as well? So that, we don\u0027t add \"encodingStatisticsLevel\"?",
      "parentUuid": "22f01c35_90f4fa12",
      "range": {
        "startLine": 1458,
        "startChar": 15,
        "endLine": 1458,
        "endChar": 28
      },
      "revId": "b75a6667753c7564ad76961fcf68311def5835d2",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "cdb170ed_8e4127e2",
        "filename": "media/codec2/sfplugin/CCodec.cpp",
        "patchSetId": 1
      },
      "lineNbr": 1458,
      "author": {
        "id": 1018606
      },
      "writtenOn": "2022-01-07T22:28:31Z",
      "side": 1,
      "message": "We could add an internal param for the logging in mInputFormat, such as:\n\n  config-\u003emInputFormat-\u003esetInt32(\"android._encoding-statistics-level\", encodingStatisticsLevel);",
      "parentUuid": "48c7e28d_a77d8312",
      "range": {
        "startLine": 1458,
        "startChar": 15,
        "endLine": 1458,
        "endChar": 28
      },
      "revId": "b75a6667753c7564ad76961fcf68311def5835d2",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}