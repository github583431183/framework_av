{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "867e56b1_079490b1",
        "filename": "media/libmediaplayerservice/StagefrightRecorder.cpp",
        "patchSetId": 3
      },
      "lineNbr": 2181,
      "author": {
        "id": 1018606
      },
      "writtenOn": "2023-01-12T18:54:00Z",
      "side": 1,
      "message": "I have a little bit of concern that `setupVideoEncoder` access `this` without lock guards. Assuming the bulk of time is consumed at `MediaCodecSource::Create`, can we limit the scope of the part that is running asynchronously?",
      "revId": "b577390a25b2c886962bfa90fb83313c55bfa46d",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6a127b5f_4b60c9b8",
        "filename": "media/libmediaplayerservice/StagefrightRecorder.cpp",
        "patchSetId": 3
      },
      "lineNbr": 2181,
      "author": {
        "id": 1902438
      },
      "writtenOn": "2023-01-25T04:15:52Z",
      "side": 1,
      "message": "The intention of this change was to parallelize video \u0026 audio encoder setup calls which are independent.\nsetupVideoEncoder is being invoked from other recorder apis like\nsetupRTPRecording\nsetupMPEG2TSRecording\nHence MediaCodecSource::Create alone cannot be ran asynchronously or moved out of setupVideoEncoder api.\nPlease share your thoughts in this case.",
      "parentUuid": "867e56b1_079490b1",
      "revId": "b577390a25b2c886962bfa90fb83313c55bfa46d",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "5a45741f_ac5a388a",
        "filename": "media/libmediaplayerservice/StagefrightRecorder.cpp",
        "patchSetId": 3
      },
      "lineNbr": 2181,
      "author": {
        "id": 1902438
      },
      "writtenOn": "2023-01-30T04:23:19Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "6a127b5f_4b60c9b8",
      "revId": "b577390a25b2c886962bfa90fb83313c55bfa46d",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "176ac710_7b7836cb",
        "filename": "media/libmediaplayerservice/StagefrightRecorder.cpp",
        "patchSetId": 3
      },
      "lineNbr": 2181,
      "author": {
        "id": 1951601
      },
      "writtenOn": "2023-03-16T21:39:34Z",
      "side": 1,
      "message": "Btw, is this parallel scheme applied only for MPEG4/WEBM Recording is it?\nHow about MPEG2TS and RTP?",
      "range": {
        "startLine": 2181,
        "startChar": 20,
        "endLine": 2181,
        "endChar": 31
      },
      "revId": "b577390a25b2c886962bfa90fb83313c55bfa46d",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "04e53675_3d6489de",
        "filename": "media/libmediaplayerservice/StagefrightRecorder.cpp",
        "patchSetId": 3
      },
      "lineNbr": 2181,
      "author": {
        "id": 1902438
      },
      "writtenOn": "2023-03-17T08:01:33Z",
      "side": 1,
      "message": "Yes only for MPEG4/WEBM recording its enabled.This is the flow that is being used for camera recorder",
      "parentUuid": "176ac710_7b7836cb",
      "range": {
        "startLine": 2181,
        "startChar": 20,
        "endLine": 2181,
        "endChar": 31
      },
      "revId": "b577390a25b2c886962bfa90fb83313c55bfa46d",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "cd62f915_219f8069",
        "filename": "media/libmediaplayerservice/StagefrightRecorder.cpp",
        "patchSetId": 3
      },
      "lineNbr": 2198,
      "author": {
        "id": 1951601
      },
      "writtenOn": "2023-03-16T18:04:14Z",
      "side": 1,
      "message": "Do we still do this if setupAudioEncoder has failed in line#2191?",
      "range": {
        "startLine": 2196,
        "startChar": 8,
        "endLine": 2198,
        "endChar": 39
      },
      "revId": "b577390a25b2c886962bfa90fb83313c55bfa46d",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "68da9f3e_7e3cb12a",
        "filename": "media/libmediaplayerservice/StagefrightRecorder.cpp",
        "patchSetId": 3
      },
      "lineNbr": 2198,
      "author": {
        "id": 1902438
      },
      "writtenOn": "2023-03-17T08:01:33Z",
      "side": 1,
      "message": "We are checking and returning error at line 2201.\nRetained the same sequence as it was previously.",
      "parentUuid": "cd62f915_219f8069",
      "range": {
        "startLine": 2196,
        "startChar": 8,
        "endLine": 2198,
        "endChar": 39
      },
      "revId": "b577390a25b2c886962bfa90fb83313c55bfa46d",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}