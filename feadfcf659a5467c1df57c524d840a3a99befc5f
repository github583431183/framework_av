{
  "comments": [
    {
      "key": {
        "uuid": "e8c24325_a58af314",
        "filename": "media/libaudioclient/AudioSystem.cpp",
        "patchSetId": 4
      },
      "lineNbr": 461,
      "author": {
        "id": 1042638
      },
      "writtenOn": "2018-12-18T19:26:16Z",
      "side": 1,
      "message": "extra space before \u0027\u003d\u003d\u0027",
      "range": {
        "startLine": 461,
        "startChar": 11,
        "endLine": 461,
        "endChar": 12
      },
      "revId": "feadfcf659a5467c1df57c524d840a3a99befc5f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5f653526_4055a5d1",
        "filename": "media/libaudioclient/IAudioPolicyService.cpp",
        "patchSetId": 4
      },
      "lineNbr": 953,
      "author": {
        "id": 1042638
      },
      "writtenOn": "2018-12-18T19:26:16Z",
      "side": 1,
      "message": "I think it\u0027s better to make the client part of \u0027systemReady\u0027 to actually return the result of the remote call.",
      "range": {
        "startLine": 953,
        "startChar": 16,
        "endLine": 953,
        "endChar": 43
      },
      "revId": "feadfcf659a5467c1df57c524d840a3a99befc5f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a1c580d0_11810f60",
        "filename": "media/libaudioclient/IAudioPolicyService.cpp",
        "patchSetId": 4
      },
      "lineNbr": 953,
      "author": {
        "id": 1406842
      },
      "writtenOn": "2019-02-11T08:52:03Z",
      "side": 1,
      "message": "I just make AudioPolicyService follow AudioFlinger.\nIn IAudioFlinger::systemReady it never checks the result, should we also return result in AudioFlinger or just modify AudioPolicyService here?",
      "parentUuid": "5f653526_4055a5d1",
      "range": {
        "startLine": 953,
        "startChar": 16,
        "endLine": 953,
        "endChar": 43
      },
      "revId": "feadfcf659a5467c1df57c524d840a3a99befc5f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "328442bf_8cc0cc8b",
        "filename": "media/libaudioclient/IAudioPolicyService.cpp",
        "patchSetId": 4
      },
      "lineNbr": 1604,
      "author": {
        "id": 1042638
      },
      "writtenOn": "2018-12-18T19:26:16Z",
      "side": 1,
      "message": "I\u0027m not sure why to ignore the result from \u0027systemReady\u0027 call here. It might be helpful for the caller to know that they are calling too early.",
      "range": {
        "startLine": 1604,
        "startChar": 12,
        "endLine": 1604,
        "endChar": 26
      },
      "revId": "feadfcf659a5467c1df57c524d840a3a99befc5f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "090a1dbe_6bc39ecf",
        "filename": "media/libaudioclient/IAudioPolicyService.cpp",
        "patchSetId": 4
      },
      "lineNbr": 1604,
      "author": {
        "id": 1406842
      },
      "writtenOn": "2019-02-11T08:52:03Z",
      "side": 1,
      "message": "AudioSystem::systemReady now call both AudioPolicyService and AudioFlinger, I think we just need to make sure System Server can binder call to those two services. Before this commit, actually AudioFlinger will always return NO_ERROR when systemReady.",
      "parentUuid": "328442bf_8cc0cc8b",
      "range": {
        "startLine": 1604,
        "startChar": 12,
        "endLine": 1604,
        "endChar": 26
      },
      "revId": "feadfcf659a5467c1df57c524d840a3a99befc5f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6c81b201_6909a764",
        "filename": "services/audiopolicy/service/AudioPolicyInterfaceImpl.cpp",
        "patchSetId": 4
      },
      "lineNbr": 1042,
      "author": {
        "id": 1003259
      },
      "writtenOn": "2018-12-12T16:56:11Z",
      "side": 1,
      "message": "no need for a systematic log here",
      "range": {
        "startLine": 1042,
        "startChar": 0,
        "endLine": 1042,
        "endChar": 30
      },
      "revId": "feadfcf659a5467c1df57c524d840a3a99befc5f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3a956e35_7ff5af4e",
        "filename": "services/audiopolicy/service/AudioPolicyInterfaceImpl.cpp",
        "patchSetId": 4
      },
      "lineNbr": 1042,
      "author": {
        "id": 1406842
      },
      "writtenOn": "2018-12-14T03:32:30Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "6c81b201_6909a764",
      "range": {
        "startLine": 1042,
        "startChar": 0,
        "endLine": 1042,
        "endChar": 30
      },
      "revId": "feadfcf659a5467c1df57c524d840a3a99befc5f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "15e7f819_efa53353",
        "filename": "services/audiopolicy/service/AudioPolicyInterfaceImpl.cpp",
        "patchSetId": 4
      },
      "lineNbr": 1043,
      "author": {
        "id": 1042638
      },
      "writtenOn": "2018-12-12T17:22:57Z",
      "side": 1,
      "message": "I think we can leverage already existing variable mObserverRegistered in AudioPolicyService::UidPolicy. We just need AudioPolicyService::UidPolicy::registerSelf to check it (under lock) to avoid calling registerUidObserver twice. This is what CameraService::UidPolicy::registerSelf does, see https://android.googlesource.com/platform/frameworks/av/+/master/services/camera/libcameraservice/CameraService.cpp#2388",
      "range": {
        "startLine": 1043,
        "startChar": 8,
        "endLine": 1043,
        "endChar": 20
      },
      "revId": "feadfcf659a5467c1df57c524d840a3a99befc5f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1bc0727a_af31978a",
        "filename": "services/audiopolicy/service/AudioPolicyInterfaceImpl.cpp",
        "patchSetId": 4
      },
      "lineNbr": 1043,
      "author": {
        "id": 1406842
      },
      "writtenOn": "2018-12-14T03:32:30Z",
      "side": 1,
      "message": "We add lock at the beginning in AudioPolicyService::UidPolicy::registerSelf() and check mObserverRegistered because AudioPolicyService::systemReady and  AudioPolicyService::UidPolicy::isUidActive  may have synchronized problem if audio sever crash and restart while an audio record already existed. \nAlso we keep mSystemReady in case some days later we need to do more work in systemReady and avoid calling systemReady twice.",
      "parentUuid": "15e7f819_efa53353",
      "range": {
        "startLine": 1043,
        "startChar": 8,
        "endLine": 1043,
        "endChar": 20
      },
      "revId": "feadfcf659a5467c1df57c524d840a3a99befc5f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e4a8bfff_8a9ff365",
        "filename": "services/audiopolicy/service/AudioPolicyInterfaceImpl.cpp",
        "patchSetId": 4
      },
      "lineNbr": 1043,
      "author": {
        "id": 1042638
      },
      "writtenOn": "2018-12-14T17:32:59Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "1bc0727a_af31978a",
      "range": {
        "startLine": 1043,
        "startChar": 8,
        "endLine": 1043,
        "endChar": 20
      },
      "revId": "feadfcf659a5467c1df57c524d840a3a99befc5f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "efbd8938_bb6518b4",
        "filename": "services/audiopolicy/service/AudioPolicyService.cpp",
        "patchSetId": 4
      },
      "lineNbr": 91,
      "author": {
        "id": 1042638
      },
      "writtenOn": "2018-12-14T17:32:59Z",
      "side": 1,
      "message": "Eric, Svetoslav, I\u0027m curious why mUidPolicy gets initialized outside of mLock here, unlike other protected variables. Should this be fixed?",
      "range": {
        "startLine": 91,
        "startChar": 4,
        "endLine": 91,
        "endChar": 37
      },
      "revId": "feadfcf659a5467c1df57c524d840a3a99befc5f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e5be53c9_68a1d696",
        "filename": "services/audiopolicy/service/AudioPolicyService.cpp",
        "patchSetId": 4
      },
      "lineNbr": 91,
      "author": {
        "id": 1003259
      },
      "writtenOn": "2018-12-18T18:15:56Z",
      "side": 1,
      "message": "I guess it was an oversight given this is executed in onFirstref the need for the lock is not super important but this could be done under the lock for consistency.",
      "parentUuid": "efbd8938_bb6518b4",
      "range": {
        "startLine": 91,
        "startChar": 4,
        "endLine": 91,
        "endChar": 37
      },
      "revId": "feadfcf659a5467c1df57c524d840a3a99befc5f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "13656b66_87f14bcb",
        "filename": "services/audiopolicy/service/AudioPolicyService.cpp",
        "patchSetId": 4
      },
      "lineNbr": 91,
      "author": {
        "id": 1042638
      },
      "writtenOn": "2018-12-18T19:26:16Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "e5be53c9_68a1d696",
      "range": {
        "startLine": 91,
        "startChar": 4,
        "endLine": 91,
        "endChar": 37
      },
      "revId": "feadfcf659a5467c1df57c524d840a3a99befc5f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}