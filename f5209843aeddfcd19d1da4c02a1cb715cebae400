{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "e9b939ac_ff211a70",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1956242
      },
      "writtenOn": "2023-08-22T21:51:51Z",
      "side": 1,
      "message": "lgtm, thanks Jaideep for the CL!",
      "revId": "f5209843aeddfcd19d1da4c02a1cb715cebae400",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "eb8ede84_4a40b28b",
        "filename": "media/libaudiohal/impl/EffectConversionHelperAidl.cpp",
        "patchSetId": 2
      },
      "lineNbr": 370,
      "author": {
        "id": 1042638
      },
      "writtenOn": "2023-08-22T22:21:07Z",
      "side": 1,
      "message": "To me, the message looks somewhat misleading. What has happened is that instead of `volumeToSet`, the effect has applied `appliedVolume`. The message looks as if `volumeToSet` was the previous volume, which is not true. Perhaps, a more correct message would be \"requested to set: %s, actually applied: %s\".",
      "range": {
        "startLine": 370,
        "startChar": 19,
        "endLine": 370,
        "endChar": 49
      },
      "revId": "f5209843aeddfcd19d1da4c02a1cb715cebae400",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ed0b2020_b6325cae",
        "filename": "media/libaudiohal/impl/EffectConversionHelperAidl.cpp",
        "patchSetId": 2
      },
      "lineNbr": 370,
      "author": {
        "id": 1630064
      },
      "writtenOn": "2023-08-23T03:26:34Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "eb8ede84_4a40b28b",
      "range": {
        "startLine": 370,
        "startChar": 19,
        "endLine": 370,
        "endChar": 49
      },
      "revId": "f5209843aeddfcd19d1da4c02a1cb715cebae400",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1150725d_008d6a43",
        "filename": "media/libaudiohal/impl/EffectConversionHelperAidl.cpp",
        "patchSetId": 2
      },
      "lineNbr": 375,
      "author": {
        "id": 1042638
      },
      "writtenOn": "2023-08-22T22:21:07Z",
      "side": 1,
      "message": "Why we populate the reply only if the actual volume is different from the value we wanted to set? Shouldn\u0027t we return the actual volume in any case when the operation did not fail?",
      "range": {
        "startLine": 375,
        "startChar": 12,
        "endLine": 375,
        "endChar": 57
      },
      "revId": "f5209843aeddfcd19d1da4c02a1cb715cebae400",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "362a2e22_a6cdc050",
        "filename": "media/libaudiohal/impl/EffectConversionHelperAidl.cpp",
        "patchSetId": 2
      },
      "lineNbr": 375,
      "author": {
        "id": 1630064
      },
      "writtenOn": "2023-08-23T03:26:34Z",
      "side": 1,
      "message": "This is to keep same behavior as that of HIDL.\nIn HIDL, only a few effects those changed the volume, acutally filled the reply. \nSo, for effects not changing the volume, reply was set.\n\nTo match that, we are setting reply only if volume is changed by effect.",
      "parentUuid": "1150725d_008d6a43",
      "range": {
        "startLine": 375,
        "startChar": 12,
        "endLine": 375,
        "endChar": 57
      },
      "revId": "f5209843aeddfcd19d1da4c02a1cb715cebae400",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4ec1aa19_6e314ef1",
        "filename": "media/libaudiohal/impl/EffectConversionHelperAidl.cpp",
        "patchSetId": 2
      },
      "lineNbr": 375,
      "author": {
        "id": 1042638
      },
      "writtenOn": "2023-08-23T16:22:52Z",
      "side": 1,
      "message": "I think we need to agree on what does \"changing the volume\" means. Suppose that the effect had the volume at `0`, and in `requestedVolume` we pass `1`. The effect ignores the request, and thus `appliedVolume` is `0`. Did the volume change? According to `requrestedVolume !\u003d appliedVolume` logic, it did, according to the effect, it didn\u0027t.",
      "parentUuid": "362a2e22_a6cdc050",
      "range": {
        "startLine": 375,
        "startChar": 12,
        "endLine": 375,
        "endChar": 57
      },
      "revId": "f5209843aeddfcd19d1da4c02a1cb715cebae400",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}