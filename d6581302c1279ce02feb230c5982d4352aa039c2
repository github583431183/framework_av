{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "0c70fbcd_68d9db6a",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 6
      },
      "lineNbr": 0,
      "author": {
        "id": 1003259
      },
      "writtenOn": "2023-11-03T12:56:08Z",
      "side": 1,
      "message": "Mikhail, \n\nPlease review the last comment",
      "revId": "d6581302c1279ce02feb230c5982d4352aa039c2",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d2525ff1_2be89bf3",
        "filename": "media/libaudiofoundation/include/media/AudioProfile.h",
        "patchSetId": 6
      },
      "lineNbr": 132,
      "author": {
        "id": 1003259
      },
      "writtenOn": "2023-11-03T09:01:53Z",
      "side": 1,
      "message": "this method is still unused: why is it added by this CL?",
      "range": {
        "startLine": 132,
        "startChar": 17,
        "endLine": 132,
        "endChar": 37
      },
      "revId": "d6581302c1279ce02feb230c5982d4352aa039c2",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "09e0075e_fb956b43",
        "filename": "media/libaudiofoundation/include/media/AudioProfile.h",
        "patchSetId": 6
      },
      "lineNbr": 132,
      "author": {
        "id": 1478901
      },
      "writtenOn": "2023-11-03T09:31:28Z",
      "side": 1,
      "message": "This is the original function but rename it to not confusing the usage. If it is confirmed to deprecate, then I can remove it.",
      "parentUuid": "d2525ff1_2be89bf3",
      "range": {
        "startLine": 132,
        "startChar": 17,
        "endLine": 132,
        "endChar": 37
      },
      "revId": "d6581302c1279ce02feb230c5982d4352aa039c2",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "11ae3116_218ae23d",
        "filename": "media/libaudiofoundation/include/media/AudioProfile.h",
        "patchSetId": 6
      },
      "lineNbr": 132,
      "author": {
        "id": 1003259
      },
      "writtenOn": "2023-11-03T09:46:41Z",
      "side": 1,
      "message": "Current implementation of AudioPort::clearAudioProfiles  calls AudioProfileVector ðŸ˜Š\nclearProfiles();\nhttps://cs.android.com/android/platform/superproject/main/+/main:frameworks/av/media/libaudiofoundation/include/media/AudioPort.h;l\u003d63?q\u003dclearAudioProfiles\n\nWhen this method is called by AudioPolicyManager, the intent is to clear the dynamic profiles, not the entire profiles:\n\n\nframeworks/av/services/audiopolicy/managerdefault/AudioPolicyManager.cpp (4 results)\n6291:\ncheckOutputsForDevice(const device, state, outputs)\n{... device-\u003eclearAudioProfiles(); ...}\n6418:\ncheckOutputsForDevice(const device, state, outputs)\n{... profile-\u003eclearAudioProfiles(); ...}\n6450:\ncheckInputsForDevice(const device, state)\n{... device-\u003eclearAudioProfiles(); ...}\n6562:\ncheckInputsForDevice(const device, state)\n{... profile-\u003eclearAudioProfiles(); ...}\n\n If you change the method name wihtout changing the call site, you change the behavior. If you want to keep this renaming for clarity, thne you have to change AudioPort::clearAudioProfiles() and call clearDynamicProfiles() there",
      "parentUuid": "09e0075e_fb956b43",
      "range": {
        "startLine": 132,
        "startChar": 17,
        "endLine": 132,
        "endChar": 37
      },
      "revId": "d6581302c1279ce02feb230c5982d4352aa039c2",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c7cc4ed6_8abd2551",
        "filename": "media/libaudiofoundation/include/media/AudioProfile.h",
        "patchSetId": 6
      },
      "lineNbr": 132,
      "author": {
        "id": 1478901
      },
      "writtenOn": "2023-11-03T11:13:58Z",
      "side": 1,
      "message": "Yes, I know they are different behavior. I think the real problem is the design of dynamic format is changed and I\u0027m not sure what\u0027s Google\u0027s plan.\nSince the flow is changed, the original flow is treating dynamic format in AudioProfile when xml is described format with \u0027AUDIO_FORMAT_DEFAULT\u0027 and the new flow(with set_device_connected_state_v7() and get_audio_port_v7() supported by AudioHAL) is not. Then the AudioProfile::isDynamicFormat() which is checked by AudioProfileVector::clearProfiles() is not suite to the new flow.\nhttps://cs.android.com/android/platform/superproject/main/+/main:frameworks/av/services/audiopolicy/common/managerdefinitions/src/Serializer.cpp;drc\u003deb747762bdd1889e4d65eae868f11c8cde3a8d7c;l\u003d439\n\nFor my opinion, since the new flow is always clear and get new AudioProfile when digital device is connecting. It\u0027s unnecessary to \"just clear AudioProfile with dynamic format\" but \"clear all AudioProfile\" will be more reasonable.\nhttps://cs.android.com/android/platform/superproject/main/+/main:frameworks/av/services/audiopolicy/managerdefault/AudioPolicyManager.cpp;drc\u003dfd9ffd1d15d5d53e19a4a500cf2fc5892a10d60f;l\u003d5904",
      "parentUuid": "11ae3116_218ae23d",
      "range": {
        "startLine": 132,
        "startChar": 17,
        "endLine": 132,
        "endChar": 37
      },
      "revId": "d6581302c1279ce02feb230c5982d4352aa039c2",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ce5c9528_918111fb",
        "filename": "media/libaudiofoundation/include/media/AudioProfile.h",
        "patchSetId": 6
      },
      "lineNbr": 132,
      "author": {
        "id": 1003259
      },
      "writtenOn": "2023-11-03T12:59:24Z",
      "side": 1,
      "message": "We need to consider carefully what happens for profiles with partly dynamic audio profiles",
      "parentUuid": "c7cc4ed6_8abd2551",
      "range": {
        "startLine": 132,
        "startChar": 17,
        "endLine": 132,
        "endChar": 37
      },
      "revId": "d6581302c1279ce02feb230c5982d4352aa039c2",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "50a57ce3_a0c019c7",
        "filename": "media/libaudiofoundation/include/media/AudioProfile.h",
        "patchSetId": 6
      },
      "lineNbr": 132,
      "author": {
        "id": 1042638
      },
      "writtenOn": "2023-11-03T17:43:04Z",
      "side": 1,
      "message": "Kuowei, regarding this:\n\n\u003e the original flow is treating dynamic format in AudioProfile when xml is described format with \u0027AUDIO_FORMAT_DEFAULT\u0027\n\nDo you have examples of XML configurations which do that? I quickly checked released Google and Pixel devices, they do not seem to use this approach. Usually \"dynamic\" mix ports are left with empty profiles. Then the XML deserializer would add a dynamic profile if it finds profiles to be empty:\n\nhttps://cs.android.com/android/platform/superproject/main/+/main:frameworks/av/services/audiopolicy/common/managerdefinitions/src/Serializer.cpp;l\u003d474;drc\u003deaf60784f41774d1f883547aa9e442f4ca37cca5\n\nSimilarly, when the profile is not fully specified in the XML, for example, the `format` attribute is left empty or contains a value that can\u0027t be parsed, then the XML deserializer was just using `AUDIO_FORMAT_DEFAULT` as a default value: https://cs.android.com/android/platform/superproject/main/+/main:frameworks/av/services/audiopolicy/common/managerdefinitions/src/Serializer.cpp;l\u003d435;drc\u003defc6cf71445a9cee74a049e41a7970f87704c282\n\nThis conventions still remains. If we consider `get_audio_port_v7` API, it is intended for reporting profiles supported by a connected device. In this case, the profiles can\u0027t actually be dynamic, since \"dynamic\" is a placeholder which is kept until the port is populated with actual profiles via that API. I guess, this is the moment when we actually need to remove the dynamic placeholder from profiles.\n\nNow, Eric is talking about the case when a mix port contains both a dynamic placeholder and some static profiles. I think, this can occur when DSP is present in the HAL module. In this case, a mix port can be routed both to built-in devices and external devices. When an external device is connected, the \"dynamic\" part of the mix port needs to be replaced with actual profiles of the connected device.\n\nI think, to make this change with more confidence, you can try building a test case within https://cs.android.com/android/platform/superproject/main/+/main:frameworks/av/services/audiopolicy/tests/audiopolicymanager_tests.cpp which would cover different cases of connecting external devices.\n\nYou can split out the fix for the channel masks into a separate CL, that part is well understood and doesn\u0027t require extra testing.",
      "parentUuid": "ce5c9528_918111fb",
      "range": {
        "startLine": 132,
        "startChar": 17,
        "endLine": 132,
        "endChar": 37
      },
      "revId": "d6581302c1279ce02feb230c5982d4352aa039c2",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ace3246e_952a65e4",
        "filename": "media/libaudiofoundation/include/media/AudioProfile.h",
        "patchSetId": 6
      },
      "lineNbr": 132,
      "author": {
        "id": 1478901
      },
      "writtenOn": "2023-11-06T12:06:54Z",
      "side": 1,
      "message": "I didn\u0027t notice there is default format, so I want to correct the root cause, which is, the if statement isDynamicFormat() / hasValidFormat() in AudioProfileVector::clearProfiles() will never be true when the format is AUDIO_FORMAT_DEFAULT.\nhttps://cs.android.com/android/platform/superproject/main/+/main:frameworks/av/media/libaudiofoundation/AudioProfile.cpp;drc\u003d60c3258770b1ce3ce5bbdcff3c4a87c8f996b92f;l\u003d250\n\nThen, I want to confirm following questions and will update CL later.\n1. Is it better to remove hasValidFormat() check in AudioProfileVector::clearProfiles()?\n2. Since this issue need to fix those 2 symptoms, do I still need to separate 2 CLs for them?\n3. Is the new testcase necessary for this CL?",
      "parentUuid": "50a57ce3_a0c019c7",
      "range": {
        "startLine": 132,
        "startChar": 17,
        "endLine": 132,
        "endChar": 37
      },
      "revId": "d6581302c1279ce02feb230c5982d4352aa039c2",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "49c59b9b_f2b5bfa6",
        "filename": "media/libaudiofoundation/include/media/AudioProfile.h",
        "patchSetId": 6
      },
      "lineNbr": 132,
      "author": {
        "id": 1478901
      },
      "writtenOn": "2023-11-06T13:55:10Z",
      "side": 1,
      "message": "To clarify more specifically.\nIf the format is AUDIO_FORMAT_DEFAULT, then it\u0027s dynamic format and has no valid format.\nIf the format is imported from getAudioPort(), it\u0027s not dynamic format and has valid format.\nhttps://cs.android.com/android/platform/superproject/main/+/main:frameworks/av/services/audiopolicy/managerdefault/AudioPolicyManager.cpp;l\u003d6301;drc\u003d60c3258770b1ce3ce5bbdcff3c4a87c8f996b92f;bpv\u003d1;bpt\u003d1",
      "parentUuid": "ace3246e_952a65e4",
      "range": {
        "startLine": 132,
        "startChar": 17,
        "endLine": 132,
        "endChar": 37
      },
      "revId": "d6581302c1279ce02feb230c5982d4352aa039c2",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}