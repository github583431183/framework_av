{
  "comments": [
    {
      "key": {
        "uuid": "bd3b0bc1_cea08e15",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1133568
      },
      "writtenOn": "2020-08-24T04:21:10Z",
      "side": 1,
      "message": "The original issue is mitigated by Dolby as we are no longer using NON_BLOCKING flag for offloaded outputs.",
      "revId": "67b7caa1b0cafd9a4de48da005591990157ae22c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d5ccea1a_9d893290",
        "filename": "services/audioflinger/Threads.cpp",
        "patchSetId": 1
      },
      "lineNbr": 5661,
      "author": {
        "id": 1040213
      },
      "writtenOn": "2018-01-18T02:30:16Z",
      "side": 1,
      "message": "Isn\u0027t it better to check that mActiveTracks.size() \u003d\u003d 0 here instead of !mFlushPending?  Otherwise you could be flushing when there is an active track playing.",
      "range": {
        "startLine": 5661,
        "startChar": 7,
        "endLine": 5661,
        "endChar": 23
      },
      "revId": "67b7caa1b0cafd9a4de48da005591990157ae22c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9d19749a_0e733991",
        "filename": "services/audioflinger/Threads.cpp",
        "patchSetId": 1
      },
      "lineNbr": 5661,
      "author": {
        "id": 1040213
      },
      "writtenOn": "2018-01-18T02:36:23Z",
      "side": 1,
      "message": "OTOH, if there is an active track, perhaps flushAck() could be called on the stopped track but mFlushPending would not be set true.  Eric would know better on this behavior.",
      "parentUuid": "d5ccea1a_9d893290",
      "range": {
        "startLine": 5661,
        "startChar": 7,
        "endLine": 5661,
        "endChar": 23
      },
      "revId": "67b7caa1b0cafd9a4de48da005591990157ae22c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "987eb5b6_9f8c75a4",
        "filename": "services/audioflinger/Threads.cpp",
        "patchSetId": 1
      },
      "lineNbr": 5661,
      "author": {
        "id": 1133568
      },
      "writtenOn": "2018-01-18T03:25:42Z",
      "side": 1,
      "message": "The intent of this patch is to duplicate AudioFlinger::DirectOutputThread::prepareTracks_l() functionality (see line 5058). We would be interested to know if this functionality was intentionally omitted from the OffloadThread::prepareTracks_l() implementation.",
      "parentUuid": "9d19749a_0e733991",
      "range": {
        "startLine": 5661,
        "startChar": 7,
        "endLine": 5661,
        "endChar": 23
      },
      "revId": "67b7caa1b0cafd9a4de48da005591990157ae22c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f2ab87dc_deef957b",
        "filename": "services/audioflinger/Threads.cpp",
        "patchSetId": 1
      },
      "lineNbr": 5661,
      "author": {
        "id": 1040213
      },
      "writtenOn": "2018-01-18T03:43:34Z",
      "side": 1,
      "message": "Eric originally wrote that DirectOutputThread code in (internal) ag/603919, perhaps he might be able to comment more.  I think it is important to have consistent behavior for offload \u0026 direct tracks.",
      "parentUuid": "987eb5b6_9f8c75a4",
      "range": {
        "startLine": 5661,
        "startChar": 7,
        "endLine": 5661,
        "endChar": 23
      },
      "revId": "67b7caa1b0cafd9a4de48da005591990157ae22c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "804e08ce_0534382b",
        "filename": "services/audioflinger/Threads.cpp",
        "patchSetId": 1
      },
      "lineNbr": 5661,
      "author": {
        "id": 1003259
      },
      "writtenOn": "2018-01-18T16:57:59Z",
      "side": 1,
      "message": "there may be some implications when transitioning from one track to the next. For offload this sequence can be tricky and we don\u0027t want the terminated track to cause a flush and discard all data already written to the HAL by the starting track.\nThis is less of a problem on direct output where we buffer less data.\n\nYou should run git blame and see which problem was fixed by this behavior on direct output and see if this applies to offloaded output.",
      "parentUuid": "f2ab87dc_deef957b",
      "range": {
        "startLine": 5661,
        "startChar": 7,
        "endLine": 5661,
        "endChar": 23
      },
      "revId": "67b7caa1b0cafd9a4de48da005591990157ae22c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1ef3c83d_0fa0f252",
        "filename": "services/audioflinger/Threads.cpp",
        "patchSetId": 1
      },
      "lineNbr": 5661,
      "author": {
        "id": 1040213
      },
      "writtenOn": "2018-01-18T18:50:42Z",
      "side": 1,
      "message": "Maybe replace the if () { ... } block with \n\n    for (const auto \u0026track : mTracks) {\n        if (mActiveTracks.indexOf(track) \u003c 0 \u0026\u0026 track-\u003eisFlushPending()) {\n            // for non-active tracks acknowledge to clear buffer\n            track-\u003eflushAck();\n\n            // only issue hw flush if there are no active tracks\n            // to prevent dropping data during consecutive/gapless playback.\n            if (count \u003d\u003d 0) mFlushPending \u003d true;\n        }\n    }",
      "parentUuid": "804e08ce_0534382b",
      "range": {
        "startLine": 5661,
        "startChar": 7,
        "endLine": 5661,
        "endChar": 23
      },
      "revId": "67b7caa1b0cafd9a4de48da005591990157ae22c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    }
  ]
}