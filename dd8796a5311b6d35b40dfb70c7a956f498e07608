{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "56adb95e_f9384792",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 7
      },
      "lineNbr": 0,
      "author": {
        "id": 1021605
      },
      "writtenOn": "2022-05-20T21:42:54Z",
      "side": 1,
      "message": "Thanks! It looks very clean now.",
      "revId": "dd8796a5311b6d35b40dfb70c7a956f498e07608",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0f06fd75_6ee9eca4",
        "filename": "media/codec2/hidl/1.0/utils/types.cpp",
        "patchSetId": 7
      },
      "lineNbr": 767,
      "author": {
        "id": 1021605
      },
      "writtenOn": "2022-05-20T21:49:58Z",
      "side": 1,
      "message": "can you please add an\n\n else if (!s.ready()) {\n    // TODO: we should wait for unmarshallable fences but this may not be the best \n place for it. For now all fences used here are marshallable.\n }\n\n?",
      "range": {
        "startLine": 767,
        "startChar": 0,
        "endLine": 767,
        "endChar": 4
      },
      "revId": "dd8796a5311b6d35b40dfb70c7a956f498e07608",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3885ba7b_9ff11c3d",
        "filename": "media/codec2/vndk/C2Fence.cpp",
        "patchSetId": 7
      },
      "lineNbr": 283,
      "author": {
        "id": 1021605
      },
      "writtenOn": "2022-05-20T21:42:54Z",
      "side": 1,
      "message": "nit: we don\u0027t use auto in C2 except for iterator types.",
      "range": {
        "startLine": 283,
        "startChar": 4,
        "endLine": 283,
        "endChar": 8
      },
      "revId": "dd8796a5311b6d35b40dfb70c7a956f498e07608",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9667b25c_b54c42b0",
        "filename": "media/codec2/vndk/C2Fence.cpp",
        "patchSetId": 7
      },
      "lineNbr": 290,
      "author": {
        "id": 1021605
      },
      "writtenOn": "2022-05-20T21:42:54Z",
      "side": 1,
      "message": "this may be excessive. Someone could send an invalid native handle to the codec process and this would kill that codec process resulting in a local denial of service.\n\nRecommend logging with ALOGW and returning a null fence.",
      "range": {
        "startLine": 290,
        "startChar": 12,
        "endLine": 290,
        "endChar": 23
      },
      "revId": "dd8796a5311b6d35b40dfb70c7a956f498e07608",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}