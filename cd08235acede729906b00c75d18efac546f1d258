{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "e5560e7e_46a4c0f1",
        "filename": "media/ndk/tests/AImageReaderWindowHandleTest.cpp",
        "patchSetId": 2
      },
      "lineNbr": 139,
      "author": {
        "id": 1010050
      },
      "writtenOn": "2024-01-08T20:26:05Z",
      "side": 1,
      "message": "per the NDK reference docs, it doesn\u0027t mention vendor API level, just API level - is the doc wrong here?",
      "range": {
        "startLine": 139,
        "startChar": 50,
        "endLine": 139,
        "endChar": 69
      },
      "revId": "cd08235acede729906b00c75d18efac546f1d258",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d5421a7f_13e32ebf",
        "filename": "media/ndk/tests/AImageReaderWindowHandleTest.cpp",
        "patchSetId": 2
      },
      "lineNbr": 139,
      "author": {
        "id": 1644679
      },
      "writtenOn": "2024-01-08T20:30:48Z",
      "side": 1,
      "message": "Yes, HAL requirements are per vendor API level, not SDK API level.",
      "parentUuid": "e5560e7e_46a4c0f1",
      "range": {
        "startLine": 139,
        "startChar": 50,
        "endLine": 139,
        "endChar": 69
      },
      "revId": "cd08235acede729906b00c75d18efac546f1d258",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5681a239_c97238ed",
        "filename": "media/ndk/tests/AImageReaderWindowHandleTest.cpp",
        "patchSetId": 2
      },
      "lineNbr": 139,
      "author": {
        "id": 1644679
      },
      "writtenOn": "2024-01-08T20:37:12Z",
      "side": 1,
      "message": "aosp/2901071",
      "parentUuid": "d5421a7f_13e32ebf",
      "range": {
        "startLine": 139,
        "startChar": 50,
        "endLine": 139,
        "endChar": 69
      },
      "revId": "cd08235acede729906b00c75d18efac546f1d258",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6bce6ec5_ab85f7d3",
        "filename": "media/ndk/tests/AImageReaderWindowHandleTest.cpp",
        "patchSetId": 2
      },
      "lineNbr": 139,
      "author": {
        "id": 1010050
      },
      "writtenOn": "2024-01-08T20:52:02Z",
      "side": 1,
      "message": "To clarify, this method (getWindowNativeHandle) is only in the VNDK, not the NDK?\n\nIn that case, it\u0027s fine to have this based on HAL version; it wouldn\u0027t really be OK for the NDK proper, as far as I understand it.",
      "parentUuid": "5681a239_c97238ed",
      "range": {
        "startLine": 139,
        "startChar": 50,
        "endLine": 139,
        "endChar": 69
      },
      "revId": "cd08235acede729906b00c75d18efac546f1d258",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "11020689_67090ad6",
        "filename": "media/ndk/tests/AImageReaderWindowHandleTest.cpp",
        "patchSetId": 2
      },
      "lineNbr": 139,
      "author": {
        "id": 1644679
      },
      "writtenOn": "2024-01-08T21:02:54Z",
      "side": 1,
      "message": "It\u0027s in the `llndk`: https://source.corp.google.com/h/googleplex-android/platform/superproject/main/+/main:frameworks/av/media/ndk/libmediandk.map.txt;drc\u003d16e210e8824d6d4d41da4998d1122d414a4c793d;l\u003d7\n\nIIUC, when there is no tag after the symbol in the map files, it\u0027s in the ndk AND llndk. If the `llndk` tag is set for a symbol then it\u0027s just in the `llndk`. This is how we can get away with wrapping AImageReader_getWindowNativeHandle in the `ifdef __ANDROID_VNDK__`.\n\nThe vendors get access to those symbols when they target the right vendor API level (those levels used to have the same numbers before trunk stable).",
      "parentUuid": "6bce6ec5_ab85f7d3",
      "range": {
        "startLine": 139,
        "startChar": 50,
        "endLine": 139,
        "endChar": 69
      },
      "revId": "cd08235acede729906b00c75d18efac546f1d258",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}