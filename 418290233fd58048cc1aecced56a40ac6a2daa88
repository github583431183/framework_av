{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "e96b4766_c48d55df",
        "filename": "media/module/extractors/mkv/MatroskaExtractor.cpp",
        "patchSetId": 1
      },
      "lineNbr": 2281,
      "author": {
        "id": 1643005
      },
      "writtenOn": "2024-04-03T09:23:57Z",
      "side": 0,
      "message": "This method is aiming to pick a thumbnail that \u0027represents\u0027 the media (as [documented on `MediaMetadataRetriever.getFrameAtTime`](https://developer.android.com/reference/android/media/MediaMetadataRetriever#getFrameAtTime%28%29)). In many cases, naively selecting the first keyframe will result in a black or mostly empty frame (e.g. during opening credits or similar). This `20` threshold, combined with the `max(size)` logic below, is here as a heuristic to ensure we pick the largest keyframe (as a proxy for \u0027most interesting\u0027) from the first 20.\n\nYou can see the same logic is [implemented for MP4 files too](https://cs.android.com/android/platform/superproject/main/+/main:frameworks/av/media/module/extractors/mp4/SampleTable.cpp;l\u003d911-937;drc\u003d2e87c835abea90b0cf61b42dc9aa8a882f2ef5aa).\n\nThe change proposed here would remove this heuristic and always select the first keyframe, which risks a reduction in quality of the result - it\u0027s very likely that more videos will be thumbnail\u0027d with ambiguous/unrepresentative thumbnails.\n\nAs such, i\u0027m afraid we\u0027re not going to accept this change in its current form.",
      "range": {
        "startLine": 2281,
        "startChar": 0,
        "endLine": 2281,
        "endChar": 39
      },
      "revId": "418290233fd58048cc1aecced56a40ac6a2daa88",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "76ef5aa3_8bcb962a",
        "filename": "media/module/extractors/mkv/MatroskaExtractor.cpp",
        "patchSetId": 1
      },
      "lineNbr": 2281,
      "author": {
        "id": 1955441
      },
      "writtenOn": "2024-04-03T09:42:21Z",
      "side": 0,
      "message": "I see what you mean, but as you can see in the log, this method takes a long time(https://cs.android.com/android/platform/superproject/main/+/main:frameworks/av/media/module/extractors/mkv/MatroskaExtractor.cpp;drc\u003d13412bb94816e57e3a2de1018c65192f5b1a7261;l\u003d341), how can we solve the performance problem?",
      "parentUuid": "e96b4766_c48d55df",
      "range": {
        "startLine": 2281,
        "startChar": 0,
        "endLine": 2281,
        "endChar": 39
      },
      "revId": "418290233fd58048cc1aecced56a40ac6a2daa88",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7137704a_dc1580e7",
        "filename": "media/module/extractors/mkv/MatroskaExtractor.cpp",
        "patchSetId": 1
      },
      "lineNbr": 2281,
      "author": {
        "id": 1643005
      },
      "writtenOn": "2024-04-03T10:40:19Z",
      "side": 0,
      "message": "Have you dug in deeper to understand why that method takes too long? Do you see the same performance issues with MP4 files of a similar size? If not, it suggests that maybe the MP4 implementation is able to read the keyframe sizes while reading less data than this Matroska implementation.\n\nYou mention that the performance is slower on larger files. This surprises me, since in all cases we only need to read the first 20 GoPs - so why would a larger file be slower (assuming both files have \u003e20 keyframes)?\n\nHow much of a performance improvement do you see with this change? You\u0027ve mentioned you observe 6500ms with a 200MB video before this change. How long does the method take after this change?",
      "parentUuid": "76ef5aa3_8bcb962a",
      "range": {
        "startLine": 2281,
        "startChar": 0,
        "endLine": 2281,
        "endChar": 39
      },
      "revId": "418290233fd58048cc1aecced56a40ac6a2daa88",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "5b91c59b_41ea0c62",
        "filename": "media/module/extractors/mkv/MatroskaExtractor.cpp",
        "patchSetId": 1
      },
      "lineNbr": 2281,
      "author": {
        "id": 1955441
      },
      "writtenOn": "2024-04-07T07:51:04Z",
      "side": 0,
      "message": "1.I debug further and find that Matroska takes more time to find the first 20 key frames than MP4, because now the logic is to continue to advance, until the first 20 key frames are traversed, which takes about 1000-2000 iterations and takes 2-4s(findThumbnails()).\n\n2.This is because this file(phfx_4KHD_VP9TestFootage-NO-AUDIO.webm) is special, it has only one key frame, so the whole file needs to be traversed until EOS, so it takes longer.\n\n3.getFrameAtTime() cost 364ms, findThumbnails() cost 2ms with this change",
      "parentUuid": "7137704a_dc1580e7",
      "range": {
        "startLine": 2281,
        "startChar": 0,
        "endLine": 2281,
        "endChar": 39
      },
      "revId": "418290233fd58048cc1aecced56a40ac6a2daa88",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}