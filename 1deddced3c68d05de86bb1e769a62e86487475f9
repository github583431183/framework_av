{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "af619b98_58a288f8",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1559553
      },
      "writtenOn": "2024-05-21T16:01:48Z",
      "side": 1,
      "message": "I agree with Ray about the concatenation. Not knowing the mediametrics code well, it\u0027s pretty mysterious to me what\u0027s going on.\n\nI like the refactor and think it makes the fuzzer a lot clearer.",
      "revId": "1deddced3c68d05de86bb1e769a62e86487475f9",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "81fd7738_74bc7dbf",
        "filename": "services/mediametrics/fuzzer/mediametrics_service_fuzzer.cpp",
        "patchSetId": 1
      },
      "lineNbr": 33,
      "author": {
        "id": 1108919
      },
      "writtenOn": "2024-05-14T15:09:45Z",
      "side": 1,
      "message": "what\u0027s the significance of this value?",
      "range": {
        "startLine": 33,
        "startChar": 35,
        "endLine": 33,
        "endChar": 49
      },
      "revId": "1deddced3c68d05de86bb1e769a62e86487475f9",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "eb054f87_5d1e7a96",
        "filename": "services/mediametrics/fuzzer/mediametrics_service_fuzzer.cpp",
        "patchSetId": 1
      },
      "lineNbr": 33,
      "author": {
        "id": 1947108
      },
      "writtenOn": "2024-05-29T06:24:41Z",
      "side": 1,
      "message": "The variable kTokenId is passed as a parameter to the restoreCallingIdentity(). Inside restoreCallingIdentity(), the unpackCallingUid() is called, which right-shifts kTokenId by 32 bits and assigns the result to mCallingUid.\n\nWithin the MediaMetricsService::submitInternal(), there is a switch case that utilizes the value of mCallingUid through getCallingUid(). The value of kTokenId is chosen in such a way that it matches one of the cases in this switch statement.\n```\nstatus_t MediaMetricsService::submitInternal(mediametrics::Item *item, bool release)\n{\n    // calling PID is 0 for one-way calls.\n    const pid_t pid \u003d IPCThreadState::self()-\u003egetCallingPid();\n    const pid_t pid_given \u003d item-\u003egetPid();\n    const uid_t uid \u003d IPCThreadState::self()-\u003egetCallingUid();\n    const uid_t uid_given \u003d item-\u003egetUid();\n\n    //ALOGD(\"%s: caller pid\u003d%d uid\u003d%d,  item pid\u003d%d uid\u003d%d\", __func__,\n    //        (int)pid, (int)uid, (int) pid_given, (int)uid_given);\n\n    bool isTrusted;\n     switch (uid) {\n    case AID_AUDIOSERVER:\n    case AID_BLUETOOTH:\n    case AID_CAMERA:\n    case AID_DRM:\n    case AID_MEDIA:\n    case AID_MEDIA_CODEC:\n    case AID_MEDIA_EX:\n    case AID_MEDIA_DRM:\n    // case AID_SHELL: // DEBUG ONLY - used for mediametrics_tests to add new keys\n    case AID_SYSTEM:                \u003c--- (i)\n        // trusted source, only override default values\n[. . .]\n        break;\n    default:\n[. . .]\n        break;\n    }\n ```",
      "parentUuid": "81fd7738_74bc7dbf",
      "range": {
        "startLine": 33,
        "startChar": 35,
        "endLine": 33,
        "endChar": 49
      },
      "revId": "1deddced3c68d05de86bb1e769a62e86487475f9",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2a5f51f8_20431581",
        "filename": "services/mediametrics/fuzzer/mediametrics_service_fuzzer.cpp",
        "patchSetId": 1
      },
      "lineNbr": 33,
      "author": {
        "id": 1108919
      },
      "writtenOn": "2024-05-31T11:11:17Z",
      "side": 1,
      "message": "it seems to me that this constant should be initialized as:\n kTokenId \u003d  AID_SYSTEM \u003c\u003c 32\n \n initializing with the 4294967296000 literal value -- is not good.\n\nit seems that kPackedCallingUid is probably a better name here --\nit would  better explain what it represents and where it will be used.",
      "parentUuid": "eb054f87_5d1e7a96",
      "range": {
        "startLine": 33,
        "startChar": 35,
        "endLine": 33,
        "endChar": 49
      },
      "revId": "1deddced3c68d05de86bb1e769a62e86487475f9",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ad15f037_c129e62f",
        "filename": "services/mediametrics/fuzzer/mediametrics_service_fuzzer.cpp",
        "patchSetId": 1
      },
      "lineNbr": 33,
      "author": {
        "id": 1947108
      },
      "writtenOn": "2024-06-03T05:32:36Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "2a5f51f8_20431581",
      "range": {
        "startLine": 33,
        "startChar": 35,
        "endLine": 33,
        "endChar": 49
      },
      "revId": "1deddced3c68d05de86bb1e769a62e86487475f9",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "08b6699c_a957e40d",
        "filename": "services/mediametrics/fuzzer/mediametrics_service_fuzzer.cpp",
        "patchSetId": 1
      },
      "lineNbr": 33,
      "author": {
        "id": 1108919
      },
      "writtenOn": "2024-06-03T14:14:15Z",
      "side": 1,
      "message": "this was not done.",
      "parentUuid": "ad15f037_c129e62f",
      "range": {
        "startLine": 33,
        "startChar": 35,
        "endLine": 33,
        "endChar": 49
      },
      "revId": "1deddced3c68d05de86bb1e769a62e86487475f9",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "be09975f_81911fa2",
        "filename": "services/mediametrics/fuzzer/mediametrics_service_fuzzer.cpp",
        "patchSetId": 1
      },
      "lineNbr": 33,
      "author": {
        "id": 1947108
      },
      "writtenOn": "2024-06-10T15:42:09Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "08b6699c_a957e40d",
      "range": {
        "startLine": 33,
        "startChar": 35,
        "endLine": 33,
        "endChar": 49
      },
      "revId": "1deddced3c68d05de86bb1e769a62e86487475f9",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "00e5313c_1651aa5b",
        "filename": "services/mediametrics/fuzzer/mediametrics_service_fuzzer.cpp",
        "patchSetId": 1
      },
      "lineNbr": 46,
      "author": {
        "id": 1108919
      },
      "writtenOn": "2024-05-14T15:09:45Z",
      "side": 1,
      "message": "i\u0027d like to see some comments about why we\u0027re doing this\nstring concatenation -- probably to answer the question\n\"what is it that we\u0027re building\".",
      "range": {
        "startLine": 46,
        "startChar": 44,
        "endLine": 46,
        "endChar": 55
      },
      "fixSuggestions": [
        {
          "fixId": "1762760a_392b1ec3",
          "description": "prompt_to_edit API",
          "replacements": [
            {
              "path": "services/mediametrics/fuzzer/mediametrics_service_fuzzer.cpp",
              "range": {
                "startLine": 43,
                "startChar": 0,
                "endLine": 58,
                "endChar": 0
              },
              "replacement": "std::string keyMediaValues[] \u003d {\"metrics.manager\",\n                                \"mediadrm\",\n                                AMEDIAMETRICS_KEY_AUDIO_MIDI,\n                                AMEDIAMETRICS_KEY_PREFIX_AUDIO_SPATIALIZER,\n                                AMEDIAMETRICS_KEY_PREFIX_AUDIO_THREAD,\n                                AMEDIAMETRICS_KEY_AUDIO_FLINGER,\n                                AMEDIAMETRICS_KEY_AUDIO_POLICY,\n                                AMEDIAMETRICS_KEY_PREFIX_AUDIO_TRACK,\n                                AMEDIAMETRICS_KEY_PREFIX_AUDIO_RECORD,\n                                AMEDIAMETRICS_KEY_PREFIX_AUDIO_STREAM,\n                                \"audio.device.a2dp\",\n                                AMEDIAMETRICS_KEY_PREFIX_AUDIO_DEVICE,\n                                \"postBluetoothA2dpDeviceConnectionStateSuppressNoisyIntent\"};\n"
            },
            {
              "path": "services/mediametrics/fuzzer/mediametrics_service_fuzzer.cpp",
              "range": {
                "startLine": 59,
                "startChar": 0,
                "endLine": 68,
                "endChar": 0
              },
              "replacement": "std::string keyMediaAction[] \u003d {AMEDIAMETRICS_PROP_EVENT_VALUE_CREATE,\n                                AMEDIAMETRICS_PROP_EVENT_VALUE_TIMEOUT,\n                                AMEDIAMETRICS_PROP_EVENT_VALUE_CTOR,\n                                AMEDIAMETRICS_PROP_EVENT_VALUE_ENDAAUDIOSTREAM,\n                                AMEDIAMETRICS_PROP_EVENT_VALUE_DEVICECLOSED,\n                                \"createAudioPatch\",\n                                AMEDIAMETRICS_PROP_EVENT_VALUE_SETVOICEVOLUME,\n                                AMEDIAMETRICS_PROP_EVENT_VALUE_SETMODE,\n                                AMEDIAMETRICS_PROP_EVENT_VALUE_ENDAUDIOINTERVALGROUP,\n                                \"connected\"};\n"
            }
          ]
        }
      ],
      "revId": "1deddced3c68d05de86bb1e769a62e86487475f9",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d329caa4_b0c2b3f7",
        "filename": "services/mediametrics/fuzzer/mediametrics_service_fuzzer.cpp",
        "patchSetId": 1
      },
      "lineNbr": 46,
      "author": {
        "id": 1947108
      },
      "writtenOn": "2024-05-29T06:24:41Z",
      "side": 1,
      "message": "Actions (lambda functions) are added to mAction in AudioAnalytics(). They are only executed when the key of the item variable matches, in a wildcard manner, with the URL added in mAction in AudioAnalytics(). A similar key is created here to pass these checks and ensure that the lambda functions are covered.\n```\n\nvoid AudioAnalytics::processActions(const std::shared_ptr\u003cconst mediametrics::Item\u003e\u0026 item)\n{\n    auto actions \u003d mActions.getActionsForItem(item); // internally locked.\n    // Execute actions with no lock held.\n    for (const auto\u0026 action : actions) {\n        (*action)(item);\n    }\n}\n\nAudioAnalytics::AudioAnalytics(const std::shared_ptr\u003cStatsdLog\u003e\u0026 statsdLog)\n[. . .]\n    mActions.addAction(\n        AMEDIAMETRICS_KEY_PREFIX_AUDIO_DEVICE\n        \"postBluetoothA2dpDeviceConnectionStateSuppressNoisyIntent\"\n        \".\" AMEDIAMETRICS_PROP_STATE,\n        \"connected\",\n        std::make_shared\u003cAnalyticsActions::Function\u003e(\n            [this](const std::shared_ptr\u003cconst android::mediametrics::Item\u003e \u0026item){\n                mDeviceConnection.postBluetoothA2dpDeviceConnectionStateSuppressNoisyIntent(item);\n            }));  \u003c--- postBluetoothA2dpDeviceConnectionStateSuppressNoisyIntent() is called inside this lamda function.\n\n[. . ]\n```",
      "parentUuid": "00e5313c_1651aa5b",
      "range": {
        "startLine": 46,
        "startChar": 44,
        "endLine": 46,
        "endChar": 55
      },
      "revId": "1deddced3c68d05de86bb1e769a62e86487475f9",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1886df87_ac3865ce",
        "filename": "services/mediametrics/fuzzer/mediametrics_service_fuzzer.cpp",
        "patchSetId": 1
      },
      "lineNbr": 46,
      "author": {
        "id": 1108919
      },
      "writtenOn": "2024-06-04T12:34:17Z",
      "side": 1,
      "message": "my \u0027add some comments\u0027 meant to add it to the code, not just to the review.\n\n// the string",
      "parentUuid": "d329caa4_b0c2b3f7",
      "range": {
        "startLine": 46,
        "startChar": 44,
        "endLine": 46,
        "endChar": 55
      },
      "revId": "1deddced3c68d05de86bb1e769a62e86487475f9",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6b9481c3_a7e8c968",
        "filename": "services/mediametrics/fuzzer/mediametrics_service_fuzzer.cpp",
        "patchSetId": 1
      },
      "lineNbr": 46,
      "author": {
        "id": 1947108
      },
      "writtenOn": "2024-06-10T05:47:48Z",
      "side": 1,
      "message": "The comment for concatenation of strings in the keyMediaValues array is added at\nline 44. Can you please review and let me know if more details are needed there.\nThanks.",
      "parentUuid": "1886df87_ac3865ce",
      "range": {
        "startLine": 46,
        "startChar": 44,
        "endLine": 46,
        "endChar": 55
      },
      "revId": "1deddced3c68d05de86bb1e769a62e86487475f9",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c2dd30ff_1fb275cb",
        "filename": "services/mediametrics/fuzzer/mediametrics_service_fuzzer.cpp",
        "patchSetId": 1
      },
      "lineNbr": 46,
      "author": {
        "id": 1108919
      },
      "writtenOn": "2024-06-10T13:46:04Z",
      "side": 1,
      "message": "i missed that.",
      "parentUuid": "6b9481c3_a7e8c968",
      "range": {
        "startLine": 46,
        "startChar": 44,
        "endLine": 46,
        "endChar": 55
      },
      "revId": "1deddced3c68d05de86bb1e769a62e86487475f9",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a726b602_137de60b",
        "filename": "services/mediametrics/fuzzer/mediametrics_service_fuzzer.cpp",
        "patchSetId": 1
      },
      "lineNbr": 63,
      "author": {
        "id": 1108919
      },
      "writtenOn": "2024-05-14T15:09:45Z",
      "side": 1,
      "message": "missed a comma?  or are we deliberately doing string concatenation here?\n\nif deliberate, let\u0027s add a comment",
      "range": {
        "startLine": 63,
        "startChar": 8,
        "endLine": 63,
        "endChar": 35
      },
      "fixSuggestions": [
        {
          "fixId": "35c301b5_dde8c56d",
          "description": "prompt_to_edit API",
          "replacements": [
            {
              "path": "services/mediametrics/fuzzer/mediametrics_service_fuzzer.cpp",
              "range": {
                "startLine": 63,
                "startChar": 0,
                "endLine": 64,
                "endChar": 0
              },
              "replacement": "        \"createAudioPatch\", AMEDIAMETRICS_PROP_EVENT_VALUE_SETVOICEVOLUME,\n"
            }
          ]
        }
      ],
      "revId": "1deddced3c68d05de86bb1e769a62e86487475f9",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c1abe82b_d0b5dd4e",
        "filename": "services/mediametrics/fuzzer/mediametrics_service_fuzzer.cpp",
        "patchSetId": 1
      },
      "lineNbr": 63,
      "author": {
        "id": 1947108
      },
      "writtenOn": "2024-05-29T06:24:41Z",
      "side": 1,
      "message": "Corrected commas.",
      "parentUuid": "a726b602_137de60b",
      "range": {
        "startLine": 63,
        "startChar": 8,
        "endLine": 63,
        "endChar": 35
      },
      "revId": "1deddced3c68d05de86bb1e769a62e86487475f9",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "91beb779_ed94ac90",
        "filename": "services/mediametrics/fuzzer/mediametrics_service_fuzzer.cpp",
        "patchSetId": 1
      },
      "lineNbr": 63,
      "author": {
        "id": 1947108
      },
      "writtenOn": "2024-06-10T15:42:09Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "c1abe82b_d0b5dd4e",
      "range": {
        "startLine": 63,
        "startChar": 8,
        "endLine": 63,
        "endChar": 35
      },
      "revId": "1deddced3c68d05de86bb1e769a62e86487475f9",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "61eba1f8_b1074d4e",
        "filename": "services/mediametrics/fuzzer/mediametrics_service_fuzzer.cpp",
        "patchSetId": 1
      },
      "lineNbr": 97,
      "author": {
        "id": 1108919
      },
      "writtenOn": "2024-05-14T15:09:45Z",
      "side": 1,
      "message": "setTimestamp(nsecs_t) -- that\u0027s a uint64_t, i believe.",
      "range": {
        "startLine": 97,
        "startChar": 58,
        "endLine": 97,
        "endChar": 72
      },
      "fixSuggestions": [
        {
          "fixId": "1432170c_65688e84",
          "description": "prompt_to_edit API",
          "replacements": [
            {
              "path": "services/mediametrics/fuzzer/mediametrics_service_fuzzer.cpp",
              "range": {
                "startLine": 97,
                "startChar": 0,
                "endLine": 98,
                "endChar": 0
              },
              "replacement": "            [\u0026]() { item-\u003esetTimestamp(mFdp.ConsumeIntegral\u003cuint64_t\u003e()); },\n"
            }
          ]
        }
      ],
      "revId": "1deddced3c68d05de86bb1e769a62e86487475f9",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "88c7b21c_6c8c1a68",
        "filename": "services/mediametrics/fuzzer/mediametrics_service_fuzzer.cpp",
        "patchSetId": 1
      },
      "lineNbr": 97,
      "author": {
        "id": 1947108
      },
      "writtenOn": "2024-05-29T06:24:41Z",
      "side": 1,
      "message": "typedef int64_t nsecs_t; // nano-seconds\n\nupdated.",
      "parentUuid": "61eba1f8_b1074d4e",
      "range": {
        "startLine": 97,
        "startChar": 58,
        "endLine": 97,
        "endChar": 72
      },
      "revId": "1deddced3c68d05de86bb1e769a62e86487475f9",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d2b3515a_3c8cd858",
        "filename": "services/mediametrics/fuzzer/mediametrics_service_fuzzer.cpp",
        "patchSetId": 1
      },
      "lineNbr": 97,
      "author": {
        "id": 1947108
      },
      "writtenOn": "2024-06-10T15:42:09Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "88c7b21c_6c8c1a68",
      "range": {
        "startLine": 97,
        "startChar": 58,
        "endLine": 97,
        "endChar": 72
      },
      "revId": "1deddced3c68d05de86bb1e769a62e86487475f9",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}