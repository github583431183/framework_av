{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "f788b6ee_3358c04c",
        "filename": "media/codec2/hal/hidl/1.0/utils/Component.cpp",
        "patchSetId": 5
      },
      "lineNbr": 534,
      "author": {
        "id": 1021605
      },
      "writtenOn": "2024-06-04T20:45:13Z",
      "side": 1,
      "message": "this places a lot of implementation detail into the Component implementation. This also rests on the question on whether \"clearDeferredBuffers\" term is meaningful for the blockpool API (even if it is specialized.)\n\nQuestion: could we change the internal blockpool API flow to make this an official part of managing blockpools?",
      "range": {
        "startLine": 525,
        "startChar": 4,
        "endLine": 534,
        "endChar": 5
      },
      "revId": "76e6589281d638d4d399c79eeef1473568643f63",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a788b00e_5aa188b5",
        "filename": "media/codec2/hal/hidl/1.0/utils/Component.cpp",
        "patchSetId": 5
      },
      "lineNbr": 534,
      "author": {
        "id": 1156740
      },
      "writtenOn": "2024-06-05T10:19:27Z",
      "side": 1,
      "message": "Added some documentation to C2BqBlockPool. Would it suffice?",
      "parentUuid": "f788b6ee_3358c04c",
      "range": {
        "startLine": 525,
        "startChar": 4,
        "endLine": 534,
        "endChar": 5
      },
      "revId": "76e6589281d638d4d399c79eeef1473568643f63",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f163eeef_1c0763a0",
        "filename": "media/codec2/hal/hidl/1.0/utils/Component.cpp",
        "patchSetId": 5
      },
      "lineNbr": 534,
      "author": {
        "id": 1021605
      },
      "writtenOn": "2024-06-06T23:02:46Z",
      "side": 1,
      "message": "Ack. I think we should consider streamlining this in the future, as this places BQBBP specific knowledge (and logic) into multiple places. The other way to handle this is to define this as a BP API and call it regardless of the pool. Raised b/345562865 to track this.",
      "parentUuid": "a788b00e_5aa188b5",
      "range": {
        "startLine": 525,
        "startChar": 4,
        "endLine": 534,
        "endChar": 5
      },
      "revId": "76e6589281d638d4d399c79eeef1473568643f63",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "06061f4f_8cc1e322",
        "filename": "media/codec2/vndk/include/C2BqBufferPriv.h",
        "patchSetId": 5
      },
      "lineNbr": 31,
      "author": {
        "id": 1021605
      },
      "writtenOn": "2024-06-06T23:02:46Z",
      "side": 1,
      "message": "could we add a doc header here? Specifically, it seems that this blockpool is meant to be used with an HGBP, but initially it will use an allocator.\n\nThis is where we would need to describe why deallocation would be deferrred. Perhaps by describing that upon component stop, framework will call configureProducer with nullptr(?).\n\nWe would also need to describe the impact of changing the producer during the runtime.",
      "range": {
        "startLine": 31,
        "startChar": 6,
        "endLine": 31,
        "endChar": 28
      },
      "fixSuggestions": [
        {
          "fixId": "31a32494_79983f13",
          "description": "prompt_to_edit API",
          "replacements": [
            {
              "path": "media/codec2/vndk/include/C2BqBufferPriv.h",
              "range": {
                "startLine": 31,
                "startChar": 0,
                "endLine": 31,
                "endChar": 0
              },
              "replacement": "/**\n * C2BufferQueueBlockPool is a block pool which is used to create blocks\n * from IGBP.\n *\n * If IGBP is not configured, blocks are created from allocator.\n *\n * \\param allocator     allocator to create blocks\n * \\param localId       local id of the block pool\n */\n"
            }
          ]
        }
      ],
      "revId": "76e6589281d638d4d399c79eeef1473568643f63",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "667fcbe6_f927f0a8",
        "filename": "media/codec2/vndk/include/C2BqBufferPriv.h",
        "patchSetId": 5
      },
      "lineNbr": 80,
      "author": {
        "id": 1021605
      },
      "writtenOn": "2024-06-06T23:02:46Z",
      "side": 1,
      "message": "it seems that nullptr is allowed here with a special meaning.",
      "range": {
        "startLine": 79,
        "startChar": 28,
        "endLine": 80,
        "endChar": 7
      },
      "revId": "76e6589281d638d4d399c79eeef1473568643f63",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "469da808_2e4eb1f7",
        "filename": "media/codec2/vndk/include/C2BqBufferPriv.h",
        "patchSetId": 5
      },
      "lineNbr": 114,
      "author": {
        "id": 1021605
      },
      "writtenOn": "2024-06-04T20:54:19Z",
      "side": 1,
      "message": "Can we make this meaningful for the API spec here. Nowhere is the term \"deferred buffers\" described in this C2BufferQueueBlockPool definition.",
      "range": {
        "startLine": 114,
        "startChar": 13,
        "endLine": 114,
        "endChar": 21
      },
      "revId": "76e6589281d638d4d399c79eeef1473568643f63",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "0072f2ee_1e16249d",
        "filename": "media/codec2/vndk/include/C2BqBufferPriv.h",
        "patchSetId": 5
      },
      "lineNbr": 114,
      "author": {
        "id": 1156740
      },
      "writtenOn": "2024-06-05T10:19:27Z",
      "side": 1,
      "message": "Added documentation/comments on the interface and the constructor.",
      "parentUuid": "469da808_2e4eb1f7",
      "range": {
        "startLine": 114,
        "startChar": 13,
        "endLine": 114,
        "endChar": 21
      },
      "revId": "76e6589281d638d4d399c79eeef1473568643f63",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9c52805a_73abc072",
        "filename": "media/codec2/vndk/platform/C2BqBuffer.cpp",
        "patchSetId": 5
      },
      "lineNbr": 607,
      "author": {
        "id": 1021605
      },
      "writtenOn": "2024-06-04T20:54:19Z",
      "side": 1,
      "message": "this part is putting an implementation decision into the implementation, that results in varying behavior for this class. Perhaps that is intended.\n\nAnother approach would be to set this as a flag by the framework, so calling clearDeferredBuffers would make more sense.",
      "range": {
        "startLine": 606,
        "startChar": 10,
        "endLine": 607,
        "endChar": 96
      },
      "revId": "76e6589281d638d4d399c79eeef1473568643f63",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "82199d4c_ae9eda52",
        "filename": "media/codec2/vndk/platform/C2BqBuffer.cpp",
        "patchSetId": 5
      },
      "lineNbr": 607,
      "author": {
        "id": 1156740
      },
      "writtenOn": "2024-06-05T10:19:27Z",
      "side": 1,
      "message": "Moved to the C2Store implementation.\nAt first I thought moving this to the utils. But moving to C2Store seems to be cleaner.",
      "parentUuid": "9c52805a_73abc072",
      "range": {
        "startLine": 606,
        "startChar": 10,
        "endLine": 607,
        "endChar": 96
      },
      "revId": "76e6589281d638d4d399c79eeef1473568643f63",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2d8df959_ac342c44",
        "filename": "media/codec2/vndk/platform/C2BqBuffer.cpp",
        "patchSetId": 5
      },
      "lineNbr": 782,
      "author": {
        "id": 1021605
      },
      "writtenOn": "2024-06-04T20:54:19Z",
      "side": 1,
      "message": "this add yet another variation into the implementation details. Could we detect whether this pool is used by a swcodec into the decision on whether to set mDeferDeallocationAfterStop by the enable API?",
      "range": {
        "startLine": 782,
        "startChar": 19,
        "endLine": 782,
        "endChar": 26
      },
      "revId": "76e6589281d638d4d399c79eeef1473568643f63",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f8847b25_05b9a828",
        "filename": "media/codec2/vndk/platform/C2BqBuffer.cpp",
        "patchSetId": 5
      },
      "lineNbr": 782,
      "author": {
        "id": 1156740
      },
      "writtenOn": "2024-06-05T10:19:27Z",
      "side": 1,
      "message": "I injected the wanted behavior directly into the pool\u0027s ctor in order not to care whether this is swcodec or not.",
      "parentUuid": "2d8df959_ac342c44",
      "range": {
        "startLine": 782,
        "startChar": 19,
        "endLine": 782,
        "endChar": 26
      },
      "revId": "76e6589281d638d4d399c79eeef1473568643f63",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}