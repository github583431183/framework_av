{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "2c714b2c_37e7e777",
        "filename": "media/codec2/sfplugin/CCodec.cpp",
        "patchSetId": 25
      },
      "lineNbr": 1194,
      "author": {
        "id": 1021605
      },
      "writtenOn": "2024-03-19T21:19:39Z",
      "side": 1,
      "message": "nit: could we use 0,0-16,16 here? using the whole frame may result in suboptimal result if we need to convert this to a map.",
      "range": {
        "startLine": 1194,
        "startChar": 39,
        "endLine": 1194,
        "endChar": 52
      },
      "revId": "a3e76742dc467050d8ec19eb8247623d5201cd06",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8f7302d3_df3effa3",
        "filename": "media/codec2/sfplugin/CCodec.cpp",
        "patchSetId": 25
      },
      "lineNbr": 1194,
      "author": {
        "id": 1392607
      },
      "writtenOn": "2024-03-19T22:24:07Z",
      "side": 1,
      "message": "Hi Lajos and Ram,\nI think we have talked to SoC vendors that the hint will be \"zeros\", so that this should mean `\"0,0-0-0\u003d0\"`. Is this preferred than `\"0,0-16,16\u003d0\"`?",
      "parentUuid": "2c714b2c_37e7e777",
      "range": {
        "startLine": 1194,
        "startChar": 39,
        "endLine": 1194,
        "endChar": 52
      },
      "revId": "a3e76742dc467050d8ec19eb8247623d5201cd06",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a57b7dfd_00da0196",
        "filename": "media/codec2/sfplugin/CCodec.cpp",
        "patchSetId": 25
      },
      "lineNbr": 1194,
      "author": {
        "id": 1546599
      },
      "writtenOn": "2024-03-19T22:28:48Z",
      "side": 1,
      "message": "Have changed this to 0-0,16,16\u003d0 for now.\nPlease let us know if it needs to change to 0,0-0,0\u003d0;",
      "parentUuid": "8f7302d3_df3effa3",
      "range": {
        "startLine": 1194,
        "startChar": 39,
        "endLine": 1194,
        "endChar": 52
      },
      "revId": "a3e76742dc467050d8ec19eb8247623d5201cd06",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6efa7279_0ce41bc2",
        "filename": "media/codec2/sfplugin/CCodec.cpp",
        "patchSetId": 25
      },
      "lineNbr": 1194,
      "author": {
        "id": 1392607
      },
      "writtenOn": "2024-03-19T22:35:44Z",
      "side": 1,
      "message": "Thank you for the update! This should be a very minor discussion. I personally prefer all zeros, but I\u0027m not sure if this may break any low layer restrictions. @lajos@google.com could you provide any input? Thanks!",
      "parentUuid": "a57b7dfd_00da0196",
      "range": {
        "startLine": 1194,
        "startChar": 39,
        "endLine": 1194,
        "endChar": 52
      },
      "revId": "a3e76742dc467050d8ec19eb8247623d5201cd06",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "fab1dc30_d591b021",
        "filename": "media/codec2/sfplugin/CCodec.cpp",
        "patchSetId": 25
      },
      "lineNbr": 1194,
      "author": {
        "id": 1021605
      },
      "writtenOn": "2024-03-20T05:47:52Z",
      "side": 1,
      "message": "I was also wondering about this. It does not matter for this setting, but if we have a conversion layer in the future from rect to map, it may ignore a 0,0-0,0 setting and not create a map version as 0,0-0,0 does not cover any pixels.",
      "parentUuid": "6efa7279_0ce41bc2",
      "range": {
        "startLine": 1194,
        "startChar": 39,
        "endLine": 1194,
        "endChar": 52
      },
      "revId": "a3e76742dc467050d8ec19eb8247623d5201cd06",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0323eabb_5efa68ac",
        "filename": "media/codec2/sfplugin/CCodecConfig.cpp",
        "patchSetId": 25
      },
      "lineNbr": 1901,
      "author": {
        "id": 1021605
      },
      "writtenOn": "2024-03-19T21:19:39Z",
      "side": 1,
      "message": "these may still overflow (even as ints). I recommend doing the following logic:\n\nswap left, right if needed\n\n left_clamped \u003d (uint32_t)clamp(min(left, right), 0, width)\n right_clamped \u003d (uint32_t)clamp(max(left, right), 0, width)\n then width \u003d right_clamped - left_clamped // now guaranteed to not overflow\n left_clamped can be used as left\n \n same for height/top\n \n alternately, you can clamp to (0, MAX_INT) if you don\u0027t want to assume to know the width/height.",
      "range": {
        "startLine": 1901,
        "startChar": 53,
        "endLine": 1901,
        "endChar": 65
      },
      "revId": "a3e76742dc467050d8ec19eb8247623d5201cd06",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "6eba72c3_03965d43",
        "filename": "media/codec2/sfplugin/CCodecConfig.cpp",
        "patchSetId": 25
      },
      "lineNbr": 1901,
      "author": {
        "id": 1546599
      },
      "writtenOn": "2024-03-19T22:28:48Z",
      "side": 1,
      "message": "added a check for the coordinates of the rectangle.",
      "parentUuid": "0323eabb_5efa68ac",
      "range": {
        "startLine": 1901,
        "startChar": 53,
        "endLine": 1901,
        "endChar": 65
      },
      "revId": "a3e76742dc467050d8ec19eb8247623d5201cd06",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "171d10c9_7e8402f9",
        "filename": "media/codec2/sfplugin/CCodecConfig.cpp",
        "patchSetId": 25
      },
      "lineNbr": 1901,
      "author": {
        "id": 1021605
      },
      "writtenOn": "2024-03-20T05:47:52Z",
      "side": 1,
      "message": "This code will not do the clamping that we want for a setting. E.g. ideally we want to accept a -10,0-230,100 rectangle as w\u003d230,h\u003d100,l\u003d0,t\u003d0 instead of dropping the whole rectangle from a list that may include other rectangles.",
      "parentUuid": "6eba72c3_03965d43",
      "range": {
        "startLine": 1901,
        "startChar": 53,
        "endLine": 1901,
        "endChar": 65
      },
      "revId": "a3e76742dc467050d8ec19eb8247623d5201cd06",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "02c0a7a7_726c566e",
        "filename": "media/codec2/sfplugin/CCodecConfig.cpp",
        "patchSetId": 25
      },
      "lineNbr": 1901,
      "author": {
        "id": 1392607
      },
      "writtenOn": "2024-03-20T06:10:35Z",
      "side": 1,
      "message": "Hi Lajos, regarding\n\n“ E.g. ideally we want to accept a -10,0-230,100 rectangle as w\u003d230,h\u003d100,l\u003d0,t\u003d0 instead of dropping the whole rectangle from a list that may include other rectangles.”\n\nI may disagree. In the JAVA api we clearly documented the values should be in the order of \"top,left-bottom,right\", so it is the users responsibility to keep them in the right order. If the example case happens, even if we clamp the values it may still be wrong. E.g. if we know some values are misplaced by comparing bottom \u003c top, we know there is at least one error and that may be corrected by swap bottom and top, but we can\u0027t guarantee if there is no other error, like if top and left values are misplaced. So in this case, as long as we detected the input has error, instead of clamping, I would prefer drop this rectangle with some error message. Besides, if this happens, we only drop the problematic rectangle but will keep the rest.",
      "parentUuid": "171d10c9_7e8402f9",
      "range": {
        "startLine": 1901,
        "startChar": 53,
        "endLine": 1901,
        "endChar": 65
      },
      "revId": "a3e76742dc467050d8ec19eb8247623d5201cd06",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7dcb2971_34708fa4",
        "filename": "media/codec2/sfplugin/CCodecConfig.cpp",
        "patchSetId": 25
      },
      "lineNbr": 1901,
      "author": {
        "id": 1546599
      },
      "writtenOn": "2024-03-20T06:19:55Z",
      "side": 1,
      "message": "Dichen,\nthe current error check is too agressive.\n\nAs per the documentation, we should clamp when coordinates are outside the frame.\nhttps://cs.android.com/android/platform/superproject/main/+/main:frameworks/base/media/java/android/media/MediaCodec.java;l\u003d5136;drc\u003d13012099d2888a9e04e2432923982ed5adeaac9a\n\nWe will update the CL to allow left and top to be negative (i.e. we will clamp to zero). Getting width and height is tricky at this level, so for now will just clamp left and top to 0, MAX_INT as per the second suggestion above.\n\nWill still reject if right \u003c\u003d left or bottom \u003c\u003d top.",
      "parentUuid": "02c0a7a7_726c566e",
      "range": {
        "startLine": 1901,
        "startChar": 53,
        "endLine": 1901,
        "endChar": 65
      },
      "revId": "a3e76742dc467050d8ec19eb8247623d5201cd06",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "659471e3_cf92bc79",
        "filename": "media/codec2/sfplugin/CCodecConfig.cpp",
        "patchSetId": 25
      },
      "lineNbr": 1901,
      "author": {
        "id": 1392607
      },
      "writtenOn": "2024-03-20T06:23:57Z",
      "side": 1,
      "message": "OK then. Thank you!",
      "parentUuid": "7dcb2971_34708fa4",
      "range": {
        "startLine": 1901,
        "startChar": 53,
        "endLine": 1901,
        "endChar": 65
      },
      "revId": "a3e76742dc467050d8ec19eb8247623d5201cd06",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2b819dc7_6900dbc4",
        "filename": "media/codec2/sfplugin/CCodecConfig.cpp",
        "patchSetId": 25
      },
      "lineNbr": 1901,
      "author": {
        "id": 1546599
      },
      "writtenOn": "2024-03-20T06:27:12Z",
      "side": 1,
      "message": "Lajos,\nCan you please check if the above looks ok?",
      "parentUuid": "659471e3_cf92bc79",
      "range": {
        "startLine": 1901,
        "startChar": 53,
        "endLine": 1901,
        "endChar": 65
      },
      "revId": "a3e76742dc467050d8ec19eb8247623d5201cd06",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6308cc71_f6e3a333",
        "filename": "media/codec2/sfplugin/CCodecConfig.cpp",
        "patchSetId": 25
      },
      "lineNbr": 1901,
      "author": {
        "id": 1392607
      },
      "writtenOn": "2024-03-26T19:18:15Z",
      "side": 1,
      "message": "Hi @lajos@google.com. Could you help to review this change? Thank you!",
      "parentUuid": "2b819dc7_6900dbc4",
      "range": {
        "startLine": 1901,
        "startChar": 53,
        "endLine": 1901,
        "endChar": 65
      },
      "revId": "a3e76742dc467050d8ec19eb8247623d5201cd06",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "cea04ecc_d12ed8d4",
        "filename": "media/codec2/sfplugin/CCodecConfig.cpp",
        "patchSetId": 25
      },
      "lineNbr": 1901,
      "author": {
        "id": 1546599
      },
      "writtenOn": "2024-03-26T21:57:02Z",
      "side": 1,
      "message": "Marking this resolved as PS27 had Code-Review +2.",
      "parentUuid": "6308cc71_f6e3a333",
      "range": {
        "startLine": 1901,
        "startChar": 53,
        "endLine": 1901,
        "endChar": 65
      },
      "revId": "a3e76742dc467050d8ec19eb8247623d5201cd06",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}