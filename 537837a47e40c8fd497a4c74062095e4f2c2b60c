{
  "comments": [
    {
      "key": {
        "uuid": "1d6ac832_24aabce7",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 8
      },
      "lineNbr": 0,
      "author": {
        "id": 1010110
      },
      "writtenOn": "2020-07-24T19:02:44Z",
      "side": 1,
      "message": "Small update to reformat changes and my first pass at pushing the properties down into the AllocatorBuf code. \n\nThough after talking with Hridya last night, it seems I probably need to re-add the usage-mapper logic so vendors can provide their own usage -\u003e heap/flags combo (though this sounds suspiciously like what gralloc is supposed to do).",
      "revId": "537837a47e40c8fd497a4c74062095e4f2c2b60c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8ba1e473_d766b9b7",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 8
      },
      "lineNbr": 0,
      "author": {
        "id": 1157738
      },
      "writtenOn": "2020-07-29T21:48:19Z",
      "side": 1,
      "message": "Some nits. Biggest question is about how we handle heapmask and align parameters.",
      "revId": "537837a47e40c8fd497a4c74062095e4f2c2b60c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bfd3bcbb_f559f655",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 8
      },
      "lineNbr": 0,
      "author": {
        "id": 1021605
      },
      "writtenOn": "2020-08-11T22:38:19Z",
      "side": 1,
      "message": "Thanks for creating these. I am still trying to digest how this fits in with our allocation strategy.",
      "revId": "537837a47e40c8fd497a4c74062095e4f2c2b60c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c8d0b80b_bc73a9a1",
        "filename": "media/codec2/vndk/C2AllocatorBuf.cpp",
        "patchSetId": 8
      },
      "lineNbr": 74,
      "author": {
        "id": 1157738
      },
      "writtenOn": "2020-07-29T21:48:19Z",
      "side": 1,
      "message": "seems to be unused.",
      "range": {
        "startLine": 74,
        "startChar": 2,
        "endLine": 74,
        "endChar": 28
      },
      "revId": "537837a47e40c8fd497a4c74062095e4f2c2b60c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8128cd40_c878bbcd",
        "filename": "media/codec2/vndk/C2AllocatorBuf.cpp",
        "patchSetId": 8
      },
      "lineNbr": 98,
      "author": {
        "id": 1157738
      },
      "writtenOn": "2020-07-29T21:48:19Z",
      "side": 1,
      "message": "I kept confusing C2AllocationBuf with C2AllocatorBuf. Maybe we can call C2AllocationBuf simply C2DmaBuf or smth similar? It\u0027s an internal class, so we can chose a better name?",
      "range": {
        "startLine": 98,
        "startChar": 6,
        "endLine": 98,
        "endChar": 21
      },
      "revId": "537837a47e40c8fd497a4c74062095e4f2c2b60c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5ee97ec7_48c3b791",
        "filename": "media/codec2/vndk/C2AllocatorBuf.cpp",
        "patchSetId": 8
      },
      "lineNbr": 98,
      "author": {
        "id": 1021605
      },
      "writtenOn": "2020-08-11T22:38:19Z",
      "side": 1,
      "message": "I would prefer C2Allocations to be called allocations. These actually go against our C2 naming guide as all of these should be really called C2BufAllocation, etc. In that sense these could be C2DmaBufAllocation.",
      "parentUuid": "8128cd40_c878bbcd",
      "range": {
        "startLine": 98,
        "startChar": 6,
        "endLine": 98,
        "endChar": 21
      },
      "revId": "537837a47e40c8fd497a4c74062095e4f2c2b60c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9cae8113_a7f45606",
        "filename": "media/codec2/vndk/C2AllocatorBuf.cpp",
        "patchSetId": 8
      },
      "lineNbr": 98,
      "author": {
        "id": 1010110
      },
      "writtenOn": "2020-09-03T02:36:23Z",
      "side": 1,
      "message": "Working on a big rename on this here.",
      "parentUuid": "5ee97ec7_48c3b791",
      "range": {
        "startLine": 98,
        "startChar": 6,
        "endLine": 98,
        "endChar": 21
      },
      "revId": "537837a47e40c8fd497a4c74062095e4f2c2b60c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "46b77171_67aa61ff",
        "filename": "media/codec2/vndk/C2AllocatorBuf.cpp",
        "patchSetId": 8
      },
      "lineNbr": 157,
      "author": {
        "id": 1157738
      },
      "writtenOn": "2020-07-29T21:48:19Z",
      "side": 1,
      "message": "is it still an ION buffer?",
      "range": {
        "startLine": 157,
        "startChar": 55,
        "endLine": 157,
        "endChar": 58
      },
      "revId": "537837a47e40c8fd497a4c74062095e4f2c2b60c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "afd7a260_2b474fbe",
        "filename": "media/codec2/vndk/C2AllocatorBuf.cpp",
        "patchSetId": 8
      },
      "lineNbr": 157,
      "author": {
        "id": 1010110
      },
      "writtenOn": "2020-09-03T02:36:23Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "46b77171_67aa61ff",
      "range": {
        "startLine": 157,
        "startChar": 55,
        "endLine": 157,
        "endChar": 58
      },
      "revId": "537837a47e40c8fd497a4c74062095e4f2c2b60c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f5daa978_f062c20a",
        "filename": "media/codec2/vndk/C2AllocatorBuf.cpp",
        "patchSetId": 8
      },
      "lineNbr": 235,
      "author": {
        "id": 1157738
      },
      "writtenOn": "2020-07-29T21:48:19Z",
      "side": 1,
      "message": "maybe ALOGD if munmap fails? I know we can\u0027t do much here but at least we can see that some memory was not unmapped which might explain a possible memory leak.",
      "range": {
        "startLine": 235,
        "startChar": 12,
        "endLine": 235,
        "endChar": 18
      },
      "revId": "537837a47e40c8fd497a4c74062095e4f2c2b60c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "902a6c55_c1ba6f57",
        "filename": "media/codec2/vndk/C2AllocatorBuf.cpp",
        "patchSetId": 8
      },
      "lineNbr": 235,
      "author": {
        "id": 1010110
      },
      "writtenOn": "2020-09-03T02:36:23Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "f5daa978_f062c20a",
      "range": {
        "startLine": 235,
        "startChar": 12,
        "endLine": 235,
        "endChar": 18
      },
      "revId": "537837a47e40c8fd497a4c74062095e4f2c2b60c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "722300ed_55797a80",
        "filename": "media/codec2/vndk/C2AllocatorBuf.cpp",
        "patchSetId": 8
      },
      "lineNbr": 304,
      "author": {
        "id": 1157738
      },
      "writtenOn": "2020-07-29T21:48:19Z",
      "side": 1,
      "message": "Couple questions:\nWe don\u0027t use \"align\" value, so we do not support alignment?\nAFAIK heapmast might be used to select a non-system heap. Do we ignore that and use \"system\" anyway?",
      "range": {
        "startLine": 299,
        "startChar": 0,
        "endLine": 304,
        "endChar": 0
      },
      "revId": "537837a47e40c8fd497a4c74062095e4f2c2b60c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6214a9bc_9ebb5d32",
        "filename": "media/codec2/vndk/C2AllocatorBuf.cpp",
        "patchSetId": 8
      },
      "lineNbr": 304,
      "author": {
        "id": 1010110
      },
      "writtenOn": "2020-09-03T02:36:23Z",
      "side": 1,
      "message": "So for alignment: Alignment doesn\u0027t do anything in ION w/ 4.12+ kernels. Though for earlier kernels we may need a workaround for libdmabufheaps to be able to support it as a argument. I\u0027ll sync w/ Hridya on that.\n\nOn heapmask: Again a good point. This is something I think we should tweak on the libdmabufheaps side, since we utilize the query w/ 4.12+ kernels to generate the mask, but could pass the mask itself in. I\u0027ll take a pass at it.",
      "parentUuid": "722300ed_55797a80",
      "range": {
        "startLine": 299,
        "startChar": 0,
        "endLine": 304,
        "endChar": 0
      },
      "revId": "537837a47e40c8fd497a4c74062095e4f2c2b60c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c3c5826b_3b2de683",
        "filename": "media/codec2/vndk/C2AllocatorBuf.cpp",
        "patchSetId": 8
      },
      "lineNbr": 304,
      "author": {
        "id": 1010110
      },
      "writtenOn": "2020-09-03T05:29:32Z",
      "side": 1,
      "message": "Ok. I\u0027ve taken a pass at addressing these two issues, which depend on the two fixes here:\n  https://android-review.googlesource.com/c/platform/system/memory/libdmabufheap/+/1418856\n\nStill have to handle the config mapper bits, but this should pipe things through properly.",
      "parentUuid": "6214a9bc_9ebb5d32",
      "range": {
        "startLine": 299,
        "startChar": 0,
        "endLine": 304,
        "endChar": 0
      },
      "revId": "537837a47e40c8fd497a4c74062095e4f2c2b60c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "43b71360_4699a82c",
        "filename": "media/codec2/vndk/C2AllocatorBuf.cpp",
        "patchSetId": 8
      },
      "lineNbr": 338,
      "author": {
        "id": 1157738
      },
      "writtenOn": "2020-07-29T21:48:19Z",
      "side": 1,
      "message": "when would this be the case? I think mInit is set to C2_OK in the constructor and is never reset.",
      "range": {
        "startLine": 338,
        "startChar": 6,
        "endLine": 338,
        "endChar": 20
      },
      "revId": "537837a47e40c8fd497a4c74062095e4f2c2b60c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "43426551_a953b66c",
        "filename": "media/codec2/vndk/C2AllocatorBuf.cpp",
        "patchSetId": 8
      },
      "lineNbr": 338,
      "author": {
        "id": 1021605
      },
      "writtenOn": "2020-08-11T22:38:19Z",
      "side": 1,
      "message": "We use this pattern in all of our allocators, as there could be a specialization of C2AllocatorBuf where the constructor does not result in mInit set to C2_OK, but still use this method.",
      "parentUuid": "43b71360_4699a82c",
      "range": {
        "startLine": 338,
        "startChar": 6,
        "endLine": 338,
        "endChar": 20
      },
      "revId": "537837a47e40c8fd497a4c74062095e4f2c2b60c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "803f8a32_f246b078",
        "filename": "media/codec2/vndk/C2AllocatorBuf.cpp",
        "patchSetId": 8
      },
      "lineNbr": 338,
      "author": {
        "id": 1010110
      },
      "writtenOn": "2020-09-03T02:36:23Z",
      "side": 1,
      "message": "I\u0027m happy to drop this, but from Lajos\u0027 feedback, I\u0027m leaving it in for now.",
      "parentUuid": "43b71360_4699a82c",
      "range": {
        "startLine": 338,
        "startChar": 6,
        "endLine": 338,
        "endChar": 20
      },
      "revId": "537837a47e40c8fd497a4c74062095e4f2c2b60c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e0b5ca85_3a3baf6d",
        "filename": "media/codec2/vndk/C2AllocatorBuf.cpp",
        "patchSetId": 8
      },
      "lineNbr": 356,
      "author": {
        "id": 1157738
      },
      "writtenOn": "2020-07-29T21:48:19Z",
      "side": 1,
      "message": "ditto",
      "range": {
        "startLine": 356,
        "startChar": 2,
        "endLine": 356,
        "endChar": 23
      },
      "revId": "537837a47e40c8fd497a4c74062095e4f2c2b60c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "30860123_7ec45050",
        "filename": "media/codec2/vndk/C2AllocatorBuf.cpp",
        "patchSetId": 8
      },
      "lineNbr": 356,
      "author": {
        "id": 1021605
      },
      "writtenOn": "2020-08-11T22:38:19Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "e0b5ca85_3a3baf6d",
      "range": {
        "startLine": 356,
        "startChar": 2,
        "endLine": 356,
        "endChar": 23
      },
      "revId": "537837a47e40c8fd497a4c74062095e4f2c2b60c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7ce2ebb4_a948f161",
        "filename": "media/codec2/vndk/include/C2AllocatorBuf.h",
        "patchSetId": 8
      },
      "lineNbr": 79,
      "author": {
        "id": 1157738
      },
      "writtenOn": "2020-07-29T21:48:19Z",
      "side": 1,
      "message": "This name is quite confusing IMO. Maybe mInitStatus?",
      "range": {
        "startLine": 79,
        "startChar": 14,
        "endLine": 79,
        "endChar": 19
      },
      "revId": "537837a47e40c8fd497a4c74062095e4f2c2b60c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    }
  ]
}