{
  "comments": [
    {
      "key": {
        "uuid": "0670aa87_f44018a3",
        "filename": "media/mtp/AsyncIO.cpp",
        "patchSetId": 8
      },
      "lineNbr": 17,
      "author": {
        "id": 1091002
      },
      "writtenOn": "2016-11-02T09:24:12Z",
      "side": 1,
      "message": "Sorry for asking this in last minute, but can we add unit tests for AsyncIO?\nhttps://g3doc.corp.google.com/wireless/android/test_tools/g3doc/apct/development/native.md?cl\u003dhead",
      "revId": "0f39e906d1f2574a1b9414032fa835fa4ec9a6dc",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "86b57a46_173e53d1",
        "filename": "media/mtp/AsyncIO.cpp",
        "patchSetId": 8
      },
      "lineNbr": 17,
      "author": {
        "id": 1113594
      },
      "writtenOn": "2016-11-02T21:27:30Z",
      "side": 1,
      "message": "I\u0027ll start working on that",
      "parentUuid": "0670aa87_f44018a3",
      "revId": "0f39e906d1f2574a1b9414032fa835fa4ec9a6dc",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0670aa87_344c50e3",
        "filename": "media/mtp/AsyncIO.cpp",
        "patchSetId": 8
      },
      "lineNbr": 99,
      "author": {
        "id": 1091002
      },
      "writtenOn": "2016-11-02T09:24:12Z",
      "side": 1,
      "message": "I think it\u0027s unclear who should free the buffer.\nwrite_pool_func frees\u0027s the buffer though aio_write does not.",
      "revId": "0f39e906d1f2574a1b9414032fa835fa4ec9a6dc",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "86b57a46_b77307c9",
        "filename": "media/mtp/AsyncIO.cpp",
        "patchSetId": 8
      },
      "lineNbr": 99,
      "author": {
        "id": 1113594
      },
      "writtenOn": "2016-11-02T21:27:30Z",
      "side": 1,
      "message": "aio_write allows the caller to manage the buffer which avoids unnecessary allocs. With the pool, the caller doesn\u0027t know when the buffer is done being used so the caller can\u0027t reuse buffers or even know when to free them, so it is easiest to free them immediately.",
      "parentUuid": "0670aa87_344c50e3",
      "revId": "0f39e906d1f2574a1b9414032fa835fa4ec9a6dc",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2b7f379a_f5e3781e",
        "filename": "media/mtp/AsyncIO.cpp",
        "patchSetId": 8
      },
      "lineNbr": 99,
      "author": {
        "id": 1091002
      },
      "writtenOn": "2016-11-07T05:10:27Z",
      "side": 1,
      "message": "Adding comments to the header file may help to let users of the class know about that. Also how about adding new field aio_pool_buf that is std::unique_ptr or std::vector? Currently it\u0027s a bit easy to miss the difference between aio_write and aio_pool_write.",
      "parentUuid": "86b57a46_b77307c9",
      "revId": "0f39e906d1f2574a1b9414032fa835fa4ec9a6dc",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d0bc8cd0_2290109f",
        "filename": "media/mtp/AsyncIO.cpp",
        "patchSetId": 8
      },
      "lineNbr": 99,
      "author": {
        "id": 1113594
      },
      "writtenOn": "2016-11-17T22:27:34Z",
      "side": 1,
      "message": "What do you mean by the new field? Do you mean to replace the current argument or add a new one, and what would the field be used for?",
      "parentUuid": "2b7f379a_f5e3781e",
      "revId": "0f39e906d1f2574a1b9414032fa835fa4ec9a6dc",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "707a00f8_c89f6f3a",
        "filename": "media/mtp/AsyncIO.cpp",
        "patchSetId": 8
      },
      "lineNbr": 99,
      "author": {
        "id": 1091002
      },
      "writtenOn": "2016-11-18T02:29:39Z",
      "side": 1,
      "message": "I meant adding new unique_ptr\u003cchar[]\u003e aio_pool_buf to aiocb as well as void* aio_buf.\n\nMy concern is it\u0027s unclear if aio_buf has owner ship of memory region. Actually it depends on the function the client code invokes. In this situation, the client code can wrongly use the memory after free, or miss releasing the memory. The bug is difficult to find.\n\nThe purpose of adding new aio_pool_buf is explicitly telling the client code that write_pool function takes the ownership of the memory while write function using aio_buf does not take the ownership of memory. It also easy to find the bug when the client code uses the wrong buffer.",
      "parentUuid": "d0bc8cd0_2290109f",
      "revId": "0f39e906d1f2574a1b9414032fa835fa4ec9a6dc",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2dfd8f27_6198f056",
        "filename": "media/mtp/AsyncIO.cpp",
        "patchSetId": 8
      },
      "lineNbr": 99,
      "author": {
        "id": 1113594
      },
      "writtenOn": "2016-11-23T20:13:21Z",
      "side": 1,
      "message": "That makes sense, thanks",
      "parentUuid": "707a00f8_c89f6f3a",
      "revId": "0f39e906d1f2574a1b9414032fa835fa4ec9a6dc",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0670aa87_14367446",
        "filename": "media/mtp/MtpFfsHandle.cpp",
        "patchSetId": 8
      },
      "lineNbr": 59,
      "author": {
        "id": 1091002
      },
      "writtenOn": "2016-11-02T09:24:12Z",
      "side": 1,
      "message": "Sorry for asking this in last minute, but can we add unit tests for MtpFfsHandle?\nhttps://g3doc.corp.google.com/wireless/android/test_tools/g3doc/apct/development/native.md?cl\u003dhead",
      "revId": "0f39e906d1f2574a1b9414032fa835fa4ec9a6dc",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "86b57a46_3760b7ea",
        "filename": "media/mtp/MtpFfsHandle.cpp",
        "patchSetId": 8
      },
      "lineNbr": 59,
      "author": {
        "id": 1113594
      },
      "writtenOn": "2016-11-02T21:27:30Z",
      "side": 1,
      "message": "I will start working on them",
      "parentUuid": "0670aa87_14367446",
      "revId": "0f39e906d1f2574a1b9414032fa835fa4ec9a6dc",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "30288869_092817b0",
        "filename": "media/mtp/MtpFfsHandle.cpp",
        "patchSetId": 8
      },
      "lineNbr": 59,
      "author": {
        "id": 1113594
      },
      "writtenOn": "2016-11-30T01:43:53Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "86b57a46_3760b7ea",
      "revId": "0f39e906d1f2574a1b9414032fa835fa4ec9a6dc",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}