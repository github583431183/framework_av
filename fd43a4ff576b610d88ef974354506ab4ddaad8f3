{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "7078976d_e4f11434",
        "filename": "media/libmediaplayerservice/nuplayer/NuPlayerRenderer.cpp",
        "patchSetId": 4
      },
      "lineNbr": 1687,
      "author": {
        "id": 1643016
      },
      "writtenOn": "2023-01-13T09:12:30Z",
      "side": 1,
      "message": "I can see how this makes sense IF there is still a postDrainVideoQueue call pending that needs the current anchor time. How do we know that though? I couldn\u0027t find an obvious code path that makes sure that there is always a postDrainVideoQueue pending at this point. Could you explain a bit more why this change is safe?",
      "range": {
        "startLine": 1687,
        "startChar": 11,
        "endLine": 1687,
        "endChar": 30
      },
      "revId": "fd43a4ff576b610d88ef974354506ab4ddaad8f3",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4a783bb3_8e0bdf97",
        "filename": "media/libmediaplayerservice/nuplayer/NuPlayerRenderer.cpp",
        "patchSetId": 4
      },
      "lineNbr": 1687,
      "author": {
        "id": 1941767
      },
      "writtenOn": "2023-01-24T18:13:51Z",
      "side": 1,
      "message": "In NuPlayerRenderer, postdrainvideoqueue is called from kWhatDrainVideoQueue. Further in postdrainvideoqueue the msg for kwhatdrainvideoqueue is again scheduled to be posted. thus at any given point postdrainvideoqueue may be pending to posted or getting handled.",
      "parentUuid": "7078976d_e4f11434",
      "range": {
        "startLine": 1687,
        "startChar": 11,
        "endLine": 1687,
        "endChar": 30
      },
      "revId": "fd43a4ff576b610d88ef974354506ab4ddaad8f3",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b05252e9_469a275b",
        "filename": "media/libmediaplayerservice/nuplayer/NuPlayerRenderer.cpp",
        "patchSetId": 4
      },
      "lineNbr": 1687,
      "author": {
        "id": 1941767
      },
      "writtenOn": "2023-01-24T18:16:56Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "4a783bb3_8e0bdf97",
      "range": {
        "startLine": 1687,
        "startChar": 11,
        "endLine": 1687,
        "endChar": 30
      },
      "revId": "fd43a4ff576b610d88ef974354506ab4ddaad8f3",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1816aa88_8a083316",
        "filename": "media/libmediaplayerservice/nuplayer/NuPlayerRenderer.cpp",
        "patchSetId": 4
      },
      "lineNbr": 1687,
      "author": {
        "id": 1643016
      },
      "writtenOn": "2023-01-26T08:53:42Z",
      "side": 1,
      "message": "Thanks, I see what you mean. It\u0027s still not fully clear that this is always guaranteed because the logic in kWhatDrainVideoQueue/postDrainVideoQueue has multiple exit points that don\u0027t schedule a new kWhatDrainVideoQueue message.\n\nIt seems you could check mDrainVideoQueuePending to verify that a message is pending? If you add this to the if condition on L1685, it becomes clear that the change is safe.",
      "parentUuid": "b05252e9_469a275b",
      "range": {
        "startLine": 1687,
        "startChar": 11,
        "endLine": 1687,
        "endChar": 30
      },
      "revId": "fd43a4ff576b610d88ef974354506ab4ddaad8f3",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "3d59c837_5d812e7e",
        "filename": "media/libmediaplayerservice/nuplayer/NuPlayerRenderer.cpp",
        "patchSetId": 4
      },
      "lineNbr": 1687,
      "author": {
        "id": 1981492
      },
      "writtenOn": "2023-01-30T08:16:23Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "1816aa88_8a083316",
      "range": {
        "startLine": 1687,
        "startChar": 11,
        "endLine": 1687,
        "endChar": 30
      },
      "revId": "fd43a4ff576b610d88ef974354506ab4ddaad8f3",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a3a1e22e_d0f93d2c",
        "filename": "media/libmediaplayerservice/nuplayer/NuPlayerRenderer.cpp",
        "patchSetId": 4
      },
      "lineNbr": 1687,
      "author": {
        "id": 1643016
      },
      "writtenOn": "2023-01-30T10:10:12Z",
      "side": 1,
      "message": "The changes you\u0027ve done since my last comment don\u0027t necessarily address the issue. In fact, it feels less safe to change mHasVideo because it\u0027s used in many places and can have unintended side effects. Wouldn\u0027t it work it add mDrainVideoQueuePending to the condition on L1688 as suggested above?",
      "parentUuid": "3d59c837_5d812e7e",
      "range": {
        "startLine": 1687,
        "startChar": 11,
        "endLine": 1687,
        "endChar": 30
      },
      "revId": "fd43a4ff576b610d88ef974354506ab4ddaad8f3",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "bc505d52_85c89933",
        "filename": "media/libmediaplayerservice/nuplayer/NuPlayerRenderer.cpp",
        "patchSetId": 4
      },
      "lineNbr": 1687,
      "author": {
        "id": 1970370
      },
      "writtenOn": "2023-01-31T02:51:29Z",
      "side": 1,
      "message": "Thanks Toni, I think your suggestion to use mDrainVideoQueuePending makes sense.\nBut do you think it is fine to clear mHasVideo flag as well? \nit is only used in 1. to init mVideoScheduler if it is null 2. notify video to clear anchor. Looks like both are safe. And mHasAudio is cleared in the same position, this is logically consistent",
      "parentUuid": "a3a1e22e_d0f93d2c",
      "range": {
        "startLine": 1687,
        "startChar": 11,
        "endLine": 1687,
        "endChar": 30
      },
      "revId": "fd43a4ff576b610d88ef974354506ab4ddaad8f3",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f0eca27a_0ddb534b",
        "filename": "media/libmediaplayerservice/nuplayer/NuPlayerRenderer.cpp",
        "patchSetId": 4
      },
      "lineNbr": 1687,
      "author": {
        "id": 1643016
      },
      "writtenOn": "2023-01-31T09:33:22Z",
      "side": 1,
      "message": "Yes, thanks for pointing this out. It makes sense to reset mHasVideo to false as suggested. \n\nHowever, I\u0027d still prefer to check for mDrainVideoQueuePending in addition because postDrainVideoQueue isn\u0027t always guaranteed to be handled with a pending message. For example, if someone calls onPause(), any further handling of  postDrainVideoQueue is stopped even if mHasVideo is true.",
      "parentUuid": "bc505d52_85c89933",
      "range": {
        "startLine": 1687,
        "startChar": 11,
        "endLine": 1687,
        "endChar": 30
      },
      "revId": "fd43a4ff576b610d88ef974354506ab4ddaad8f3",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "33be7a06_e69bc53c",
        "filename": "media/libmediaplayerservice/nuplayer/NuPlayerRenderer.cpp",
        "patchSetId": 4
      },
      "lineNbr": 1687,
      "author": {
        "id": 1981492
      },
      "writtenOn": "2023-02-01T06:29:09Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "f0eca27a_0ddb534b",
      "range": {
        "startLine": 1687,
        "startChar": 11,
        "endLine": 1687,
        "endChar": 30
      },
      "revId": "fd43a4ff576b610d88ef974354506ab4ddaad8f3",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}