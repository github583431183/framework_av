{
  "comments": [
    {
      "key": {
        "uuid": "84b7f49e_ab50a0ab",
        "filename": "media/libstagefright/MPEG4Extractor.cpp",
        "patchSetId": 1
      },
      "lineNbr": 1571,
      "author": {
        "id": 1021605
      },
      "writtenOn": "2018-06-01T16:27:11Z",
      "side": 1,
      "message": "can we use some endianness constants here instead of string?",
      "range": {
        "startLine": 1571,
        "startChar": 53,
        "endLine": 1571,
        "endChar": 69
      },
      "revId": "3e7475e62219143112b9d49c5f3e3dbe2332b691",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2a96bc50_7d66bdd1",
        "filename": "media/libstagefright/MPEG4Extractor.cpp",
        "patchSetId": 1
      },
      "lineNbr": 4832,
      "author": {
        "id": 1021605
      },
      "writtenOn": "2018-06-01T16:27:11Z",
      "side": 1,
      "message": "single space",
      "range": {
        "startLine": 4832,
        "startChar": 32,
        "endLine": 4832,
        "endChar": 33
      },
      "revId": "3e7475e62219143112b9d49c5f3e3dbe2332b691",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a22eb428_6e4a407a",
        "filename": "media/libstagefright/MPEG4Extractor.cpp",
        "patchSetId": 1
      },
      "lineNbr": 4850,
      "author": {
        "id": 1021605
      },
      "writtenOn": "2018-06-01T16:27:11Z",
      "side": 1,
      "message": "space after //",
      "range": {
        "startLine": 4850,
        "startChar": 20,
        "endLine": 4850,
        "endChar": 22
      },
      "revId": "3e7475e62219143112b9d49c5f3e3dbe2332b691",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "52865aa2_d37d50ad",
        "filename": "media/libstagefright/MPEG4Extractor.cpp",
        "patchSetId": 1
      },
      "lineNbr": 4866,
      "author": {
        "id": 1021605
      },
      "writtenOn": "2018-06-01T16:27:11Z",
      "side": 1,
      "message": "does this assume little endian CPU?",
      "range": {
        "startLine": 4866,
        "startChar": 20,
        "endLine": 4866,
        "endChar": 39
      },
      "revId": "3e7475e62219143112b9d49c5f3e3dbe2332b691",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5ac770c1_5e67b8d9",
        "filename": "media/libstagefright/MPEG4Extractor.cpp",
        "patchSetId": 1
      },
      "lineNbr": 4881,
      "author": {
        "id": 1021605
      },
      "writtenOn": "2018-06-01T16:27:11Z",
      "side": 1,
      "message": "why is this only done for little endian?",
      "range": {
        "startLine": 4877,
        "startChar": 16,
        "endLine": 4881,
        "endChar": 60
      },
      "revId": "3e7475e62219143112b9d49c5f3e3dbe2332b691",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "44e73298_92abf905",
        "filename": "media/libstagefright/MPEG4Extractor.cpp",
        "patchSetId": 1
      },
      "lineNbr": 4888,
      "author": {
        "id": 1021605
      },
      "writtenOn": "2018-06-01T16:27:11Z",
      "side": 1,
      "message": "why only little endian can mark sync sample?",
      "range": {
        "startLine": 4888,
        "startChar": 20,
        "endLine": 4888,
        "endChar": 32
      },
      "revId": "3e7475e62219143112b9d49c5f3e3dbe2332b691",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1f9d4294_15862b12",
        "filename": "media/libstagefright/include/SampleIterator.h",
        "patchSetId": 1
      },
      "lineNbr": 41,
      "author": {
        "id": 1021605
      },
      "writtenOn": "2018-06-01T16:27:11Z",
      "side": 1,
      "message": "spacing: add space around operators",
      "range": {
        "startLine": 41,
        "startChar": 84,
        "endLine": 41,
        "endChar": 85
      },
      "revId": "3e7475e62219143112b9d49c5f3e3dbe2332b691",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a882f6e9_e6a94ba4",
        "filename": "media/libstagefright/include/SampleTable.h",
        "patchSetId": 1
      },
      "lineNbr": 72,
      "author": {
        "id": 1021605
      },
      "writtenOn": "2018-06-01T16:27:11Z",
      "side": 1,
      "message": "but what does it do? okay, likely it gets the index of the last sample in the chunk...\n\nperhaps phrase it as: // call only after getMetaDataForSample has been called successfully",
      "range": {
        "startLine": 72,
        "startChar": 7,
        "endLine": 72,
        "endChar": 32
      },
      "revId": "3e7475e62219143112b9d49c5f3e3dbe2332b691",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4d52a6aa_4ec5119a",
        "filename": "media/libstagefright/include/media/stagefright/MetaData.h",
        "patchSetId": 1
      },
      "lineNbr": 222,
      "author": {
        "id": 1021605
      },
      "writtenOn": "2018-06-01T16:27:11Z",
      "side": 1,
      "message": "please align this and add data type in comments - just as all keys above",
      "range": {
        "startLine": 222,
        "startChar": 23,
        "endLine": 222,
        "endChar": 24
      },
      "revId": "3e7475e62219143112b9d49c5f3e3dbe2332b691",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    }
  ]
}