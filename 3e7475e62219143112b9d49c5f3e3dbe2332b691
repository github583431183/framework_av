{
  "comments": [
    {
      "key": {
        "uuid": "15b62578_120ac13d",
        "filename": "media/libstagefright/MPEG4Extractor.cpp",
        "patchSetId": 1
      },
      "lineNbr": 67,
      "author": {
        "id": 1001525
      },
      "writtenOn": "2018-06-01T22:23:43Z",
      "side": 1,
      "message": "Is this in bytes, samples, something else?",
      "range": {
        "startLine": 67,
        "startChar": 0,
        "endLine": 67,
        "endChar": 45
      },
      "revId": "3e7475e62219143112b9d49c5f3e3dbe2332b691",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c93fc5d1_8f9efb8f",
        "filename": "media/libstagefright/MPEG4Extractor.cpp",
        "patchSetId": 1
      },
      "lineNbr": 1569,
      "author": {
        "id": 1001525
      },
      "writtenOn": "2018-06-01T22:23:43Z",
      "side": 1,
      "message": "so for pcm data the sample_size field indicates the number of bits, not the usual number of bytes?",
      "range": {
        "startLine": 1569,
        "startChar": 0,
        "endLine": 1569,
        "endChar": 79
      },
      "revId": "3e7475e62219143112b9d49c5f3e3dbe2332b691",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "75bea513_87f85de7",
        "filename": "media/libstagefright/MPEG4Extractor.cpp",
        "patchSetId": 1
      },
      "lineNbr": 1570,
      "author": {
        "id": 1001525
      },
      "writtenOn": "2018-06-01T22:23:43Z",
      "side": 1,
      "message": "this check seems unnecessary, since it will always be true (the only way to get here is if chunk_type is \u0027twos\u0027 so the check on line 1568 passes)",
      "range": {
        "startLine": 1570,
        "startChar": 0,
        "endLine": 1570,
        "endChar": 67
      },
      "revId": "3e7475e62219143112b9d49c5f3e3dbe2332b691",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "84b7f49e_ab50a0ab",
        "filename": "media/libstagefright/MPEG4Extractor.cpp",
        "patchSetId": 1
      },
      "lineNbr": 1571,
      "author": {
        "id": 1021605
      },
      "writtenOn": "2018-06-01T16:27:11Z",
      "side": 1,
      "message": "can we use some endianness constants here instead of string?",
      "range": {
        "startLine": 1571,
        "startChar": 53,
        "endLine": 1571,
        "endChar": 69
      },
      "revId": "3e7475e62219143112b9d49c5f3e3dbe2332b691",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2a96bc50_7d66bdd1",
        "filename": "media/libstagefright/MPEG4Extractor.cpp",
        "patchSetId": 1
      },
      "lineNbr": 4832,
      "author": {
        "id": 1021605
      },
      "writtenOn": "2018-06-01T16:27:11Z",
      "side": 1,
      "message": "single space",
      "range": {
        "startLine": 4832,
        "startChar": 32,
        "endLine": 4832,
        "endChar": 33
      },
      "revId": "3e7475e62219143112b9d49c5f3e3dbe2332b691",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a22eb428_6e4a407a",
        "filename": "media/libstagefright/MPEG4Extractor.cpp",
        "patchSetId": 1
      },
      "lineNbr": 4850,
      "author": {
        "id": 1021605
      },
      "writtenOn": "2018-06-01T16:27:11Z",
      "side": 1,
      "message": "space after //",
      "range": {
        "startLine": 4850,
        "startChar": 20,
        "endLine": 4850,
        "endChar": 22
      },
      "revId": "3e7475e62219143112b9d49c5f3e3dbe2332b691",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7d323ec5_7afb3e2c",
        "filename": "media/libstagefright/MPEG4Extractor.cpp",
        "patchSetId": 1
      },
      "lineNbr": 4859,
      "author": {
        "id": 1001525
      },
      "writtenOn": "2018-06-01T22:23:43Z",
      "side": 1,
      "message": "I don\u0027t understand this code. It seems like its purpose is to support both 16 and 32 bit samples, by truncating 32 bit samples to 16? But then shouldn\u0027t the loop be something like:\n\nfor (size_t j \u003d 0; j \u003c samplesToRead; j++) {\n    dstData[j] \u003d ntohs(srcData[j * multiplier]);\n}",
      "range": {
        "startLine": 4851,
        "startChar": 0,
        "endLine": 4859,
        "endChar": 21
      },
      "revId": "3e7475e62219143112b9d49c5f3e3dbe2332b691",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "52865aa2_d37d50ad",
        "filename": "media/libstagefright/MPEG4Extractor.cpp",
        "patchSetId": 1
      },
      "lineNbr": 4866,
      "author": {
        "id": 1021605
      },
      "writtenOn": "2018-06-01T16:27:11Z",
      "side": 1,
      "message": "does this assume little endian CPU?",
      "range": {
        "startLine": 4866,
        "startChar": 20,
        "endLine": 4866,
        "endChar": 39
      },
      "revId": "3e7475e62219143112b9d49c5f3e3dbe2332b691",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a5d9d29c_05c4d7ec",
        "filename": "media/libstagefright/MPEG4Extractor.cpp",
        "patchSetId": 1
      },
      "lineNbr": 4866,
      "author": {
        "id": 1001525
      },
      "writtenOn": "2018-06-01T22:23:43Z",
      "side": 1,
      "message": "This (and the lines you commented on just below) are all in the \"else\" case for \"not pcm\". The endianness block ended on line 4860 above.",
      "parentUuid": "52865aa2_d37d50ad",
      "range": {
        "startLine": 4866,
        "startChar": 20,
        "endLine": 4866,
        "endChar": 39
      },
      "revId": "3e7475e62219143112b9d49c5f3e3dbe2332b691",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "389dd39d_a6e318cf",
        "filename": "media/libstagefright/MPEG4Extractor.cpp",
        "patchSetId": 1
      },
      "lineNbr": 4866,
      "author": {
        "id": 1021605
      },
      "writtenOn": "2018-06-01T22:32:46Z",
      "side": 1,
      "message": "Thanks, Marco, for pointing this out! That\u0027s correct - this is the old code unchanged, so never mind my comments below.",
      "parentUuid": "a5d9d29c_05c4d7ec",
      "range": {
        "startLine": 4866,
        "startChar": 20,
        "endLine": 4866,
        "endChar": 39
      },
      "revId": "3e7475e62219143112b9d49c5f3e3dbe2332b691",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5ac770c1_5e67b8d9",
        "filename": "media/libstagefright/MPEG4Extractor.cpp",
        "patchSetId": 1
      },
      "lineNbr": 4881,
      "author": {
        "id": 1021605
      },
      "writtenOn": "2018-06-01T16:27:11Z",
      "side": 1,
      "message": "why is this only done for little endian?",
      "range": {
        "startLine": 4877,
        "startChar": 16,
        "endLine": 4881,
        "endChar": 60
      },
      "revId": "3e7475e62219143112b9d49c5f3e3dbe2332b691",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "570aa371_543dc4cd",
        "filename": "media/libstagefright/MPEG4Extractor.cpp",
        "patchSetId": 1
      },
      "lineNbr": 4881,
      "author": {
        "id": 1021605
      },
      "writtenOn": "2018-06-01T22:32:46Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "5ac770c1_5e67b8d9",
      "range": {
        "startLine": 4877,
        "startChar": 16,
        "endLine": 4881,
        "endChar": 60
      },
      "revId": "3e7475e62219143112b9d49c5f3e3dbe2332b691",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "44e73298_92abf905",
        "filename": "media/libstagefright/MPEG4Extractor.cpp",
        "patchSetId": 1
      },
      "lineNbr": 4888,
      "author": {
        "id": 1021605
      },
      "writtenOn": "2018-06-01T16:27:11Z",
      "side": 1,
      "message": "why only little endian can mark sync sample?",
      "range": {
        "startLine": 4888,
        "startChar": 20,
        "endLine": 4888,
        "endChar": 32
      },
      "revId": "3e7475e62219143112b9d49c5f3e3dbe2332b691",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "74b8fa31_037b7d3f",
        "filename": "media/libstagefright/MPEG4Extractor.cpp",
        "patchSetId": 1
      },
      "lineNbr": 4888,
      "author": {
        "id": 1021605
      },
      "writtenOn": "2018-06-01T22:32:46Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "44e73298_92abf905",
      "range": {
        "startLine": 4888,
        "startChar": 20,
        "endLine": 4888,
        "endChar": 32
      },
      "revId": "3e7475e62219143112b9d49c5f3e3dbe2332b691",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1f9d4294_15862b12",
        "filename": "media/libstagefright/include/SampleIterator.h",
        "patchSetId": 1
      },
      "lineNbr": 41,
      "author": {
        "id": 1021605
      },
      "writtenOn": "2018-06-01T16:27:11Z",
      "side": 1,
      "message": "spacing: add space around operators",
      "range": {
        "startLine": 41,
        "startChar": 84,
        "endLine": 41,
        "endChar": 85
      },
      "revId": "3e7475e62219143112b9d49c5f3e3dbe2332b691",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a882f6e9_e6a94ba4",
        "filename": "media/libstagefright/include/SampleTable.h",
        "patchSetId": 1
      },
      "lineNbr": 72,
      "author": {
        "id": 1021605
      },
      "writtenOn": "2018-06-01T16:27:11Z",
      "side": 1,
      "message": "but what does it do? okay, likely it gets the index of the last sample in the chunk...\n\nperhaps phrase it as: // call only after getMetaDataForSample has been called successfully",
      "range": {
        "startLine": 72,
        "startChar": 7,
        "endLine": 72,
        "endChar": 32
      },
      "revId": "3e7475e62219143112b9d49c5f3e3dbe2332b691",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4d52a6aa_4ec5119a",
        "filename": "media/libstagefright/include/media/stagefright/MetaData.h",
        "patchSetId": 1
      },
      "lineNbr": 222,
      "author": {
        "id": 1021605
      },
      "writtenOn": "2018-06-01T16:27:11Z",
      "side": 1,
      "message": "please align this and add data type in comments - just as all keys above",
      "range": {
        "startLine": 222,
        "startChar": 23,
        "endLine": 222,
        "endChar": 24
      },
      "revId": "3e7475e62219143112b9d49c5f3e3dbe2332b691",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    }
  ]
}