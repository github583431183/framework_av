{
  "comments": [
    {
      "key": {
        "uuid": "15b62578_120ac13d",
        "filename": "media/libstagefright/MPEG4Extractor.cpp",
        "patchSetId": 1
      },
      "lineNbr": 67,
      "author": {
        "id": 1001525
      },
      "writtenOn": "2018-06-01T22:23:43Z",
      "side": 1,
      "message": "Is this in bytes, samples, something else?",
      "range": {
        "startLine": 67,
        "startChar": 0,
        "endLine": 67,
        "endChar": 45
      },
      "revId": "3e7475e62219143112b9d49c5f3e3dbe2332b691",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c93fc5d1_8f9efb8f",
        "filename": "media/libstagefright/MPEG4Extractor.cpp",
        "patchSetId": 1
      },
      "lineNbr": 1569,
      "author": {
        "id": 1001525
      },
      "writtenOn": "2018-06-01T22:23:43Z",
      "side": 1,
      "message": "so for pcm data the sample_size field indicates the number of bits, not the usual number of bytes?",
      "range": {
        "startLine": 1569,
        "startChar": 0,
        "endLine": 1569,
        "endChar": 79
      },
      "revId": "3e7475e62219143112b9d49c5f3e3dbe2332b691",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "993037f3_6e665363",
        "filename": "media/libstagefright/MPEG4Extractor.cpp",
        "patchSetId": 1
      },
      "lineNbr": 1569,
      "author": {
        "id": 1243029
      },
      "writtenOn": "2018-06-04T06:49:28Z",
      "side": 1,
      "message": "Yes sample_size here indicates the number of bits then converts to bytes in L3944.",
      "parentUuid": "c93fc5d1_8f9efb8f",
      "range": {
        "startLine": 1569,
        "startChar": 0,
        "endLine": 1569,
        "endChar": 79
      },
      "revId": "3e7475e62219143112b9d49c5f3e3dbe2332b691",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "75bea513_87f85de7",
        "filename": "media/libstagefright/MPEG4Extractor.cpp",
        "patchSetId": 1
      },
      "lineNbr": 1570,
      "author": {
        "id": 1001525
      },
      "writtenOn": "2018-06-01T22:23:43Z",
      "side": 1,
      "message": "this check seems unnecessary, since it will always be true (the only way to get here is if chunk_type is \u0027twos\u0027 so the check on line 1568 passes)",
      "range": {
        "startLine": 1570,
        "startChar": 0,
        "endLine": 1570,
        "endChar": 67
      },
      "revId": "3e7475e62219143112b9d49c5f3e3dbe2332b691",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "311e76a5_d0041c85",
        "filename": "media/libstagefright/MPEG4Extractor.cpp",
        "patchSetId": 1
      },
      "lineNbr": 1570,
      "author": {
        "id": 1243029
      },
      "writtenOn": "2018-06-04T06:49:28Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "75bea513_87f85de7",
      "range": {
        "startLine": 1570,
        "startChar": 0,
        "endLine": 1570,
        "endChar": 67
      },
      "revId": "3e7475e62219143112b9d49c5f3e3dbe2332b691",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "84b7f49e_ab50a0ab",
        "filename": "media/libstagefright/MPEG4Extractor.cpp",
        "patchSetId": 1
      },
      "lineNbr": 1571,
      "author": {
        "id": 1021605
      },
      "writtenOn": "2018-06-01T16:27:11Z",
      "side": 1,
      "message": "can we use some endianness constants here instead of string?",
      "range": {
        "startLine": 1571,
        "startChar": 53,
        "endLine": 1571,
        "endChar": 69
      },
      "revId": "3e7475e62219143112b9d49c5f3e3dbe2332b691",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ac58b095_b3fd849e",
        "filename": "media/libstagefright/MPEG4Extractor.cpp",
        "patchSetId": 1
      },
      "lineNbr": 1571,
      "author": {
        "id": 1243029
      },
      "writtenOn": "2018-06-04T06:49:28Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "84b7f49e_ab50a0ab",
      "range": {
        "startLine": 1571,
        "startChar": 53,
        "endLine": 1571,
        "endChar": 69
      },
      "revId": "3e7475e62219143112b9d49c5f3e3dbe2332b691",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2a96bc50_7d66bdd1",
        "filename": "media/libstagefright/MPEG4Extractor.cpp",
        "patchSetId": 1
      },
      "lineNbr": 4832,
      "author": {
        "id": 1021605
      },
      "writtenOn": "2018-06-01T16:27:11Z",
      "side": 1,
      "message": "single space",
      "range": {
        "startLine": 4832,
        "startChar": 32,
        "endLine": 4832,
        "endChar": 33
      },
      "revId": "3e7475e62219143112b9d49c5f3e3dbe2332b691",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9a91139c_b0f78c53",
        "filename": "media/libstagefright/MPEG4Extractor.cpp",
        "patchSetId": 1
      },
      "lineNbr": 4832,
      "author": {
        "id": 1243029
      },
      "writtenOn": "2018-06-04T06:49:28Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "2a96bc50_7d66bdd1",
      "range": {
        "startLine": 4832,
        "startChar": 32,
        "endLine": 4832,
        "endChar": 33
      },
      "revId": "3e7475e62219143112b9d49c5f3e3dbe2332b691",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a22eb428_6e4a407a",
        "filename": "media/libstagefright/MPEG4Extractor.cpp",
        "patchSetId": 1
      },
      "lineNbr": 4850,
      "author": {
        "id": 1021605
      },
      "writtenOn": "2018-06-01T16:27:11Z",
      "side": 1,
      "message": "space after //",
      "range": {
        "startLine": 4850,
        "startChar": 20,
        "endLine": 4850,
        "endChar": 22
      },
      "revId": "3e7475e62219143112b9d49c5f3e3dbe2332b691",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "562d7d02_25f3b244",
        "filename": "media/libstagefright/MPEG4Extractor.cpp",
        "patchSetId": 1
      },
      "lineNbr": 4850,
      "author": {
        "id": 1243029
      },
      "writtenOn": "2018-06-04T06:49:28Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "a22eb428_6e4a407a",
      "range": {
        "startLine": 4850,
        "startChar": 20,
        "endLine": 4850,
        "endChar": 22
      },
      "revId": "3e7475e62219143112b9d49c5f3e3dbe2332b691",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7d323ec5_7afb3e2c",
        "filename": "media/libstagefright/MPEG4Extractor.cpp",
        "patchSetId": 1
      },
      "lineNbr": 4859,
      "author": {
        "id": 1001525
      },
      "writtenOn": "2018-06-01T22:23:43Z",
      "side": 1,
      "message": "I don\u0027t understand this code. It seems like its purpose is to support both 16 and 32 bit samples, by truncating 32 bit samples to 16? But then shouldn\u0027t the loop be something like:\n\nfor (size_t j \u003d 0; j \u003c samplesToRead; j++) {\n    dstData[j] \u003d ntohs(srcData[j * multiplier]);\n}",
      "range": {
        "startLine": 4851,
        "startChar": 0,
        "endLine": 4859,
        "endChar": 21
      },
      "revId": "3e7475e62219143112b9d49c5f3e3dbe2332b691",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "37dab6b9_cc2649b9",
        "filename": "media/libstagefright/MPEG4Extractor.cpp",
        "patchSetId": 1
      },
      "lineNbr": 4859,
      "author": {
        "id": 1243029
      },
      "writtenOn": "2018-06-04T06:49:28Z",
      "side": 1,
      "message": "Since this is converting endian per 16bit, I believe the current code works properly. Could you elaborate your concern?",
      "parentUuid": "7d323ec5_7afb3e2c",
      "range": {
        "startLine": 4851,
        "startChar": 0,
        "endLine": 4859,
        "endChar": 21
      },
      "revId": "3e7475e62219143112b9d49c5f3e3dbe2332b691",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e42a7277_62109ed1",
        "filename": "media/libstagefright/MPEG4Extractor.cpp",
        "patchSetId": 1
      },
      "lineNbr": 4859,
      "author": {
        "id": 1001525
      },
      "writtenOn": "2018-06-12T18:49:49Z",
      "side": 1,
      "message": "\u0027size\u0027 is the size of a single sample, right? (i.e. 16-bit or 32-bit)\n\u0027srcData\u0027 and \u0027dstData\u0027 both point at a buffer, and let\u0027s say this buffer contains the following bytes:\n{ 0x11, 0x22, 0x33, 0x44, 0x55, 0x66, 0x77, 0x88 }\nor, since srcData and dstData are both uint16_t*, it contains these values:\n{ 0x2211, 0x4433, 0x6655, 0x8877 }\nIf the buffer contains 32-bit samples (size\u003d\u003d4), then this would correspond to two (big-endian) samples, with values 0x11223344 and 0x55667788.\nThe loop will effectively do:\ndstData[0] \u003d ntohs(srcData[0]);\ndstData[1] \u003d ntohs(srcData[1]);\ndstData[2] \u003d ntohs(srcData[2]);\ndstData[3] \u003d ntohs(srcData[3]);\n\nThis means that after endian-conversion, and when interpreted as 16-bit values, the data will be:\n\n{ 0x1122, 0x3344, 0x5566, 0x7788 }\n\nor as bytes:\n\n{ 0x22, 0x11, 0x44, 0x33, 0x66, 0x55, 0x88, 0x77 }\n\nHowever, since these are 32-bit samples, the correct bytes would be:\n\n{ 0x44, 0x33, 0x22, 0x11, 0x88, 0x77, 0x66, 0x55 }\n\nAnd if the intention was to convert from 32-bit to 16-bit at the same time as doing the endianness conversion, then the output bytes should be:\n\n{ 0x22, 0x11, 0x66, 0x55 }, or { 0x1122, 0x5566 } when interpreted as 16 bit values. i.e. the high 16 bits of the two 32 bit samples.\n\nAs written, the loop either provides badly-swapped 32-bit samples, or 16-bit samples interleaved with garbage.\n\nPerhaps I\u0027m just misunderstanding what you\u0027re trying to do here though.",
      "parentUuid": "37dab6b9_cc2649b9",
      "range": {
        "startLine": 4851,
        "startChar": 0,
        "endLine": 4859,
        "endChar": 21
      },
      "revId": "3e7475e62219143112b9d49c5f3e3dbe2332b691",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7e126f26_b4cd0baa",
        "filename": "media/libstagefright/MPEG4Extractor.cpp",
        "patchSetId": 1
      },
      "lineNbr": 4859,
      "author": {
        "id": 1243029
      },
      "writtenOn": "2018-06-13T00:12:31Z",
      "side": 1,
      "message": "This contains both L and R data.\n\nIn case of { 0x11, 0x22, 0x33, 0x44, 0x55, 0x66, 0x77, 0x88 },\n\nIt contains\n\n{ 0x2211(L), 0x4433(R), 0x6655(L), 0x8877(R) }\n\nSo the expected result after endian conversion should be\n\n{ 0x1122(L), 0x3344(R), 0x5566(L), 0x7788(R) }",
      "parentUuid": "e42a7277_62109ed1",
      "range": {
        "startLine": 4851,
        "startChar": 0,
        "endLine": 4859,
        "endChar": 21
      },
      "revId": "3e7475e62219143112b9d49c5f3e3dbe2332b691",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b20836a1_3b96df69",
        "filename": "media/libstagefright/MPEG4Extractor.cpp",
        "patchSetId": 1
      },
      "lineNbr": 4859,
      "author": {
        "id": 1001525
      },
      "writtenOn": "2018-06-13T22:35:36Z",
      "side": 1,
      "message": "Does this code not support 32-bit samples then? I got the impression from the code above (line 1569 and further, and 3938 and further, where it sets and reads kKeyBitsPerSample) that different sample sizes are supported.",
      "parentUuid": "7e126f26_b4cd0baa",
      "range": {
        "startLine": 4851,
        "startChar": 0,
        "endLine": 4859,
        "endChar": 21
      },
      "revId": "3e7475e62219143112b9d49c5f3e3dbe2332b691",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "52865aa2_d37d50ad",
        "filename": "media/libstagefright/MPEG4Extractor.cpp",
        "patchSetId": 1
      },
      "lineNbr": 4866,
      "author": {
        "id": 1021605
      },
      "writtenOn": "2018-06-01T16:27:11Z",
      "side": 1,
      "message": "does this assume little endian CPU?",
      "range": {
        "startLine": 4866,
        "startChar": 20,
        "endLine": 4866,
        "endChar": 39
      },
      "revId": "3e7475e62219143112b9d49c5f3e3dbe2332b691",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a5d9d29c_05c4d7ec",
        "filename": "media/libstagefright/MPEG4Extractor.cpp",
        "patchSetId": 1
      },
      "lineNbr": 4866,
      "author": {
        "id": 1001525
      },
      "writtenOn": "2018-06-01T22:23:43Z",
      "side": 1,
      "message": "This (and the lines you commented on just below) are all in the \"else\" case for \"not pcm\". The endianness block ended on line 4860 above.",
      "parentUuid": "52865aa2_d37d50ad",
      "range": {
        "startLine": 4866,
        "startChar": 20,
        "endLine": 4866,
        "endChar": 39
      },
      "revId": "3e7475e62219143112b9d49c5f3e3dbe2332b691",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "389dd39d_a6e318cf",
        "filename": "media/libstagefright/MPEG4Extractor.cpp",
        "patchSetId": 1
      },
      "lineNbr": 4866,
      "author": {
        "id": 1021605
      },
      "writtenOn": "2018-06-01T22:32:46Z",
      "side": 1,
      "message": "Thanks, Marco, for pointing this out! That\u0027s correct - this is the old code unchanged, so never mind my comments below.",
      "parentUuid": "a5d9d29c_05c4d7ec",
      "range": {
        "startLine": 4866,
        "startChar": 20,
        "endLine": 4866,
        "endChar": 39
      },
      "revId": "3e7475e62219143112b9d49c5f3e3dbe2332b691",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5ac770c1_5e67b8d9",
        "filename": "media/libstagefright/MPEG4Extractor.cpp",
        "patchSetId": 1
      },
      "lineNbr": 4881,
      "author": {
        "id": 1021605
      },
      "writtenOn": "2018-06-01T16:27:11Z",
      "side": 1,
      "message": "why is this only done for little endian?",
      "range": {
        "startLine": 4877,
        "startChar": 16,
        "endLine": 4881,
        "endChar": 60
      },
      "revId": "3e7475e62219143112b9d49c5f3e3dbe2332b691",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "570aa371_543dc4cd",
        "filename": "media/libstagefright/MPEG4Extractor.cpp",
        "patchSetId": 1
      },
      "lineNbr": 4881,
      "author": {
        "id": 1021605
      },
      "writtenOn": "2018-06-01T22:32:46Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "5ac770c1_5e67b8d9",
      "range": {
        "startLine": 4877,
        "startChar": 16,
        "endLine": 4881,
        "endChar": 60
      },
      "revId": "3e7475e62219143112b9d49c5f3e3dbe2332b691",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "44e73298_92abf905",
        "filename": "media/libstagefright/MPEG4Extractor.cpp",
        "patchSetId": 1
      },
      "lineNbr": 4888,
      "author": {
        "id": 1021605
      },
      "writtenOn": "2018-06-01T16:27:11Z",
      "side": 1,
      "message": "why only little endian can mark sync sample?",
      "range": {
        "startLine": 4888,
        "startChar": 20,
        "endLine": 4888,
        "endChar": 32
      },
      "revId": "3e7475e62219143112b9d49c5f3e3dbe2332b691",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "74b8fa31_037b7d3f",
        "filename": "media/libstagefright/MPEG4Extractor.cpp",
        "patchSetId": 1
      },
      "lineNbr": 4888,
      "author": {
        "id": 1021605
      },
      "writtenOn": "2018-06-01T22:32:46Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "44e73298_92abf905",
      "range": {
        "startLine": 4888,
        "startChar": 20,
        "endLine": 4888,
        "endChar": 32
      },
      "revId": "3e7475e62219143112b9d49c5f3e3dbe2332b691",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1f9d4294_15862b12",
        "filename": "media/libstagefright/include/SampleIterator.h",
        "patchSetId": 1
      },
      "lineNbr": 41,
      "author": {
        "id": 1021605
      },
      "writtenOn": "2018-06-01T16:27:11Z",
      "side": 1,
      "message": "spacing: add space around operators",
      "range": {
        "startLine": 41,
        "startChar": 84,
        "endLine": 41,
        "endChar": 85
      },
      "revId": "3e7475e62219143112b9d49c5f3e3dbe2332b691",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b9821a5a_61720027",
        "filename": "media/libstagefright/include/SampleIterator.h",
        "patchSetId": 1
      },
      "lineNbr": 41,
      "author": {
        "id": 1243029
      },
      "writtenOn": "2018-06-04T06:49:28Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "1f9d4294_15862b12",
      "range": {
        "startLine": 41,
        "startChar": 84,
        "endLine": 41,
        "endChar": 85
      },
      "revId": "3e7475e62219143112b9d49c5f3e3dbe2332b691",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a882f6e9_e6a94ba4",
        "filename": "media/libstagefright/include/SampleTable.h",
        "patchSetId": 1
      },
      "lineNbr": 72,
      "author": {
        "id": 1021605
      },
      "writtenOn": "2018-06-01T16:27:11Z",
      "side": 1,
      "message": "but what does it do? okay, likely it gets the index of the last sample in the chunk...\n\nperhaps phrase it as: // call only after getMetaDataForSample has been called successfully",
      "range": {
        "startLine": 72,
        "startChar": 7,
        "endLine": 72,
        "endChar": 32
      },
      "revId": "3e7475e62219143112b9d49c5f3e3dbe2332b691",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b1e8d671_e6864968",
        "filename": "media/libstagefright/include/SampleTable.h",
        "patchSetId": 1
      },
      "lineNbr": 72,
      "author": {
        "id": 1243029
      },
      "writtenOn": "2018-06-04T06:49:28Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "a882f6e9_e6a94ba4",
      "range": {
        "startLine": 72,
        "startChar": 7,
        "endLine": 72,
        "endChar": 32
      },
      "revId": "3e7475e62219143112b9d49c5f3e3dbe2332b691",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4d52a6aa_4ec5119a",
        "filename": "media/libstagefright/include/media/stagefright/MetaData.h",
        "patchSetId": 1
      },
      "lineNbr": 222,
      "author": {
        "id": 1021605
      },
      "writtenOn": "2018-06-01T16:27:11Z",
      "side": 1,
      "message": "please align this and add data type in comments - just as all keys above",
      "range": {
        "startLine": 222,
        "startChar": 23,
        "endLine": 222,
        "endChar": 24
      },
      "revId": "3e7475e62219143112b9d49c5f3e3dbe2332b691",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "13ea0dc2_9b5bec0a",
        "filename": "media/libstagefright/include/media/stagefright/MetaData.h",
        "patchSetId": 1
      },
      "lineNbr": 222,
      "author": {
        "id": 1243029
      },
      "writtenOn": "2018-06-04T06:49:28Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "4d52a6aa_4ec5119a",
      "range": {
        "startLine": 222,
        "startChar": 23,
        "endLine": 222,
        "endChar": 24
      },
      "revId": "3e7475e62219143112b9d49c5f3e3dbe2332b691",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    }
  ]
}