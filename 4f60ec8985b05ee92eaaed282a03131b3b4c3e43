{
  "comments": [
    {
      "key": {
        "uuid": "861524a8_f91bcd14",
        "filename": "media/extractors/tests/ExtractorUnitTest.cpp",
        "patchSetId": 8
      },
      "lineNbr": 670,
      "author": {
        "id": 1108919
      },
      "writtenOn": "2020-05-26T03:37:02Z",
      "side": 1,
      "message": "don\u0027t combine these this way.\n\nif (mDisableTest)\n    return;\n// TODO(...)\nif (mExtractorName \u003d\u003d WAV)\n    return;",
      "range": {
        "startLine": 669,
        "startChar": 4,
        "endLine": 670,
        "endChar": 54
      },
      "revId": "4f60ec8985b05ee92eaaed282a03131b3b4c3e43",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "172de1b6_99eac2c7",
        "filename": "media/extractors/tests/ExtractorUnitTest.cpp",
        "patchSetId": 8
      },
      "lineNbr": 684,
      "author": {
        "id": 1108919
      },
      "writtenOn": "2020-05-26T03:37:02Z",
      "side": 1,
      "message": "need a bug number.\nfile a new bug for this, don\u0027t try to ride it in on an existing bug.",
      "range": {
        "startLine": 684,
        "startChar": 7,
        "endLine": 684,
        "endChar": 21
      },
      "revId": "4f60ec8985b05ee92eaaed282a03131b3b4c3e43",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "78a6ae43_044dc0e2",
        "filename": "media/extractors/tests/ExtractorUnitTest.cpp",
        "patchSetId": 8
      },
      "lineNbr": 751,
      "author": {
        "id": 1108919
      },
      "writtenOn": "2020-05-26T03:37:02Z",
      "side": 1,
      "message": "split these similarly to what I suggest on line 669",
      "range": {
        "startLine": 750,
        "startChar": 7,
        "endLine": 751,
        "endChar": 57
      },
      "revId": "4f60ec8985b05ee92eaaed282a03131b3b4c3e43",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b4bda2f6_7788e7ef",
        "filename": "media/extractors/tests/ExtractorUnitTest.cpp",
        "patchSetId": 8
      },
      "lineNbr": 768,
      "author": {
        "id": 1108919
      },
      "writtenOn": "2020-05-26T03:37:02Z",
      "side": 1,
      "message": "only 1 of the test cases is -1 here.\nthe message should be updated to include the idx being used.",
      "range": {
        "startLine": 768,
        "startChar": 65,
        "endLine": 768,
        "endChar": 74
      },
      "revId": "4f60ec8985b05ee92eaaed282a03131b3b4c3e43",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2a436c20_18f4a863",
        "filename": "media/extractors/tests/ExtractorUnitTest.cpp",
        "patchSetId": 8
      },
      "lineNbr": 774,
      "author": {
        "id": 1108919
      },
      "writtenOn": "2020-05-26T03:37:02Z",
      "side": 1,
      "message": "if we don\u0027t care about status..... how do we know whether the getTrackMetaData() here\ndid the right thing?  is there an exception thrown? [but we don\u0027t catch it]\n\nin patchset 2, we were checking that status returned a non-zero value.",
      "range": {
        "startLine": 774,
        "startChar": 11,
        "endLine": 774,
        "endChar": 81
      },
      "revId": "4f60ec8985b05ee92eaaed282a03131b3b4c3e43",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    }
  ]
}