{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "70cec914_1c3412cd",
        "filename": "media/libstagefright/tests/fuzzers/FrameDecoderFuzzer.cpp",
        "patchSetId": 3
      },
      "lineNbr": 48,
      "author": {
        "id": 1108919
      },
      "writtenOn": "2021-05-16T22:30:48Z",
      "side": 1,
      "message": "this does mean that we\u0027re no longer fuzzing on a \"what happens if\nyou don\u0027t start with an init() call\".",
      "range": {
        "startLine": 48,
        "startChar": 26,
        "endLine": 48,
        "endChar": 42
      },
      "revId": "46aa9184c825a9af2acf025141e06bc952e8025e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d84c1929_3dc23136",
        "filename": "media/libstagefright/tests/fuzzers/FrameDecoderFuzzer.cpp",
        "patchSetId": 3
      },
      "lineNbr": 48,
      "author": {
        "id": 1619864
      },
      "writtenOn": "2022-03-22T08:29:12Z",
      "side": 1,
      "message": "Hi Ray, if the fuzzer doesn\u0027t start with init(), a few variables in the library are not initialized. Hence it leads to Null Pointer de-reference, causing an abort. The current bug is a NPD caused due to the missing init() call",
      "parentUuid": "70cec914_1c3412cd",
      "range": {
        "startLine": 48,
        "startChar": 26,
        "endLine": 48,
        "endChar": 42
      },
      "revId": "46aa9184c825a9af2acf025141e06bc952e8025e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ed5531b1_92d9b7d7",
        "filename": "media/libstagefright/tests/fuzzers/FrameDecoderFuzzer.cpp",
        "patchSetId": 3
      },
      "lineNbr": 48,
      "author": {
        "id": 1108919
      },
      "writtenOn": "2022-05-06T22:50:03Z",
      "side": 1,
      "message": "in this case, the uninitialized variable is mDecoder.   actually, it\u0027s initialized\nto null aka \"i don\u0027t have a decoder yet\".\n\nall of them are in FrameDecoder::extractInternal().\nThe desired fix is that this routine checks for mDecoder\u003d\u003dnull on entry\nand returns an error code.\n\nFrameDecoder::extractorInternal() not checking that mDecoder is non-null is a legitimate problem in that code.",
      "parentUuid": "d84c1929_3dc23136",
      "range": {
        "startLine": 48,
        "startChar": 26,
        "endLine": 48,
        "endChar": 42
      },
      "revId": "46aa9184c825a9af2acf025141e06bc952e8025e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3b92926c_bca56f8a",
        "filename": "media/libstagefright/tests/fuzzers/FrameDecoderFuzzer.cpp",
        "patchSetId": 3
      },
      "lineNbr": 55,
      "author": {
        "id": 1108919
      },
      "writtenOn": "2021-05-16T22:30:48Z",
      "side": 1,
      "message": "by no longer allowing an init() here, \nit would seem that we lose the ability to find out whether the init() call\nreally does properly set everything back to normal.\n\ne.g. we\u0027ll never find out whether 2 init() calls in a row can screw things up.",
      "range": {
        "startLine": 55,
        "startChar": 50,
        "endLine": 55,
        "endChar": 57
      },
      "revId": "46aa9184c825a9af2acf025141e06bc952e8025e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b4f4acfb_e82a9ada",
        "filename": "media/libstagefright/tests/fuzzers/FrameDecoderFuzzer.cpp",
        "patchSetId": 3
      },
      "lineNbr": 55,
      "author": {
        "id": 1619864
      },
      "writtenOn": "2022-03-22T08:29:12Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "3b92926c_bca56f8a",
      "range": {
        "startLine": 55,
        "startChar": 50,
        "endLine": 55,
        "endChar": 57
      },
      "revId": "46aa9184c825a9af2acf025141e06bc952e8025e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0b60e37b_869db516",
        "filename": "media/libstagefright/tests/fuzzers/FrameDecoderFuzzer.cpp",
        "patchSetId": 3
      },
      "lineNbr": 74,
      "author": {
        "id": 1108919
      },
      "writtenOn": "2021-05-16T22:30:48Z",
      "side": 1,
      "message": "should there be a default: which returns here?\n\nmy understanding of the fuzzer is that it will try different values to see\nif it gets a different trace through the fuzzed library.\n\nif values outside of 1..3 [or 0..3 as i suggest above] aren\u0027t going to do anything, it would seem that we want to return at this point so that the fuzzer can try a different value at this point in the process..",
      "range": {
        "startLine": 74,
        "startChar": 11,
        "endLine": 74,
        "endChar": 13
      },
      "revId": "46aa9184c825a9af2acf025141e06bc952e8025e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c7a78a1b_3adabf3b",
        "filename": "media/libstagefright/tests/fuzzers/FrameDecoderFuzzer.cpp",
        "patchSetId": 3
      },
      "lineNbr": 74,
      "author": {
        "id": 1619864
      },
      "writtenOn": "2022-03-22T08:29:12Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "0b60e37b_869db516",
      "range": {
        "startLine": 74,
        "startChar": 11,
        "endLine": 74,
        "endChar": 13
      },
      "revId": "46aa9184c825a9af2acf025141e06bc952e8025e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}