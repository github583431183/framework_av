{
  "comments": [
    {
      "key": {
        "uuid": "bfa21d01_56fc1768",
        "filename": "media/tests/benchmark/tests/BenchmarkTestEnvironment.h",
        "patchSetId": 1
      },
      "lineNbr": 45,
      "author": {
        "id": 1047003
      },
      "writtenOn": "2019-12-09T18:57:41Z",
      "side": 1,
      "message": "Would it be simpler to always use /data/local/tmp/res/ instead of (dirname $argv[0])/res?\nThat will simplify this code.",
      "revId": "b4c836dbb93ef02e9016394a6b907a7e7c460341",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "70567dc3_05aaea93",
        "filename": "media/tests/benchmark/tests/BenchmarkTestEnvironment.h",
        "patchSetId": 1
      },
      "lineNbr": 45,
      "author": {
        "id": 1047003
      },
      "writtenOn": "2019-12-09T22:14:11Z",
      "side": 1,
      "message": "Ignore this for now.\nI will check if there is a way in which we can ensure that the files are pushed to /data/local/tmp/res",
      "parentUuid": "bfa21d01_56fc1768",
      "revId": "b4c836dbb93ef02e9016394a6b907a7e7c460341",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "801b52e7_fe01a6d8",
        "filename": "media/tests/benchmark/tests/BenchmarkTestEnvironment.h",
        "patchSetId": 1
      },
      "lineNbr": 45,
      "author": {
        "id": 1108919
      },
      "writtenOn": "2019-12-10T18:37:53Z",
      "side": 1,
      "message": "I was trying, but the installation scripts in Android.bp (the data:[] clause) and the AndroidTest.xml file  caused the data to get be placed in (dirname $0)/res/",
      "parentUuid": "70567dc3_05aaea93",
      "revId": "b4c836dbb93ef02e9016394a6b907a7e7c460341",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "deaa0fb3_595c92d9",
        "filename": "media/tests/benchmark/tests/C2DecoderTest.cpp",
        "patchSetId": 1
      },
      "lineNbr": 48,
      "author": {
        "id": 1047003
      },
      "writtenOn": "2019-12-09T18:57:41Z",
      "side": 1,
      "message": "As discussed we will submit a follow up CL that will combine checks like these to a single ASSERT_NE() statement.",
      "range": {
        "startLine": 43,
        "startChar": 0,
        "endLine": 48,
        "endChar": 5
      },
      "revId": "b4c836dbb93ef02e9016394a6b907a7e7c460341",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "88939756_cc39b52c",
        "filename": "media/tests/benchmark/tests/ExtractorTest.cpp",
        "patchSetId": 1
      },
      "lineNbr": 33,
      "author": {
        "id": 1047003
      },
      "writtenOn": "2019-12-09T18:57:41Z",
      "side": 1,
      "message": "Can this be removed?",
      "revId": "b4c836dbb93ef02e9016394a6b907a7e7c460341",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3244c211_7d802e59",
        "filename": "media/tests/benchmark/tests/ExtractorTest.cpp",
        "patchSetId": 1
      },
      "lineNbr": 77,
      "author": {
        "id": 1047003
      },
      "writtenOn": "2019-12-09T18:57:41Z",
      "side": 1,
      "message": "This needs to be uncommented.",
      "revId": "b4c836dbb93ef02e9016394a6b907a7e7c460341",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    }
  ]
}