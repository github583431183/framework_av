{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "f36171ef_ebc3fbff",
        "filename": "media/codec2/sfplugin/CCodec.cpp",
        "patchSetId": 2
      },
      "lineNbr": 2276,
      "author": {
        "id": 1392607
      },
      "writtenOn": "2024-03-01T07:21:06Z",
      "side": 1,
      "message": "Thank you for making this change.\n\nI suggest we leave some comments here like other places in the method. \"Handle ROI QP map configuration. Recover the QP map configuration from AMessage as an ABuffer and configure to CCodecBufferChannel as a C2InfoBuffer\".",
      "revId": "e06ced554ff56b3d84277f413e001a9e576815ad",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5f672cc9_a2a8a68f",
        "filename": "media/codec2/sfplugin/CCodec.cpp",
        "patchSetId": 2
      },
      "lineNbr": 2276,
      "author": {
        "id": 1546599
      },
      "writtenOn": "2024-03-01T07:28:35Z",
      "side": 1,
      "message": "Dichen,\nYes. I will add some comments and also move these under flags.\nI wanted to get a quick review from you on whether this approach looks good to you.",
      "parentUuid": "f36171ef_ebc3fbff",
      "revId": "e06ced554ff56b3d84277f413e001a9e576815ad",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5bcba5ae_6b891e29",
        "filename": "media/codec2/sfplugin/CCodec.cpp",
        "patchSetId": 2
      },
      "lineNbr": 2276,
      "author": {
        "id": 1392607
      },
      "writtenOn": "2024-03-01T07:31:28Z",
      "side": 1,
      "message": "Yes LGTM",
      "parentUuid": "5f672cc9_a2a8a68f",
      "revId": "e06ced554ff56b3d84277f413e001a9e576815ad",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "af94816a_20e333b4",
        "filename": "media/codec2/sfplugin/CCodec.cpp",
        "patchSetId": 2
      },
      "lineNbr": 2276,
      "author": {
        "id": 1392607
      },
      "writtenOn": "2024-03-01T07:45:34Z",
      "side": 1,
      "message": "Two more things:\n\n1. About error handling. If user incorrectly set both rects and qp map configurations, or set more than one qp map / rects configurations for one frame, we shall just keep the first one and print some message there. (Or at least leave some notes here.)\n2. Stickiness should also be handled here.\n\nI\u0027m OK we just leave a TODO note here and fix it later, and keep this comment open.",
      "parentUuid": "5bcba5ae_6b891e29",
      "revId": "e06ced554ff56b3d84277f413e001a9e576815ad",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b3fa6a56_d0ff7a40",
        "filename": "media/codec2/sfplugin/CCodec.cpp",
        "patchSetId": 2
      },
      "lineNbr": 2295,
      "author": {
        "id": 1392607
      },
      "writtenOn": "2024-03-01T08:05:24Z",
      "side": 1,
      "message": "Well I think there may be a little mistake: the qp map configurations accumulates every frame here. We should clear the configuration for the previous frame. And I think the logic is the same as we handle stickiness.\n\nStickiness btw should be handled in MediaCodec.cpp because not every frame have the `setParameters()` call.",
      "range": {
        "startLine": 2295,
        "startChar": 1,
        "endLine": 2295,
        "endChar": 80
      },
      "revId": "e06ced554ff56b3d84277f413e001a9e576815ad",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "56cc75a6_b60b23ff",
        "filename": "media/codec2/sfplugin/CCodec.cpp",
        "patchSetId": 2
      },
      "lineNbr": 2295,
      "author": {
        "id": 1150374
      },
      "writtenOn": "2024-03-01T08:46:59Z",
      "side": 1,
      "message": "mInfoBuffers.clear(); \nThe channel is clearing it after moving it to infoBuffers. So i think its fine.",
      "parentUuid": "b3fa6a56_d0ff7a40",
      "range": {
        "startLine": 2295,
        "startChar": 1,
        "endLine": 2295,
        "endChar": 80
      },
      "revId": "e06ced554ff56b3d84277f413e001a9e576815ad",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5eb9d8bc_6d4c39c4",
        "filename": "media/codec2/sfplugin/CCodec.cpp",
        "patchSetId": 2
      },
      "lineNbr": 2295,
      "author": {
        "id": 1392607
      },
      "writtenOn": "2024-03-01T09:25:31Z",
      "side": 1,
      "message": "OK I see.\n\nA little thought, the other configurations through `setParameters()` are stored in `mParamsToBeSet` and are sticky, don\u0027t clear itself after each frame, but the info buffer configurations are stored in `mInfoBuffers` and are non-sticky. We must leave notes about it and see if Lajos is OK about it.\n\nOtherwise if we want to support info buffer in a generic way (that is sticky in general, configurations through `setParameters()` for one frame will be kept in the queue) we need to think about updating the configurations (including but not limited to QP map) if they are present in the info buffer queue instead of clear itself after each frame.\n\nI\u0027d suggest for now we just leave a note, keep this ticket open, and ask Lajos to review. Do you agree?\n\nThank you!",
      "parentUuid": "56cc75a6_b60b23ff",
      "range": {
        "startLine": 2295,
        "startChar": 1,
        "endLine": 2295,
        "endChar": 80
      },
      "revId": "e06ced554ff56b3d84277f413e001a9e576815ad",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "08a6db99_fbacbe50",
        "filename": "media/codec2/sfplugin/CCodec.cpp",
        "patchSetId": 2
      },
      "lineNbr": 2295,
      "author": {
        "id": 1150374
      },
      "writtenOn": "2024-03-01T09:50:07Z",
      "side": 1,
      "message": "mParamsToBeSet is actually getting cleared at every frame. The std::move(mParamsToBeSet) is moving all the entries to configUpdate.\nwork-\u003einput.configUpdate \u003d std::move(mParamsToBeSet);\nAfter this mParamsToBeSet is empty.\n\nOn the other hand if encoder is running in surface mode, there wont be calls to queueInputBuffer, So these entries get accumulated over time consuming a lot of unused memory? There should be guards to drop these entries in surface mode?\nhttps://android-review.googlesource.com/c/platform/frameworks/av/+/2868674/11/media/codec2/sfplugin/CCodecConfig.cpp#1905",
      "parentUuid": "5eb9d8bc_6d4c39c4",
      "range": {
        "startLine": 2295,
        "startChar": 1,
        "endLine": 2295,
        "endChar": 80
      },
      "revId": "e06ced554ff56b3d84277f413e001a9e576815ad",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}