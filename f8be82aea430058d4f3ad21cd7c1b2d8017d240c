{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "45aeb90d_644e54fa",
        "filename": "media/codec2/sfplugin/CCodecBufferChannel.cpp",
        "patchSetId": 1
      },
      "lineNbr": 2073,
      "author": {
        "id": 1156740
      },
      "writtenOn": "2023-11-13T22:30:14Z",
      "side": 1,
      "message": "Why dose not maxDequeueCount and output-\u003emaxDequeueBuffers match?",
      "range": {
        "startLine": 2073,
        "startChar": 0,
        "endLine": 2073,
        "endChar": 74
      },
      "revId": "f8be82aea430058d4f3ad21cd7c1b2d8017d240c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8d25fe44_cd16e322",
        "filename": "media/codec2/sfplugin/CCodecBufferChannel.cpp",
        "patchSetId": 1
      },
      "lineNbr": 2073,
      "author": {
        "id": 1765237
      },
      "writtenOn": "2023-11-13T23:05:06Z",
      "side": 1,
      "message": "surface have to include undequeued buffers(mRenderingDepth). on the other hand, OutputBufferQueue in Codec2Client can only have buffers except for undequeued buffers. that is why maxDequeueCount is differerent.",
      "parentUuid": "45aeb90d_644e54fa",
      "range": {
        "startLine": 2073,
        "startChar": 0,
        "endLine": 2073,
        "endChar": 74
      },
      "revId": "f8be82aea430058d4f3ad21cd7c1b2d8017d240c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a0937d3f_e20c97fe",
        "filename": "media/codec2/sfplugin/CCodecBufferChannel.cpp",
        "patchSetId": 1
      },
      "lineNbr": 2073,
      "author": {
        "id": 1156740
      },
      "writtenOn": "2023-11-13T23:57:16Z",
      "side": 1,
      "message": "In the case L2079 should have output-\u003emaxDequeueBuffers instead?\n(ensuring mRendderingDepth out of maxDequeueCount not being dequeued.)",
      "parentUuid": "8d25fe44_cd16e322",
      "range": {
        "startLine": 2073,
        "startChar": 0,
        "endLine": 2073,
        "endChar": 74
      },
      "revId": "f8be82aea430058d4f3ad21cd7c1b2d8017d240c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d6fea76f_fc44ce54",
        "filename": "media/codec2/sfplugin/CCodecBufferChannel.cpp",
        "patchSetId": 1
      },
      "lineNbr": 2073,
      "author": {
        "id": 1765237
      },
      "writtenOn": "2023-11-14T00:30:56Z",
      "side": 1,
      "message": "https://cs.android.com/android/platform/superproject/main/+/main:frameworks/av/media/codec2/hal/client/output.cpp;l\u003d529;drc\u003d6e944a6a6909f6debd7990c79cc7f18715f26b08\n\nin order to set max count what a client is able to get buffers from surface(refers to upper link) at the same time, I removed mRenderingDepth in maxDequeueCount.\nif output-\u003emaxDequeueBuffers does not include undequeued count, you can set maxDequeueCount same as output-\u003emaxDequeueBuffers.\n\n* FYI, mRenderingDepth is abled to be configured by this. (\nhttps://cs.android.com/android/platform/superproject/main/+/main:frameworks/av/media/codec2/sfplugin/CCodecBufferChannel.cpp;l\u003d185;drc\u003d7ba67075d444bb23bd53af8286eaff647e5ec057)",
      "parentUuid": "a0937d3f_e20c97fe",
      "range": {
        "startLine": 2073,
        "startChar": 0,
        "endLine": 2073,
        "endChar": 74
      },
      "revId": "f8be82aea430058d4f3ad21cd7c1b2d8017d240c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "34ec7e51_4fb69b14",
        "filename": "media/codec2/sfplugin/CCodecBufferChannel.cpp",
        "patchSetId": 1
      },
      "lineNbr": 2073,
      "author": {
        "id": 1156740
      },
      "writtenOn": "2023-11-14T06:36:05Z",
      "side": 1,
      "message": "L2075 is not setting max buffer, it\u0027s setting max dequeued buffer.\n\nmax dequeued buffer \u003d max buffers - min undequeued buffers.\n\nAs long as max dequeued buffer count was set by L2073.\nL2079 should configured with same max dequeued buffer.\n\n1) Initial dequeueed buffer count  withtout queueBuffer \u003d max buffers \n2) cancel buffers \u003d min undequeued buffers.\n\nAfter first queueBuffer to surface your max dequeued buffer count is \u0027max dequeued buffer count\u0027\n\nSo In this code, you seems to mix \u0027max bufers\u0027 and \u0027max dequeued buffer count\u0027.",
      "parentUuid": "d6fea76f_fc44ce54",
      "range": {
        "startLine": 2073,
        "startChar": 0,
        "endLine": 2073,
        "endChar": 74
      },
      "revId": "f8be82aea430058d4f3ad21cd7c1b2d8017d240c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d989d602_4645e1f6",
        "filename": "media/codec2/sfplugin/CCodecBufferChannel.cpp",
        "patchSetId": 1
      },
      "lineNbr": 2073,
      "author": {
        "id": 1156740
      },
      "writtenOn": "2023-11-14T07:13:37Z",
      "side": 1,
      "message": "FYI \nhttps://cs.android.com/android/platform/superproject/main/+/main:frameworks/native/libs/nativewindow/include/vndk/window.h;drc\u003d538cedc381f66f6b07265f82be65e5bc725c7e87;l\u003d69",
      "parentUuid": "34ec7e51_4fb69b14",
      "range": {
        "startLine": 2073,
        "startChar": 0,
        "endLine": 2073,
        "endChar": 74
      },
      "revId": "f8be82aea430058d4f3ad21cd7c1b2d8017d240c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "456c52ae_708dad8e",
        "filename": "media/codec2/sfplugin/CCodecBufferChannel.cpp",
        "patchSetId": 1
      },
      "lineNbr": 2073,
      "author": {
        "id": 1765237
      },
      "writtenOn": "2023-11-15T01:02:26Z",
      "side": 1,
      "message": "ACodec considers undequeued buffer and it added into the number of total buffers.\nhttps://cs.android.com/android/platform/superproject/main/+/main:frameworks/av/media/libstagefright/ACodec.cpp;l\u003d1204;drc\u003db90912eb8de815539033e66eed07bee090beff91\n(* max buffer count :\u003d min buffers(required by component) + min undequeued buffers(required by surface flinger))\n\nmeanwhile, CCodec does not consider it. I mean that CCodec does not query MIN_UNDEQUEUED_BUFFERS.\nCCodec just sets the max number of dequeued buffers with mRenderingDepth.\nso, I think mRenderingDepth means a role of min undequeued buffers.\n\nin order to support blocking operation at fetchGraphicBlock() with C2Fence since C2 HIDL 1.2,\nOutputBufferQueue should know the number of actual dequeueable buffers what does not include undequeued buffers.\nthat is why I would like to assert that actual dequeueable buffers has to be set to OutputBufferQueue.\non the other hands, max buffers what includes undequeued buffers have to be set to surface for managing total count.\n\ncurrently, OutputBuffersQueue knows there is dequeueable buffers,\nand it tries to call dequeueBuffer(). but, the result of dequeueBuffer() is failed.\nso, c2 component doesn\u0027t get valid C2Fence and it affects that blocking operation cannot be supported by fetchGraphicBlock().\n\nin my opinion,\nit would be better than now, if CCodecBufferChannel calls setBufferCount() of surface instead of setMaxDequeueBufferCount() and\nCCodecBufferChannel does not consider mRenderingDepth,\nbecause Surface considers undequeued buffers at setBufferCount().\n\nanyway, you can see setBufferCount() and it hope to be you help understanding what I mean to fix through this patch.\nhttps://cs.android.com/android/platform/superproject/main/+/main:frameworks/native/libs/gui/Surface.cpp;l\u003d2013;drc\u003d0f0c9770c8ff2e86c2c91106d6808bec557279f9",
      "parentUuid": "d989d602_4645e1f6",
      "range": {
        "startLine": 2073,
        "startChar": 0,
        "endLine": 2073,
        "endChar": 74
      },
      "revId": "f8be82aea430058d4f3ad21cd7c1b2d8017d240c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e79333a5_abc561f3",
        "filename": "media/codec2/sfplugin/CCodecBufferChannel.cpp",
        "patchSetId": 1
      },
      "lineNbr": 2073,
      "author": {
        "id": 1156740
      },
      "writtenOn": "2023-11-15T03:28:12Z",
      "side": 1,
      "message": "I understand basic idea. But to me this is kinda wrong.\nIn this case surface-\u003esetMaxDequeuedBufferCount() should be replaced with surface-\u003esetBufferCount() as you said using the same number.\n\n1) Could you experiment with the replacement?\n2) Even undequeued is kept inside surface, still rendering delay might be affect to allocate buffer, So you are saying that if we keep undequeued # restriction, after queue, dequeue can be done immediately?\n\nI will discuss this /w Graphics folk a little bit.\nThanks for the heads up.",
      "parentUuid": "456c52ae_708dad8e",
      "range": {
        "startLine": 2073,
        "startChar": 0,
        "endLine": 2073,
        "endChar": 74
      },
      "revId": "f8be82aea430058d4f3ad21cd7c1b2d8017d240c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "449618d4_e9900b61",
        "filename": "media/codec2/sfplugin/CCodecBufferChannel.cpp",
        "patchSetId": 1
      },
      "lineNbr": 2073,
      "author": {
        "id": 1942201
      },
      "writtenOn": "2023-11-15T06:19:15Z",
      "side": 1,
      "message": "`so, I think mRenderingDepth means a role of min undequeued buffers.`\nI agree with this and I think currently CCodec is calling setMaxDequeueBufferCount() with extra mRenderingDepth(3) frames. \n\nThat\u0027s why I requested Wonsik to make mRenderingDepth configurable and hopefully change it to 0. The goal is the same with change setMaxDequeuedBufferCount() to setBufferCount() but using a different approach.\n\nAnd if we get rid of mRenderingDepth, it will not be wrong to set max buffers directly.",
      "parentUuid": "e79333a5_abc561f3",
      "range": {
        "startLine": 2073,
        "startChar": 0,
        "endLine": 2073,
        "endChar": 74
      },
      "revId": "f8be82aea430058d4f3ad21cd7c1b2d8017d240c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "76c5bb7f_21f64c89",
        "filename": "media/codec2/sfplugin/CCodecBufferChannel.cpp",
        "patchSetId": 1
      },
      "lineNbr": 2073,
      "author": {
        "id": 1156740
      },
      "writtenOn": "2023-11-15T06:49:43Z",
      "side": 1,
      "message": "L2075 and L2079 should be done with the same number or \nL2075 should be done with setMaxBuffer.\nThat\u0027s what I meant.\n\nThis codes try to dequeue only maxDequeueCount(not includeing mRenderingDepth aka min undequeued) at most.\nWhich is correct.\n\nBut This code configures IGBP to max dequeue to output-\u003emaxDequeueBuffers.\nSo the max # of allocation will be output-\u003emaxDequeueBuffers + min Undequeued.\n\nIn the case min undequeued of buffers could be wasted.\nMaybe BQ optimizes not to waste that memory. but to me there is a risk of over-allocating\n\nBut again you are right sicne we are already over allocating by mRendeingDepth.\nThis idea does not harm if it is compared to current status quo.\n\nBut we\u0027d better fix it properly.\nSo I asked to experiment two things in the previous comments.\nLet\u0027s find a better way.",
      "parentUuid": "449618d4_e9900b61",
      "range": {
        "startLine": 2073,
        "startChar": 0,
        "endLine": 2073,
        "endChar": 74
      },
      "revId": "f8be82aea430058d4f3ad21cd7c1b2d8017d240c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}