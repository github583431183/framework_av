{
  "comments": [
    {
      "key": {
        "uuid": "724dcc4d_03af6f15",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1108919
      },
      "writtenOn": "2020-07-08T19:39:46Z",
      "side": 1,
      "message": "let\u0027s verify with enh@ about the names for the tid field.\n\nwe know it works for the configs we\u0027ve tried. Let\u0027s make sure we haven\u0027t overlooked some other configuration or rules for the naming of that field.",
      "revId": "4134762bcb7b1efb19527ef1ea53b406867ac03c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "696ab973_027d7876",
        "filename": "media/libwatchdog/Watchdog.cpp",
        "patchSetId": 2
      },
      "lineNbr": 34,
      "author": {
        "id": 1574221
      },
      "writtenOn": "2020-07-08T22:01:05Z",
      "side": 1,
      "message": "This seems to be a non-standard field, at least as per\nhttps://linux.die.net/man/7/sigevent\n\nMaybe try to understand why the standard one is missing from our host library?",
      "range": {
        "startLine": 34,
        "startChar": 4,
        "endLine": 34,
        "endChar": 7
      },
      "revId": "4134762bcb7b1efb19527ef1ea53b406867ac03c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b8e19ce2_780de193",
        "filename": "media/libwatchdog/Watchdog.cpp",
        "patchSetId": 2
      },
      "lineNbr": 34,
      "author": {
        "id": 1570907
      },
      "writtenOn": "2020-07-09T04:55:50Z",
      "side": 1,
      "message": "Include sequence for Android - \n\"bionic/libc/kernel/uapi/linux/signal.h\" -\u003e \"bionic/libc/kernel/uapi/asm-generic/siginfo.h\" -\u003e which has macro \u0027sigev_notify_thread_id\u0027 defined\n\n\nHowever, on host two versions of \u0027signal.h\u0027 are present.\nVersion 1: \"prebuilts/gcc/linux-x86/host/x86_64-linux-glibc2.17-4.8/sysroot/usr/include/signal.h\" -\u003e \"prebuilts/gcc/linux-x86/host/x86_64-linux-glibc2.17-4.8/sysroot/usr/include/x86_64-linux-gnu/bits/siginfo.h\" -\u003e which DOES NOT have macro \u0027sigev_notify_thread_id\u0027 defined\n\n\nVersion 2: \"prebuilts/gcc/linux-x86/host/x86_64-linux-glibc2.17-4.8/sysroot/usr/include/linux/signal.h\" -\u003e \"prebuilts/gcc/linux-x86/host/x86_64-linux-glibc2.17-4.8/sysroot/usr/include/asm-generic/siginfo.h\" -\u003e which has macro \u0027sigev_notify_thread_id\u0027 defined\n\n\nVersion 1 of signal.h gets picked up leading to macro \u0027sigev_notify_thread_id\u0027 not being present. \n \n\nIncluding \u0027linux/signal.h\u0027 instead of \u0027signal.h\u0027 results in redefintion errors in time.h due to it again being present in two places - \u0027sysroot/usr/include\u0027 and \u0027sysroot/usr/include/linux\u0027 (similar to signal.h)\n\n\nHence there are 3 options to fix the issue:-\n1. Resolve the signal.h issue in sysroot (or)\n2. Update the Android.bp to define the macro for host only [Patchset 1] (or)\n3. Update the code to use \u0027_sigev_un._tid\u0027 directly instead of macro \u0027sigev_notify_thread_id\u0027 [Patchset 2]",
      "parentUuid": "696ab973_027d7876",
      "range": {
        "startLine": 34,
        "startChar": 4,
        "endLine": 34,
        "endChar": 7
      },
      "revId": "4134762bcb7b1efb19527ef1ea53b406867ac03c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ba137b1e_f8694a1a",
        "filename": "media/libwatchdog/Watchdog.cpp",
        "patchSetId": 2
      },
      "lineNbr": 34,
      "author": {
        "id": 1574221
      },
      "writtenOn": "2020-07-09T17:57:09Z",
      "side": 1,
      "message": "Thanks! I\u0027m actually in favor of option (2) above (PS 1), since it at least keeps the code compliant. I\u0027d add a comment in the build file explaining this is a workaround to what seems to be a bug in the glibc headers.",
      "parentUuid": "b8e19ce2_780de193",
      "range": {
        "startLine": 34,
        "startChar": 4,
        "endLine": 34,
        "endChar": 7
      },
      "revId": "4134762bcb7b1efb19527ef1ea53b406867ac03c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ffc7dfd9_9270730b",
        "filename": "media/libwatchdog/Watchdog.cpp",
        "patchSetId": 2
      },
      "lineNbr": 34,
      "author": {
        "id": 1108919
      },
      "writtenOn": "2020-07-09T18:17:54Z",
      "side": 1,
      "message": "[i didn\u0027t like the option 2 (which is in patchset 1).\ni had suggested that we did use an #ifdef to change the block of code; i would go along with the #ifdef being to choose a different #include file...",
      "parentUuid": "b8e19ce2_780de193",
      "range": {
        "startLine": 34,
        "startChar": 4,
        "endLine": 34,
        "endChar": 7
      },
      "revId": "4134762bcb7b1efb19527ef1ea53b406867ac03c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9395c169_2beb095c",
        "filename": "media/libwatchdog/Watchdog.cpp",
        "patchSetId": 2
      },
      "lineNbr": 34,
      "author": {
        "id": 1574221
      },
      "writtenOn": "2020-07-09T18:29:52Z",
      "side": 1,
      "message": "I\u0027m fine with this.",
      "parentUuid": "ffc7dfd9_9270730b",
      "range": {
        "startLine": 34,
        "startChar": 4,
        "endLine": 34,
        "endChar": 7
      },
      "revId": "4134762bcb7b1efb19527ef1ea53b406867ac03c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "94f5adc7_303ad729",
        "filename": "media/libwatchdog/Watchdog.cpp",
        "patchSetId": 2
      },
      "lineNbr": 34,
      "author": {
        "id": 1108919
      },
      "writtenOn": "2020-07-09T18:35:46Z",
      "side": 1,
      "message": "if we\u0027re going to do a macro in the Android.bp as a workaround for what appears to be\nan issue with sysroot headers -- make sure we have a bug against those headers so that we can\nmake this workaround be as short lived as possible.",
      "parentUuid": "ffc7dfd9_9270730b",
      "range": {
        "startLine": 34,
        "startChar": 4,
        "endLine": 34,
        "endChar": 7
      },
      "revId": "4134762bcb7b1efb19527ef1ea53b406867ac03c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "07bedc39_e5dd01ae",
        "filename": "media/libwatchdog/Watchdog.cpp",
        "patchSetId": 2
      },
      "lineNbr": 34,
      "author": {
        "id": 1047003
      },
      "writtenOn": "2020-07-09T19:07:36Z",
      "side": 1,
      "message": "Ray, Ytai,\nThanks.\nI have filed b/160890898 to track the changes required in header files.\n\nVasu,\nPlease revert to patchset 1 and add a comment in Android.bp with a \n// TODO(b/160890898) - Remove the following once b/160890898 is fixed",
      "parentUuid": "94f5adc7_303ad729",
      "range": {
        "startLine": 34,
        "startChar": 4,
        "endLine": 34,
        "endChar": 7
      },
      "revId": "4134762bcb7b1efb19527ef1ea53b406867ac03c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "79a478cc_8025ab8e",
        "filename": "media/libwatchdog/Watchdog.cpp",
        "patchSetId": 2
      },
      "lineNbr": 34,
      "author": {
        "id": 1570907
      },
      "writtenOn": "2020-07-10T06:07:42Z",
      "side": 1,
      "message": "Done. Updated to patchset 1 and comment added in Android.bp",
      "parentUuid": "07bedc39_e5dd01ae",
      "range": {
        "startLine": 34,
        "startChar": 4,
        "endLine": 34,
        "endChar": 7
      },
      "revId": "4134762bcb7b1efb19527ef1ea53b406867ac03c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a2067150_324a44d9",
        "filename": "media/libwatchdog/Watchdog.cpp",
        "patchSetId": 2
      },
      "lineNbr": 34,
      "author": {
        "id": 1047003
      },
      "writtenOn": "2020-07-10T14:14:36Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "79a478cc_8025ab8e",
      "range": {
        "startLine": 34,
        "startChar": 4,
        "endLine": 34,
        "endChar": 7
      },
      "revId": "4134762bcb7b1efb19527ef1ea53b406867ac03c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}