cc_defaults {
    name: "libaaudio_tests_defaults",
    cflags: [
        "-Wall",
        "-Werror",
    ],
}

cc_test {
    name: "test_aaudio_marshalling",
    defaults: ["libaaudio_tests_defaults"],
    srcs: ["test_marshalling.cpp"],
    shared_libs: [
        "libaaudio",
        "libbinder",
        "libcutils",
        "libutils",
    ],
}

cc_test {
    name: "test_block_adapter",
    defaults: ["libaaudio_tests_defaults"],
    srcs: ["test_block_adapter.cpp"],
    shared_libs: ["libaaudio"],
}

cc_test {
    name: "test_timestamps",
    srcs: ["test_timestamps.cpp"],
    header_libs: ["libaaudio_example_utils"],
    shared_libs: ["libaaudio"],
}

cc_test {
    name: "test_linear_ramp",
    defaults: ["libaaudio_tests_defaults"],
    srcs: ["test_linear_ramp.cpp"],
    shared_libs: ["libaaudio"],
}

cc_test {
    name: "test_open_params",
    defaults: ["libaaudio_tests_defaults"],
    srcs: ["test_open_params.cpp"],
    shared_libs: [
        "libaaudio",
        "libbinder",
        "libcutils",
        "libutils",
    ],
}

cc_test {
    name: "test_no_close",
    defaults: ["libaaudio_tests_defaults"],
    srcs: ["test_no_close.cpp"],
    shared_libs: [
        "libaaudio",
        "libbinder",
        "libcutils",
        "libutils",
    ],
}

cc_test {
    name: "test_aaudio_recovery",
    defaults: ["libaaudio_tests_defaults"],
    srcs: ["test_recovery.cpp"],
    shared_libs: [
        "libaaudio",
        "libbinder",
        "libcutils",
        "libutils",
    ],
}

cc_test {
    name: "test_n_streams",
    defaults: ["libaaudio_tests_defaults"],
    srcs: ["test_n_streams.cpp"],
    shared_libs: [
        "libaaudio",
        "libbinder",
        "libcutils",
        "libutils",
    ],
}
