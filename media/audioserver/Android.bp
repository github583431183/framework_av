package {
    // See: http://go/android-license-faq
    // A large-scale-change added 'default_applicable_licenses' to import
    // all of the 'license_kinds' from "frameworks_av_license"
    // to get the below license kinds:
    //   SPDX-license-identifier-Apache-2.0
    default_applicable_licenses: ["frameworks_av_license"],
}

cc_binary {
    name: "audioserver",

    srcs: [
        "main_audioserver.cpp",
    ],

    cflags: [
        "-Wall",
        "-Werror",
    ],

    header_libs: [
        "libaudiohal_headers",
        "libmedia_headers",
        "libmediametrics_headers",
    ],

    defaults: [
        "latest_android_media_audio_common_types_cpp_shared",
    ],

    static_libs: [
        "libaaudioservice",
        "libaudioflinger",
        "libaudiopolicyservice",
        "libaudiospdif",
        "libmedialogservice",
        "libnbaio",
        "libaudiopolicycomponents",
        "libeffectsconfig",
    ],

    shared_libs: [
        "aaudio-aidl-cpp",
        "audioclient-types-aidl-cpp",
        "audioflinger-aidl-cpp",
        "audiopolicy-aidl-cpp",
        "audiopolicy-types-aidl-cpp",
        "av-types-aidl-cpp",
        "capture_state_listener-aidl-cpp",
        "effect-aidl-cpp",
        "framework-permission-aidl-cpp",
        "libaaudio_internal",
        "libactivitymanager_aidl",
        "libaudioclient",
        "libaudioclient",
        "libaudioclient_aidl_conversion",
        "libaudiofoundation",
        "libaudiohal",
        "libaudiopolicy",
        "libaudiopolicymanagerdefault",
        "libaudioprocessing",
        "libaudioutils",
        "libbinder",
        "libcutils",
        "libhardware_legacy",
        "libheadtracking",
        "libheadtracking-binding",
        "libhidlbase",
        "liblog",
        "libmedia",
        "libmedia_helper",
        "libmediametrics",
        "libmediautils",
        "libmemunreachable",
        "libnblog",
        "libpermission",
        "libpowermanager",
        "libsensor",
        "libsensorprivacy",
        "libshmemcompat",
        "libstagefright_foundation",
        "libutils",
        "libvibrator",
        "libxml2",
        "packagemanager_aidl-cpp",
        "spatializer-aidl-cpp",
    ],

    // TODO check if we still need all of these include directories
    include_dirs: [
        "external/sonic",
        "frameworks/av/media/libaaudio/include",
        "frameworks/av/media/libaaudio/src",
        "frameworks/av/media/libaaudio/src/binding",
        "frameworks/av/services/audioflinger",
        "frameworks/av/services/audiopolicy",
        "frameworks/av/services/audiopolicy/common/include",
        "frameworks/av/services/audiopolicy/common/managerdefinitions/include",
        "frameworks/av/services/audiopolicy/engine/interface",
        "frameworks/av/services/audiopolicy/service",
        "frameworks/av/services/medialog",
        "frameworks/av/services/oboeservice", // TODO oboeservice is the old folder name for aaudioservice. It will be changed.


    ],

    init_rc: ["audioserver.rc"],
}
